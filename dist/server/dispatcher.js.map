{"version":3,"sources":["../../src/server/dispatcher.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;IAEM,U;AAEJ,wBAA0B;AAAA,QAAd,OAAc,yDAAJ,EAAI;AAAA;;AACxB,SAAK,OAAL,GAAe,OAAf;AACD;;;;6BAEQ,U,EAAY,U,EAAY;AAAA;;AAE/B;AAAA,6EAAO,iBAAO,GAAP,EAAY,GAAZ,EAAiB,IAAjB;AAAA,cAED,MAFC,EAkBD,GAlBC,EAmBD,MAnBC,EAsBC,MAtBD;AAAA;AAAA;AAAA;AAAA;AAED,wBAFC,GAEQ,WAAW,UAAX,CAFR;;;AAIL,sBAAG,IAAI,KAAP,EAAc;AACZ,4BAAQ,KAAR,CAAc,OAAd,EAAuB,IAAI,KAA3B;;;;AAIA,wBAAI,IAAJ,CAAS,KAAT,GAAiB,IAAI,KAAJ,CAAU,GAAV,CAAe,UAAC,IAAD,EAAU;AACxC,2BAAK,YAAL,GAAwB,KAAK,QAA7B;AACA,2BAAK,gBAAL,GAAwB,KAAK,YAAL,CAAkB,OAAlB,CAA0B,IAA1B,EAAgC,GAAhC,CAAxB;AACA,2BAAK,cAAL,GAAwB,gBAAgB,IAAhB,CAAqB,IAA7C;;AAEA,6BAAO,IAAP;AACD,qBANgB,CAAjB;AAOD;;AAEG,qBAlBC,GAkBQ,EAlBR,EAmBD,MAnBC,GAmBQ,GAnBR;AAAA;AAAA;AAAA,yBAsBgB,OAAO,IAAP,CAAY,UAAZ,EAAwB,GAAxB,CAtBhB;;AAAA;AAsBC,wBAtBD;;;AAwBH,sBAAG,IAAI,MAAJ,IAAc,KAAjB,EAAwB,SAAS,GAAT;;;AAGxB,sBAAG,cAAc,QAAjB,EAA2B;AACzB,wBAAI,WAAW,IAAf,IAAuB,MAAvB;AACD;;AAFD,uBAIK;AACH,4BAAM,MAAN;AACD;;AAED,sBAAI,MAAJ,CAAW,MAAX,EAAmB,IAAnB,CAAwB;AACtB,4BADsB;AAEtB;AAFsB,mBAAxB;AAnCG;AAAA;;AAAA;AAAA;AAAA;;AAyCH,iCAAO,KAAP,aAAuB,UAAvB;AACA,0BAAQ,KAAR,CAAc,YAAI,KAAlB;;AAEA,2BAAS,GAAT;;AAEA,sBAAI,MAAJ,CAAW,MAAX,EAAmB,IAAnB,CAAwB;AACtB;AADsB,mBAAxB;;AA9CG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AAAA;AAAA;AAAA;AAAA;AAqDD;;;;;kBAIY,U","file":"dispatcher.js","sourcesContent":["import {chalk, logger} from '../lib/logger'\n\nclass Dispatcher {\n\n  constructor(options = {}) {\n    this.options = options\n  }\n\n  dispatch(controller, actionName) {\n\n    return async (req, res, next) => {\n\n      var action = controller[actionName]\n\n      if(req.files) {\n        console.error('files', req.files)\n        /*\n        TODO: what's a better way to handle this?\n        */\n        req.body.files = req.files.map( (file) => {\n          file.diskFileName     = file.filename\n          file.originalFileName = file.originalname.replace(/ /g, '_')\n          file.storageAdaptor   = storageAdaptors.disk.name\n\n          return file\n        })\n      }\n\n      var pkg    = {},\n          status = 200\n\n      try {\n        var result = await action.call(controller, req)\n\n        if(req.method == 'PUT') status = 201\n\n        // return collection name\n        if(actionName == 'getAll') {\n          pkg[controller.name] = result\n        }\n        // return item\n        else {\n          pkg = result\n        }\n\n        res.status(status).json({\n          pkg,\n          status\n        })\n      }\n      catch(err) {\n        logger.error(`Action ${actionName} failed`)\n        console.error(err.stack)\n\n        status = 403\n\n        res.status(status).json({\n          status\n        })\n      }\n\n    }\n\n  }\n\n}\n\nexport default Dispatcher\n"]}