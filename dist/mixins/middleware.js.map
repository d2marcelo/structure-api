{"version":3,"sources":["../../src/mixins/middleware.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;IAAM,U;;;;;;;yBAEC,G,EAAK,G,EAAK;;AAEb,UAAG,GAAH,EAAQ;AACN,eAAO,KAAK,IAAL,CAAU,OAAV,EAAmB,GAAnB,CAAP;AACD;;;AAGD,UAAG,KAAK,gBAAL,CAAsB,MAAtB,IAAgC,KAAK,sBAAxC,EAAgE;;AAE9D,YAAG,KAAK,IAAR,EAAc,KAAK,IAAL,CAAU,KAAV,EAAiB,GAAjB;;;AAGd,aAAK,sBAAL,GAA8B,CAA9B;AACA,aAAK,gBAAL,GAAwB,EAAxB;;AAEA;AAED;;;AAGD,WAAK,sBAAL;;AAEA,UAAI,iBAAiB,KAAK,gBAAL,CAAsB,KAAK,sBAAL,GAA8B,CAApD,CAArB;;;AAGA,UAAG,cAAH,EAAmB;;AAEjB,uBAAe,IAAf,CAAoB,IAApB,EAA0B,GAA1B,EAA+B,KAAK,IAAL,CAAU,IAAV,CAAe,IAAf,CAA/B;AAED;;;AAJD,WAOK;AACH,iBAAO,KAAK,IAAL,CAAU,OAAV,EAAmB,GAAnB,CAAP;AACD;AAEF;;;wBAEG,E,EAAI;;;AAGN,UAAG,CAAC,KAAK,sBAAT,EAAiC,KAAK,sBAAL,GAA8B,CAA9B;AACjC,UAAG,CAAC,KAAK,gBAAT,EAAiC,KAAK,gBAAL,GAAwB,EAAxB;;AAEjC,WAAK,gBAAL,CAAsB,IAAtB,CAA2B,EAA3B;;AAEA,aAAO,IAAP;AAED;;;;;kBAIY,U","file":"middleware.js","sourcesContent":["class Middleware {\n\n  next(err, pkg) {\n\n    if(err) {\n      return this.emit('error', err)\n    }\n\n    // Have all the middleware run?\n    if(this.middlewareLayers.length == this.currentMiddlewareLayer) {\n\n      if(this.emit) this.emit('end', pkg)\n\n      // Reset so middleware can make another run if need be\n      this.currentMiddlewareLayer = 0\n      this.middlewareLayers = []\n\n      return\n\n    }\n\n    // There are more middleware, go to next one\n    this.currentMiddlewareLayer++\n\n    var nextMiddleware = this.middlewareLayers[this.currentMiddlewareLayer - 1]\n\n    // The next middleware was found\n    if(nextMiddleware) {\n\n      nextMiddleware.call(this, pkg, this.next.bind(this))\n\n    }\n\n    // The next middleware was not found; this is a developer error\n    else {\n      return this.emit('error', err)\n    }\n\n  }\n\n  use(fn) {\n\n    // These need to be set here because we can't set them in the constructor and if we set them on the prototype, then all models would share the same middleware\n    if(!this.currentMiddlewareLayer) this.currentMiddlewareLayer = 0\n    if(!this.middlewareLayers)       this.middlewareLayers = []\n\n    this.middlewareLayers.push(fn)\n\n    return this\n\n  }\n\n}\n\nexport default Middleware\n"]}