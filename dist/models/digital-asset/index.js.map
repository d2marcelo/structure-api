{"version":3,"sources":["../../../src/models/digital-asset/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import {chalk, logger} from '../../lib/logger'\nimport fs              from 'fs'\nimport Model           from '../root'\nimport request         from 'superagent'\nimport r               from '../../lib/database/driver'\n\nclass DigitalAssetModel extends Model {\n\n  constructor(options = {}) {\n    super(Object.assign({}, {\n      name: 'digital-assets',\n\n      permissions: {\n        create:  ['user'],\n        delete:  ['admin'],\n        read:    ['organization'],\n        replace: ['admin'],\n        update:  ['user'],\n      },\n      relations: {\n        belongsTo: [\n          {\n            Node: 'Organization',\n            foreignKey: 'id',\n            localField: 'organization',\n            localKey: 'organizationId'\n          }\n        ],\n        hasMany: [\n          {\n            Node: 'Taxonomy',\n            foreignKey: 'id',\n            localField: 'taxonomys',\n            localKey: 'taxonomysId'\n          },\n        ]\n      },\n      schema: {\n        desc: {\n          type: 'string'\n        },\n        title: {\n          type: 'string'\n        }\n      }\n    }, options))\n  }\n\n  create(req) {\n    var pkg = req.body\n\n    return new Promise( (resolve, reject) => {\n\n      var createFilesPromises = []\n\n      pkg.files.forEach( (file) => {\n        var insert = {\n          diskFileName: file.diskFileName,\n          mimetype: file.mimetype,\n          originalFileName: file.originalFileName,\n          originalSize: file.size,\n          storageAdaptor: file.storageAdaptor\n        }\n\n        createFilesPromises.push(Model.prototype.create.call(this, {body: insert}))\n      })\n\n      Promise.all(createFilesPromises)\n        .then( (values) => {\n          //console.error('create values', values)\n          values = this.pkgAll(values)\n          resolve(values)\n        })\n        .catch( (err) => reject(err))\n\n    })\n\n  }\n\n  embedScript(type) {\n\n    switch(type) {\n\n      case 'imgur':\n        return `<script async src=\"//s.imgur.com/min/embed.js\" charset=\"utf-8\"></script>`\n\n      case 'instagram':\n        return `<script async defer src=\\\"//platform.instagram.com/en_US/embeds.js\\\"></script>`\n\n      case 'pinterest':\n        return `<script async defer src=\"//assets.pinterest.com/js/pinit.js\"></script>`\n\n      case 'reddit':\n        return `<script async src=\\\"https://www.redditstatic.com/comment-embed.js\\\"></script>`\n\n      case 'twitter':\n        return `<script async src=\\\"//platform.twitter.com/widgets.js\\\" charset=\\\"utf-8\\\"></script>`\n\n      case 'tumblr':\n        return `<script async src=\\\"https://secure.assets.tumblr.com/post.js\\\"></script>`\n\n      default:\n        return ''\n\n    }\n\n  }\n\n  fetchEmbed(req) {\n    var type = req.params.type,\n        url  = ''\n\n    return new Promise( (resolve, reject) => {\n\n      switch(type) {\n\n        case 'aol':\n          url = `http://api.embed.ly/1/oembed?url=${req.params.url}`\n          break\n\n        case 'dailymotion':\n          url = `http://www.dailymotion.com/services/oembed?url=${req.params.url}`\n          break\n\n        case 'deviantart':\n          url = `http://backend.deviantart.com/oembed?url=${req.params.url}`\n          break\n\n        case 'flickr':\n          url = `http://www.flickr.com/services/oembed/?url=${req.params.url}`\n          break\n\n        case 'funnyordie':\n          url = `http://www.funnyordie.com/oembed.json?url=${req.params.url}`\n          break\n\n        case 'getty':\n          url = ` http://embed.gettyimages.com/oembed?url=${req.params.url}`\n          break\n\n        case 'gfycat':\n          url = `https://api.gfycat.com/v1/oembed?url=${req.params.url}`\n          break\n\n        case 'hulu':\n          url = `http://www.hulu.com/api/oembed.xml?url=${req.params.url}`\n          break\n\n        case 'ifttt':\n          url = `https://ifttt.com/oembed?url=${req.params.url}`\n          break\n\n        case 'imgur':\n          url = `http://api.imgur.com/oembed?url=${req.params.url}`\n          break\n\n        case 'instagram':\n          url = `https://api.instagram.com/oembed?url=${req.params.url}`\n          break\n\n        case 'kickstarter':\n          url = `http://www.kickstarter.com/services/oembed?url=${req.params.url}`\n          break\n\n        case 'meetup':\n          url = `https://api.meetup.com/oembed?format=json&url=${req.params.url}`\n          break\n\n        case 'newyorktimes':\n          url = `https://www.nytimes.com/svc/oembed/html/?url=${req.params.url}`\n          break\n\n        case 'pinterest':\n          return resolve({\n            html: `<a data-pin-do=\"embedPin\" data-pin-width=\"${(req.body.size || 'small')}\" href=\"${req.params.url}\"></a>`,\n            pinSize: req.body.size || 'small',\n            script: this.embedScript(req.params.type)\n          })\n\n        case 'soundcloud':\n          url = `https://soundcloud.com/oembed?url=${req.params.url}`\n          break\n\n        case 'reddit':\n          url = `https://www.reddit.com/oembed?url=${req.params.url}`\n          break\n\n        case 'twitter':\n          url = `https://api.twitter.com/1/statuses/oembed.json?url=${req.params.url}`\n          break\n\n        case 'tumblr':\n          url = `http://www.tumblr.com/oembed/1.0?url=${req.params.url}`\n          break\n\n        case 'ustream':\n          url = `http://www.ustream.tv/oembed?url=${req.params.url}`\n          break\n\n        case 'vimeo':\n          url = `https://vimeo.com/api/oembed.json?url=${req.params.url}`\n          break\n\n        case 'vine':\n          url = `https://vine.co/oembed.json?url=${req.params.url}`\n          break\n\n        case 'youtube':\n          url = `https://www.youtube.com/oembed?url=${req.params.url}?v=${req.params.v}&format=json`\n          break\n\n        default:\n          return Promise.reject()\n      }\n\n      request\n        .get(url)\n        .end( (err, res) => {\n\n          if(err) {\n            logger.error('There was an error fetching the embed')\n            console.error(err)\n            return reject(err)\n          }\n\n          return resolve(Object.assign(res.body, {\n            script: this.embedScript(type)\n          }))\n\n        })\n\n    })\n\n  }\n\n  getAll(req) {\n    return new Promise( (resolve, reject) => {\n\n      Model.prototype.getAll.call(this)\n        .then( (values) => {\n          values = this.pkgAll(values)\n\n          resolve(values)\n        })\n        .catch((err) => {\n          reject(err)\n        })\n\n    })\n  }\n\n  pkg(value) {\n\n    value.src = {\n      url: `http://${process.env.HOST}/api/v0.1/${this.entityName}/${value.sid}/view`\n    }\n\n    return value\n\n  }\n\n  pkgAll(values) {\n    values = values.map(this.pkg.bind(this))\n\n    return values\n  }\n\n  view(req, res) {\n\n    var id = req.params.id\n\n    /*\n    TODO:\n    This is the disk adapter - need to account for each adaptor\n    */\n    this.getById(id)\n      .then( (doc) => {\n        const filePath = `/tmp/uploads/${doc.diskFileName}`\n\n        res.sendFile(filePath)\n      })\n      .catch((err) => {\n        logger.error('Could not find asset', err)\n      })\n\n  }\n\n}\n\nexport default DigitalAssetModel\n"]}