{"version":3,"sources":["../../../src/models/auth/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import {chalk, logger} from '../../lib/logger'\nimport Model           from '../root'\nimport PasswordService from '../../services/password'\nimport r               from '../../lib/database/driver'\nimport TokenService    from '../../services/token'\n\nclass AuthModel extends Model {\n\n  constructor(options = {}) {\n    super(Object.assign({}, {\n      name: 'auth',\n\n      permissions: {\n        create:  ['user', 'admin'],\n        delete:  ['admin'],\n        read:    ['organization', 'admin'],\n        replace: ['admin'],\n        update:  ['admin'],\n      },\n      relations: {\n        belongsTo: [\n          {\n            Node: 'User',\n            foreignKey: 'id',\n            localField: 'user',\n            localKey: 'userId'\n          }\n        ]\n      },\n      schema: {\n        authenticatedAt: {\n          type: 'date'\n        }\n      }\n    }, options))\n  }\n\n  getByEmail(email) {\n    return r.db(process.env.RETHINK_DB_NAME).table('users').filter({email}).limit(1)\n  }\n\n  getByUsername(username) {\n    return new Promise( async (resolve, reject) => {\n      var user = await r.db(process.env.RETHINK_DB_NAME).table('users').filter({username}).limit(1)\n\n      if(!user) return reject(user)\n\n      resolve(user[0])\n    })\n  }\n\n  login(req) {\n    var pkg = req.body\n\n    return new Promise( async (resolve, reject) => {\n\n      var user = await this.getByUsername(pkg.username)\n\n      if(!user) {\n        Model.prototype.create.call(this, {\n          body: {\n            authenticated: false,\n            err: 'NO_USER',\n            username: pkg.username\n          }\n        })\n\n        return reject({\n          err: {\n            message: 'Could not get user: ' + pkg.username,\n            resource: 'AuthNode'\n          }\n        })\n      }\n\n      var validated = await new PasswordService().verify(pkg.password, user.hash)\n\n      if(!validated) {\n        Model.prototype.create.call(this, {\n          body: {\n            authenticated: false,\n            err: 'BAD_PASSWORD',\n            //password: pkg.password,\n            userId: user.id,\n            username: pkg.username\n          }\n        })\n        logger.error('Auth: Bad Password')\n        return reject({\n          err: {\n            message: 'Could not validate password',\n            resource: 'AuthNode'\n          }\n        })\n\n      }\n\n      Model.prototype.create.call(this, {\n        body: {\n          authenticated: true,\n          userId: user.id,\n          username: user.username\n        }\n      })\n\n      return resolve(user)\n\n    })\n  }\n\n  authByFacebook(req) {\n    console.error('handle args', req.body)\n    return new Promise( (resolve, reject) => {\n\n      r.db(process.env.RETHINK_DB_NAME)\n        .table('users')\n        .filter({\n          strategies: {\n            facebook: {\n              id: req.body.profile.id\n            }\n          }\n        })\n        .limit(1)\n        .run()\n        .then( (res) => {\n          console.log('handle res', res)\n          resolve()\n        })\n        .catch( (err) => {\n          console.error('handle err', err)\n          reject()\n        })\n\n    })\n  }\n\n}\n\nexport default AuthModel\n"]}