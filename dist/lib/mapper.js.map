{"version":3,"sources":["../../src/lib/mapper.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;IAEM,M;AAEJ,kBAAY,KAAZ,EAAmB;AAAA;;AACjB,SAAK,KAAL,GAAa,KAAb;AACD;;;;gCAEW;AAAA;;AAEV,WAAK,KAAL,CAAW,OAAX,CAAoB,UAAC,IAAD,EAAU;AAC5B,YAAI,OAAO,IAAI,IAAJ,EAAX;;AAEA,4BAAY,MAAK,SAAjB,EAA4B,OAA5B,CAAqC,UAAC,QAAD,EAAc;;AAEjD,8BAAY,QAAZ,EAAsB,OAAtB,CAA+B,UAAC,GAAD,EAAS;AACtC,gBAAI,UAAW,SAAS,GAAT,CAAf;;AAEA,oBAAQ,OAAR,CAAiB,UAAC,MAAD,EAAY;AAC3B,kBAAI,OAAO,gBAAc,OAAO,IAArB,EAA6B,OAAxC;;AAEA,sBAAO,GAAP;AACE,qBAAK,WAAL;;AAEE,sBAAI;AACF,0BAAK,KAAL,CAAW,SAAX,CAAqB,IAArB,EAA2B,OAAO,UAAlC,EAA8C,OAAO,QAArD,EAA+D,OAAO,UAAP,IAAqB,MAAK,QAAL,CAAc,MAAd,CAAqB,UAAzG;AACD,mBAFD,CAGA,OAAM,CAAN,EAAS;AACP,mCAAO,KAAP,CAAa,gCAAb,EAA+C,CAA/C;AACD;;AAED;;AAEF,qBAAK,qBAAL;;AAEE,sBAAI;AACF,0BAAK,KAAL,CAAW,mBAAX,CAA+B,IAA/B,EAAqC,OAAO,UAA5C,EAAwD,OAAO,QAA/D,EAAyE,OAAO,UAAP,IAAqB,MAAK,QAAL,CAAc,MAAd,CAAqB,UAAnH;AACD,mBAFD,CAGA,OAAM,CAAN,EAAS;AACP,mCAAO,KAAP,CAAa,0CAAb,EAAyD,CAAzD;AACD;;AAED;;AAEF,qBAAK,SAAL;;AAEE,sBAAI;AACF,0BAAK,KAAL,CAAW,OAAX,CAAmB,IAAnB,EAAyB,OAAO,UAAhC,EAA4C,OAAO,QAAnD,EAA6D,OAAO,UAAP,IAAqB,MAAK,QAAL,CAAc,MAAd,CAAqB,UAAvG;AACD,mBAFD,CAGA,OAAM,CAAN,EAAS;AACP,mCAAO,KAAP,CAAa,8BAAb,EAA6C,CAA7C;AACD;;AAED;;AAEF,qBAAK,QAAL;;AAEE,sBAAI;AACF,0BAAK,KAAL,CAAW,MAAX,CAAkB,IAAlB,EAAwB,OAAO,UAA/B,EAA2C,OAAO,QAAlD,EAA4D,OAAO,UAAP,IAAqB,MAAK,QAAL,CAAc,MAAd,CAAqB,UAAtG;AACD,mBAFD,CAGA,OAAM,CAAN,EAAS;AACP,mCAAO,KAAP,CAAa,6BAAb,EAA4C,CAA5C;AACD;;AAED;AA3CJ;AA8CD,aAjDD;AAmDD,WAtDD;AAwDD,SA1DD;AA2DD,OA9DD;AAgED;;;;;kBAIY,M","file":"mapper.js","sourcesContent":["import {chalk, logger} from './logger'\n\nclass Mapper {\n\n  constructor(Nodes) {\n    this.Nodes = Nodes\n  }\n\n  relations() {\n\n    this.Nodes.forEach( (Node) => {\n      var node = new Node()\n\n      Object.keys(this.relations).forEach( (relation) => {\n\n        Object.keys(relation).forEach( (key) => {\n          var options  = relation[key]\n\n          options.forEach( (option) => {\n            var Node = require(`../${option.Node}`).default\n\n            switch(key) {\n              case 'belongsTo':\n\n                try {\n                  this.Model.belongsTo(Node, option.localField, option.localKey, option.foreignKey || this.defaults.fields.foreignKey)\n                }\n                catch(e) {\n                  logger.error('Relationship failed: belongsTo', e)\n                }\n\n                break\n\n              case 'hasAndBelongsToMany':\n\n                try {\n                  this.Model.hasAndBelongsToMany(Node, option.localField, option.localKey, option.foreignKey || this.defaults.fields.foreignKey)\n                }\n                catch(e) {\n                  logger.error('Relationship failed: hasAndBelongsToMany', e)\n                }\n\n                break\n\n              case 'hasMany':\n\n                try {\n                  this.Model.hasMany(Node, option.localField, option.localKey, option.foreignKey || this.defaults.fields.foreignKey)\n                }\n                catch(e) {\n                  logger.error('Relationship failed: hasMany', e)\n                }\n\n                break\n\n              case 'hasOne':\n\n                try {\n                  this.Model.hasOne(Node, option.localField, option.localKey, option.foreignKey || this.defaults.fields.foreignKey)\n                }\n                catch(e) {\n                  logger.error('Relationship failed: hasOne', e)\n                }\n\n                break\n            }\n\n          })\n\n        })\n\n      })\n    })\n\n  }\n\n}\n\nexport default Mapper\n"]}