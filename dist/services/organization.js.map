{"version":3,"sources":["../../src/services/organization.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;;;IAEM,mB;;;;;;;6BAEe;AAAA,UAAZ,CAAY,yDAAR,EAAQ;AAAA,UAAJ,EAAI;;AACjB,UAAI,QAAQ,IAAZ;;AAEA,UAAI,MAAM,sBAAc,EAAd,EAAkB,CAAlB,CAAV;;;;AAIA,UAAI,iBAAkB,uBAAtB;AAAA,UACI,oBAAsB,4BAD1B;;AAGA,wBAAkB,MAAlB,CAAyB,GAAzB,EAA8B,UAAS,GAAT,EAAc,GAAd,EAAmB;;AAE/C,YAAG,GAAH,EAAQ;AACN,yBAAO,KAAP,CAAa,GAAb;;AAEA,iBAAO,GAAG;AACR,qBAAS,+BADD;AAER,sBAAU;AAFF,WAAH,CAAP;AAID;;AAED,YAAI,MAAM,eAAe,KAAf,CAAqB,IAAI,EAAzB,CAAV;;AAEA,cAAM,MAAN,CAAa,IAAI,EAAjB,EAAqB,EAAC,QAAD,EAArB,EAA4B,UAAS,IAAT,EAAe,IAAf,EAAqB;;AAE/C,cAAG,GAAH,EAAQ;AACN,2BAAO,KAAP,CAAa,GAAb;;AAEA,mBAAO,GAAG;AACR,uBAAS,4CADD;AAER,wBAAU;AAFF,aAAH,CAAP;AAID;;AAED,iBAAO,GAAG,IAAH,EAAS,IAAT,CAAP;AAED,SAbD;AAeD,OA5BD;AA8BD;;;0BAEK;AACJ,UAAI,oBAAoB,4BAAxB;;AAEA,wBAAkB,GAAlB,CAAsB,KAAtB,CAA4B,iBAA5B,EAA+C,SAA/C;AACD;;;mCAEc;AACb,UAAI,oBAAoB,4BAAxB;;AAEA,wBAAkB,YAAlB,CAA+B,KAA/B,CAAqC,iBAArC,EAAwD,SAAxD;AACD;;;2BAEM;;AAEL,UAAI,oBAAoB,4BAAxB;;AAEA,wBAAkB,IAAlB,CAAuB,KAAvB,CAA6B,iBAA7B,EAAgD,SAAhD;AAED;;;6BAEQ;AACP,UAAI,oBAAoB,4BAAxB;;AAEA,wBAAkB,MAAlB,CAAyB,KAAzB,CAA+B,iBAA/B,EAAkD,SAAlD;AACD;;;sCAEiB;AAChB,UAAI,oBAAoB,4BAAxB;;AAEA,wBAAkB,eAAlB,CAAkC,KAAlC,CAAwC,iBAAxC,EAA2D,SAA3D;AACD;;;;;kBAIY,mB","file":"organization.js","sourcesContent":["import async           from 'async'\nimport {chalk, logger} from '../lib/logger'\nimport ShortIdService  from '../services/short-id'\nimport OrganizationModel   from '../models/organization'\n\nclass OrganizationService {\n\n  create(o = {}, cb) {\n    var _this = this\n\n    var pkg = Object.assign({}, o)\n\n    // validation\n\n    var shortidService  = new ShortIdService(),\n        organizationModel   = new OrganizationModel()\n\n    organizationModel.create(pkg, function(err, res) {\n\n      if(err) {\n        logger.error(err)\n\n        return cb({\n          message: 'Could not create organization',\n          resource: 'OrganizationService'\n        })\n      }\n\n      var sid = shortidService.issue(res.id)\n\n      _this.update(res.id, {sid}, function(err2, res2) {\n\n        if(err) {\n          logger.error(err)\n\n          return cb({\n            message: 'Could not create short id for organization',\n            resource: 'OrganizationService'\n          })\n        }\n\n        return cb(null, res2)\n\n      })\n\n    })\n\n  }\n\n  get() {\n    var organizationModel = new OrganizationModel()\n\n    organizationModel.get.apply(organizationModel, arguments)\n  }\n\n  getByShortId() {\n    var organizationModel = new OrganizationModel()\n\n    organizationModel.getByShortId.apply(organizationModel, arguments)\n  }\n\n  list() {\n\n    var organizationModel = new OrganizationModel()\n\n    organizationModel.list.apply(organizationModel, arguments)\n\n  }\n\n  update() {\n    var organizationModel = new OrganizationModel()\n\n    organizationModel.update.apply(organizationModel, arguments)\n  }\n\n  updateByShortId() {\n    var organizationModel = new OrganizationModel()\n\n    organizationModel.updateByShortId.apply(organizationModel, arguments)\n  }\n\n}\n\nexport default OrganizationService\n"]}