{"version":3,"sources":["../../src/services/user.js"],"names":[],"mappings":"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","file":"user.js","sourcesContent":["import async           from 'async'\nimport {chalk, logger} from '../lib/logger'\nimport PasswordService from './password'\nimport ShortIdService  from '../services/short-id'\nimport TokenService    from './token'\nimport UserModel       from '../models/user'\n\nclass UserService {\n\n  create(o = {}, cb) {\n    var _this = this\n\n    var pkg = Object.assign({}, o)\n\n    // validation\n\n    var passwordService = new PasswordService(),\n        shortidService  = new ShortIdService(),\n        tokenService    = new TokenService(),\n        userModel       = new UserModel()\n\n    /*\n    TODO: clean up this query, it could be optimized\n    */\n    passwordService.issue(pkg.password, function UserService_createIssueCallback(err, hash) {\n\n      if(err) {\n        logger.error(err)\n        logger.debug('cb', typeof cb)\n        return cb({\n          message: 'Could not create password hash',\n          resource: 'UserModel'\n        })\n      }\n\n      if(pkg.password) delete pkg.password // dont want to store actual password\n      if(pkg.organizationId) delete pkg.organizationId\n\n      pkg.hash = hash\n      pkg.organizations = pkg.organizations || []\n\n      async.parallel([\n        userModel.create.bind(userModel, pkg)\n      ], function UserService_createParallelCallback(err, res) {\n\n        if(err) {\n          logger.error(err)\n          return cb({\n            raw: err,\n            resource: 'UserModel'\n          })\n        }\n\n        var user = res[0]\n        var sid  = shortidService.issue(user.id)\n\n        async.parallel([\n          tokenService.issue.bind(tokenService, user.id),\n          userModel.addToOrganizationTable.bind(userModel, user.id, o.organizations[0]),\n          _this.update.bind(_this, user.id, {sid})\n        ], function UserService_createParallelCallback2(err2, res2) {\n\n          if(err2) {\n            logger.error(err2)\n            return cb({\n              raw: err2,\n              resource: 'UserModel'\n            })\n          }\n\n          user               = res2[2]\n          user.organizations = res2[1].organizations\n          user.token         = res2[0]\n\n          cb(null, user)\n\n        })\n\n      })\n\n    })\n\n  }\n\n  get() {\n    var userModel = new UserModel()\n\n    userModel.get.apply(userModel, arguments)\n  }\n\n  getByShortId() {\n    var userModel = new UserModel()\n\n    userModel.getByShortId.apply(userModel, arguments)\n  }\n\n  getByUsername() {\n    var userModel = new UserModel()\n\n    userModel.getByUsername.apply(userModel, arguments)\n  }\n\n  list() {\n\n    var userModel = new UserModel()\n\n    userModel.list.apply(userModel, arguments)\n\n  }\n\n  update() {\n    var userModel = new UserModel()\n\n    userModel.update.apply(userModel, arguments)\n  }\n\n  updateByShortId() {\n    var userModel = new UserModel()\n\n    userModel.updateByShortId.apply(userModel, arguments)\n  }\n\n}\n\nexport default UserService\n"]}