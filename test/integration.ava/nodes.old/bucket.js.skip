import {chalk, logger}   from '../../../lib/logger'
import MockHTTPServer    from '../../helpers/mock-http-server'
import test              from 'ava'

import App               from '../../../nodes/application'
import Bucket            from '../../../nodes/bucket'
import Org               from '../../../nodes/organization'
import Taxonomy          from '../../../nodes/taxonomy'
import User              from '../../../nodes/user'

import {
  AppGenerator,
  BucketGenerator,
  OrganizationGenerator,
  TaxonomyGenerator,
  UserGenerator
} from 'structure-test-helpers'

var tests = {
  app: {
    Generator: AppGenerator,
    Node: App
  },
  bucket: {
    Generator: BucketGenerator,
    Node: Bucket
  },
  org: {
    Generator: OrganizationGenerator,
    Node: Org
  },
  taxonomy: {
    Generator: TaxonomyGenerator,
    Node: Taxonomy
  },
  user: {
    Generator: UserGenerator,
    Node: User
  }
}

test('should get items from a bucket', async (t) => {

  var node = new tests.bucket.Node()
  var pkg  = new tests.bucket.Generator()

  pkg.data = {
    foo: 'bar'
  }

  var res = await node.create(pkg)

  var res2 = await node.getById(res.id)

  if(res2.data) {
    t.is(res.data.foo, 'bar')
    t.pass()
    return
  }

  t.fail()

})

test('should get items from a bucket via GET', async (t) => {

  var node = new tests.bucket.Node()
  var pkg  = new tests.bucket.Generator()

  pkg.data = {
    foo: 'bar'
  }

  var res = await node.create(pkg)

  var res = await new MockHTTPServer()
    .get(`/api/v0.1/buckets/${res.id}`)

  if(res.body.pkg.data) {
    t.is(res.body.pkg.data.foo, 'bar')
    t.pass()
    return
  }

  t.fail()

})
