[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controllers/applications/index.js",
    "memberof": null,
    "longname": "src/controllers/applications/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport RootController from '../root'\n\n/**\n * ApplicationController Class\n *\n * @public\n * @class ApplicationController\n */\nclass ApplicationController extends RootController {\n\n  /**\n   * ApplicationController constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(options)\n  }\n\n}\n\nexport default ApplicationController\n"
  },
  {
    "__docId__": 1,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ApplicationController",
    "memberof": "src/controllers/applications/index.js",
    "longname": "src/controllers/applications/index.js~ApplicationController",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/controllers/applications/index.js",
    "importStyle": "ApplicationController",
    "description": "ApplicationController Class",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "ApplicationController"
      }
    ],
    "interface": false,
    "extends": [
      "src/controllers/root.js~RootController"
    ]
  },
  {
    "__docId__": 2,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/controllers/applications/index.js~ApplicationController",
    "longname": "src/controllers/applications/index.js~ApplicationController#constructor",
    "access": "public",
    "description": "ApplicationController constructor",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 3,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controllers/auth/index.js",
    "memberof": null,
    "longname": "src/controllers/auth/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport AuthModel      from '../../models/auth'\nimport RootController from '../root'\n\n/**\n * AuthController Class\n *\n * @public\n * @class AuthController\n */\nclass AuthController extends RootController {\n\n /**\n  * AuthController constructor\n  *\n  * @public\n  * @constructor\n  * @param {Object} options - Options\n  */\n  constructor(options = {}) {\n   super(Object.assign({}, {\n     name: 'auth'\n   }, options))\n  }\n\n /**\n  * Login a user\n  *\n  * @public\n  * @param {Object} req - Express req\n  * @param {Object} res - Express res\n  */\n  login(req, res) {\n\n    var auth = new AuthModel()\n\n    return auth.login(req.body)\n\n  }\n\n}\n\nexport default AuthController\n"
  },
  {
    "__docId__": 4,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AuthController",
    "memberof": "src/controllers/auth/index.js",
    "longname": "src/controllers/auth/index.js~AuthController",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/controllers/auth/index.js",
    "importStyle": "AuthController",
    "description": "AuthController Class",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "AuthController"
      }
    ],
    "interface": false,
    "extends": [
      "src/controllers/root.js~RootController"
    ]
  },
  {
    "__docId__": 5,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/controllers/auth/index.js~AuthController",
    "longname": "src/controllers/auth/index.js~AuthController#constructor",
    "access": "public",
    "description": "AuthController constructor",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 6,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "login",
    "memberof": "src/controllers/auth/index.js~AuthController",
    "longname": "src/controllers/auth/index.js~AuthController#login",
    "access": "public",
    "description": "Login a user",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 7,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controllers/buckets/index.js",
    "memberof": null,
    "longname": "src/controllers/buckets/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport RootController from '../root'\n\n/**\n * BucketsController Class\n *\n * @public\n * @class BucketsController\n */\nclass BucketsController extends RootController {\n\n  /**\n   * BucketsController constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(options)\n  }\n\n}\n\nexport default BucketsController\n"
  },
  {
    "__docId__": 8,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "BucketsController",
    "memberof": "src/controllers/buckets/index.js",
    "longname": "src/controllers/buckets/index.js~BucketsController",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/controllers/buckets/index.js",
    "importStyle": "BucketsController",
    "description": "BucketsController Class",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "BucketsController"
      }
    ],
    "interface": false,
    "extends": [
      "src/controllers/root.js~RootController"
    ]
  },
  {
    "__docId__": 9,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/controllers/buckets/index.js~BucketsController",
    "longname": "src/controllers/buckets/index.js~BucketsController#constructor",
    "access": "public",
    "description": "BucketsController constructor",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 10,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controllers/digital-assets/index.js",
    "memberof": null,
    "longname": "src/controllers/digital-assets/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport RootController from '../root'\n\n/**\n * DigitalAssetController Class\n *\n * @public\n * @class DigitalAssetController\n */\nclass DigitalAssetsController extends RootController {\n\n  /**\n   * DigitalAssetsController constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(options)\n  }\n\n  /**\n   * View a digital asset\n   *\n   * @public\n   * @constructor\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   */\n  view(req, res) {\n\n  }\n\n}\n\nexport default DigitalAssetsController\n"
  },
  {
    "__docId__": 11,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DigitalAssetsController",
    "memberof": "src/controllers/digital-assets/index.js",
    "longname": "src/controllers/digital-assets/index.js~DigitalAssetsController",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/controllers/digital-assets/index.js",
    "importStyle": "DigitalAssetsController",
    "description": "DigitalAssetController Class",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DigitalAssetController"
      }
    ],
    "interface": false,
    "extends": [
      "src/controllers/root.js~RootController"
    ]
  },
  {
    "__docId__": 12,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/controllers/digital-assets/index.js~DigitalAssetsController",
    "longname": "src/controllers/digital-assets/index.js~DigitalAssetsController#constructor",
    "access": "public",
    "description": "DigitalAssetsController constructor",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 13,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "view",
    "memberof": "src/controllers/digital-assets/index.js~DigitalAssetsController",
    "longname": "src/controllers/digital-assets/index.js~DigitalAssetsController#view",
    "access": "public",
    "description": "View a digital asset",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 14,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controllers/document-revisions/index.js",
    "memberof": null,
    "longname": "src/controllers/document-revisions/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport RootController from '../root'\n\n/**\n * DocumentRevisionsController Class\n *\n * @public\n * @class DocumentRevisionsController\n */\nclass DocumentRevisionsController extends RootController {\n\n  /**\n   * DocumentRevisionsController constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(options)\n  }\n\n}\n\nexport default DocumentRevisionsController\n"
  },
  {
    "__docId__": 15,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DocumentRevisionsController",
    "memberof": "src/controllers/document-revisions/index.js",
    "longname": "src/controllers/document-revisions/index.js~DocumentRevisionsController",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/controllers/document-revisions/index.js",
    "importStyle": "DocumentRevisionsController",
    "description": "DocumentRevisionsController Class",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DocumentRevisionsController"
      }
    ],
    "interface": false,
    "extends": [
      "src/controllers/root.js~RootController"
    ]
  },
  {
    "__docId__": 16,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/controllers/document-revisions/index.js~DocumentRevisionsController",
    "longname": "src/controllers/document-revisions/index.js~DocumentRevisionsController#constructor",
    "access": "public",
    "description": "DocumentRevisionsController constructor",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 17,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controllers/documents/index.js",
    "memberof": null,
    "longname": "src/controllers/documents/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport DocumentModel  from '../../models/document'\nimport RootController from '../root'\n\n/**\n * DocumentsController Class\n *\n * @public\n * @class DocumentsController\n */\nclass DocumentsController extends RootController {\n\n  /**\n   * DocumentsController constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(options)\n  }\n\n  /**\n   * Create new document\n   *\n   * @public\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   */\n  create(req, res) {\n\n    var document = new DocumentModel()\n\n    return document.create(req.body)\n\n  }\n\n  /**\n   * Get document by id\n   *\n   * @public\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   */\n  getById(req, res) {\n\n    var document = new DocumentModel()\n\n    return document.getById(req.params.id)\n\n  }\n\n  /**\n   * Get all documents\n   *\n   * @public\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   */\n  getAll(req, res) {\n\n    var document = new DocumentModel()\n\n    return document.getAll()\n\n  }\n\n  /**\n   * Update a document\n   *\n   * @public\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   */\n  update(req, res) {\n\n    var document = new DocumentModel()\n\n    return document.update(req.params.id, req.body)\n\n  }\n\n\n}\n\nexport default DocumentsController\n"
  },
  {
    "__docId__": 18,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DocumentsController",
    "memberof": "src/controllers/documents/index.js",
    "longname": "src/controllers/documents/index.js~DocumentsController",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/controllers/documents/index.js",
    "importStyle": "DocumentsController",
    "description": "DocumentsController Class",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DocumentsController"
      }
    ],
    "interface": false,
    "extends": [
      "src/controllers/root.js~RootController"
    ]
  },
  {
    "__docId__": 19,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/controllers/documents/index.js~DocumentsController",
    "longname": "src/controllers/documents/index.js~DocumentsController#constructor",
    "access": "public",
    "description": "DocumentsController constructor",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 20,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/controllers/documents/index.js~DocumentsController",
    "longname": "src/controllers/documents/index.js~DocumentsController#create",
    "access": "public",
    "description": "Create new document",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 21,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getById",
    "memberof": "src/controllers/documents/index.js~DocumentsController",
    "longname": "src/controllers/documents/index.js~DocumentsController#getById",
    "access": "public",
    "description": "Get document by id",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 22,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAll",
    "memberof": "src/controllers/documents/index.js~DocumentsController",
    "longname": "src/controllers/documents/index.js~DocumentsController#getAll",
    "access": "public",
    "description": "Get all documents",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 23,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/controllers/documents/index.js~DocumentsController",
    "longname": "src/controllers/documents/index.js~DocumentsController#update",
    "access": "public",
    "description": "Update a document",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 24,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controllers/fields/index.js",
    "memberof": null,
    "longname": "src/controllers/fields/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport RootController from '../root'\n\n/**\n * FieldsController Class\n *\n * @public\n * @class FieldsController\n */\nclass FieldsController extends RootController {\n\n  /**\n   * FieldsController constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(options)\n  }\n\n}\n\nexport default FieldsController\n"
  },
  {
    "__docId__": 25,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FieldsController",
    "memberof": "src/controllers/fields/index.js",
    "longname": "src/controllers/fields/index.js~FieldsController",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/controllers/fields/index.js",
    "importStyle": "FieldsController",
    "description": "FieldsController Class",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "FieldsController"
      }
    ],
    "interface": false,
    "extends": [
      "src/controllers/root.js~RootController"
    ]
  },
  {
    "__docId__": 26,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/controllers/fields/index.js~FieldsController",
    "longname": "src/controllers/fields/index.js~FieldsController#constructor",
    "access": "public",
    "description": "FieldsController constructor",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 27,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controllers/organizations/index.js",
    "memberof": null,
    "longname": "src/controllers/organizations/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport OrganizationModel from '../../models/organization'\nimport RootController    from '../root'\n\n/**\n * OrganizationsController Class\n *\n * @public\n * @class OrganizationsController\n */\nclass OrganizationsController extends RootController {\n\n  /**\n   * OrganizationsController constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(Object.assign({}, {\n      name: 'organizations'\n    }, options))\n  }\n\n  /**\n   * Create new organization\n   *\n   * @public\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   */\n  create(req, res) {\n\n    var organization = new OrganizationModel()\n\n    return organization.create(req.body)\n\n  }\n\n  /**\n   * Get an organization by id\n   *\n   * @public\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   */\n  getById(req, res) {\n\n    var organization = new OrganizationModel()\n\n    return organization.getById(req.params.id)\n\n  }\n\n  /**\n   * Get all organization\n   *\n   * @public\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   */\n  getAll(req, res) {\n\n    var organization = new OrganizationModel()\n\n    return organization.getAll()\n\n  }\n\n  /**\n   * Update an organization\n   *\n   * @public\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   */\n  update(req, res) {\n\n    var organization = new OrganizationModel()\n\n    return organization.update(req.params.id, req.body)\n\n  }\n\n}\n\nexport default OrganizationsController\n"
  },
  {
    "__docId__": 28,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "OrganizationsController",
    "memberof": "src/controllers/organizations/index.js",
    "longname": "src/controllers/organizations/index.js~OrganizationsController",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/controllers/organizations/index.js",
    "importStyle": "OrganizationsController",
    "description": "OrganizationsController Class",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "OrganizationsController"
      }
    ],
    "interface": false,
    "extends": [
      "src/controllers/root.js~RootController"
    ]
  },
  {
    "__docId__": 29,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/controllers/organizations/index.js~OrganizationsController",
    "longname": "src/controllers/organizations/index.js~OrganizationsController#constructor",
    "access": "public",
    "description": "OrganizationsController constructor",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 30,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/controllers/organizations/index.js~OrganizationsController",
    "longname": "src/controllers/organizations/index.js~OrganizationsController#create",
    "access": "public",
    "description": "Create new organization",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 31,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getById",
    "memberof": "src/controllers/organizations/index.js~OrganizationsController",
    "longname": "src/controllers/organizations/index.js~OrganizationsController#getById",
    "access": "public",
    "description": "Get an organization by id",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 32,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAll",
    "memberof": "src/controllers/organizations/index.js~OrganizationsController",
    "longname": "src/controllers/organizations/index.js~OrganizationsController#getAll",
    "access": "public",
    "description": "Get all organization",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 33,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/controllers/organizations/index.js~OrganizationsController",
    "longname": "src/controllers/organizations/index.js~OrganizationsController#update",
    "access": "public",
    "description": "Update an organization",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 34,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controllers/registry/index.js",
    "memberof": null,
    "longname": "src/controllers/registry/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport RootController from '../root'\n\n/**\n * RegistryController Class\n *\n * @public\n * @class RegistryController\n */\nclass RegistryController extends RootController {\n\n  /**\n   * RegistryController constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(options)\n  }\n\n}\n\nexport default RegistryController\n"
  },
  {
    "__docId__": 35,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "RegistryController",
    "memberof": "src/controllers/registry/index.js",
    "longname": "src/controllers/registry/index.js~RegistryController",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/controllers/registry/index.js",
    "importStyle": "RegistryController",
    "description": "RegistryController Class",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "RegistryController"
      }
    ],
    "interface": false,
    "extends": [
      "src/controllers/root.js~RootController"
    ]
  },
  {
    "__docId__": 36,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/controllers/registry/index.js~RegistryController",
    "longname": "src/controllers/registry/index.js~RegistryController#constructor",
    "access": "public",
    "description": "RegistryController constructor",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 37,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controllers/root.js",
    "memberof": null,
    "longname": "src/controllers/root.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * RootController Class\n *\n * @public\n * @class RootController\n */\nclass RootController {\n\n  /**\n   * RootController constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n\n    /**\n     * Options\n     *\n     * @private\n     * @type {Object}\n     */\n    this.options = options\n\n    /**\n     * The route name\n     *\n     * @private\n     * @type {String}\n     */\n    this.name = options.name\n  }\n\n}\n\nexport default RootController\n"
  },
  {
    "__docId__": 38,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "RootController",
    "memberof": "src/controllers/root.js",
    "longname": "src/controllers/root.js~RootController",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/controllers/root.js",
    "importStyle": "RootController",
    "description": "RootController Class",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "RootController"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 39,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/controllers/root.js~RootController",
    "longname": "src/controllers/root.js~RootController#constructor",
    "access": "public",
    "description": "RootController constructor",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 40,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "options",
    "memberof": "src/controllers/root.js~RootController",
    "longname": "src/controllers/root.js~RootController#options",
    "access": "private",
    "description": "Options",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 41,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/controllers/root.js~RootController",
    "longname": "src/controllers/root.js~RootController#name",
    "access": "private",
    "description": "The route name",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 42,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controllers/taxonomies/index.js",
    "memberof": null,
    "longname": "src/controllers/taxonomies/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport TaxonomyModel  from '../../models/taxonomy'\nimport RootController from '../root'\n\n/**\n * TaxonomiesController Class\n *\n * @public\n * @class TaxonomiesController\n */\nclass TaxonomiesController extends RootController {\n\n  /**\n   * TaxonomiesController constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(options)\n  }\n\n  /**\n   * Create new taxonomy\n   *\n   * @public\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   */\n  create(req, res) {\n\n    var taxonomy = new TaxonomyModel()\n\n    return taxonomy.create(req.body)\n\n  }\n\n  /**\n   * Get taxonomy by id\n   *\n   * @public\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   */\n  getById(req, res) {\n\n    var taxonomy = new TaxonomyModel()\n\n    return taxonomy.getById(req.params.id)\n\n  }\n\n  /**\n   * Get all taxonomies\n   *\n   * @public\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   */\n  getAll(req, res) {\n\n    var taxonomy = new TaxonomyModel()\n\n    return taxonomy.getAll()\n\n  }\n\n  /**\n   * Update a taxonomy\n   *\n   * @public\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   */\n  update(req, res) {\n\n    var taxonomy = new TaxonomyModel()\n\n    return taxonomy.update(req.params.id, req.body)\n\n  }\n\n}\n\nexport default TaxonomiesController\n"
  },
  {
    "__docId__": 43,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TaxonomiesController",
    "memberof": "src/controllers/taxonomies/index.js",
    "longname": "src/controllers/taxonomies/index.js~TaxonomiesController",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/controllers/taxonomies/index.js",
    "importStyle": "TaxonomiesController",
    "description": "TaxonomiesController Class",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TaxonomiesController"
      }
    ],
    "interface": false,
    "extends": [
      "src/controllers/root.js~RootController"
    ]
  },
  {
    "__docId__": 44,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/controllers/taxonomies/index.js~TaxonomiesController",
    "longname": "src/controllers/taxonomies/index.js~TaxonomiesController#constructor",
    "access": "public",
    "description": "TaxonomiesController constructor",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 45,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/controllers/taxonomies/index.js~TaxonomiesController",
    "longname": "src/controllers/taxonomies/index.js~TaxonomiesController#create",
    "access": "public",
    "description": "Create new taxonomy",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 46,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getById",
    "memberof": "src/controllers/taxonomies/index.js~TaxonomiesController",
    "longname": "src/controllers/taxonomies/index.js~TaxonomiesController#getById",
    "access": "public",
    "description": "Get taxonomy by id",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 47,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAll",
    "memberof": "src/controllers/taxonomies/index.js~TaxonomiesController",
    "longname": "src/controllers/taxonomies/index.js~TaxonomiesController#getAll",
    "access": "public",
    "description": "Get all taxonomies",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 48,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/controllers/taxonomies/index.js~TaxonomiesController",
    "longname": "src/controllers/taxonomies/index.js~TaxonomiesController#update",
    "access": "public",
    "description": "Update a taxonomy",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 49,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controllers/template-revisions/index.js",
    "memberof": null,
    "longname": "src/controllers/template-revisions/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport RootController from '../root'\n\n/**\n * TemplateRevisionsController Class\n *\n * @public\n * @class TemplateRevisionsController\n */\nclass TemplateRevisionsController extends RootController {\n\n  /**\n   * TemplateRevisionsController constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(options)\n  }\n\n}\n\nexport default TemplateRevisionsController\n"
  },
  {
    "__docId__": 50,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TemplateRevisionsController",
    "memberof": "src/controllers/template-revisions/index.js",
    "longname": "src/controllers/template-revisions/index.js~TemplateRevisionsController",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/controllers/template-revisions/index.js",
    "importStyle": "TemplateRevisionsController",
    "description": "TemplateRevisionsController Class",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TemplateRevisionsController"
      }
    ],
    "interface": false,
    "extends": [
      "src/controllers/root.js~RootController"
    ]
  },
  {
    "__docId__": 51,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/controllers/template-revisions/index.js~TemplateRevisionsController",
    "longname": "src/controllers/template-revisions/index.js~TemplateRevisionsController#constructor",
    "access": "public",
    "description": "TemplateRevisionsController constructor",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 52,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controllers/templates/index.js",
    "memberof": null,
    "longname": "src/controllers/templates/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger} from '../../lib/logger'\nimport RootController  from '../root'\nimport TemplateModel   from '../../models/template'\n\n/**\n * TemplatesController Class\n *\n * @public\n * @class TemplatesController\n */\nclass TemplatesController extends RootController {\n\n  /**\n   * TemplatesController constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(options)\n  }\n\n  /**\n   * Create new template\n   *\n   * @public\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   */\n  create(req, res) {\n\n    var template = new TemplateModel()\n\n    return template.create(req.body)\n\n  }\n\n  /**\n   * Get template by id\n   *\n   * @public\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   */\n  getById(req, res) {\n\n    var template = new TemplateModel()\n\n    return template.getById(req.params.id)\n\n  }\n\n  /**\n   * Get all templates\n   *\n   * @public\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   */\n  getAll(req, res) {\n\n    var template = new TemplateModel()\n\n    return template.getAll()\n\n  }\n\n  /**\n   * Update a template\n   *\n   * @public\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   */\n  update(req, res) {\n\n    var template = new TemplateModel()\n\n    return template.update(req.params.id, req.body)\n\n  }\n\n}\n\nexport default TemplatesController\n"
  },
  {
    "__docId__": 53,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TemplatesController",
    "memberof": "src/controllers/templates/index.js",
    "longname": "src/controllers/templates/index.js~TemplatesController",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/controllers/templates/index.js",
    "importStyle": "TemplatesController",
    "description": "TemplatesController Class",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TemplatesController"
      }
    ],
    "interface": false,
    "extends": [
      "src/controllers/root.js~RootController"
    ]
  },
  {
    "__docId__": 54,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/controllers/templates/index.js~TemplatesController",
    "longname": "src/controllers/templates/index.js~TemplatesController#constructor",
    "access": "public",
    "description": "TemplatesController constructor",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 55,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/controllers/templates/index.js~TemplatesController",
    "longname": "src/controllers/templates/index.js~TemplatesController#create",
    "access": "public",
    "description": "Create new template",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 56,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getById",
    "memberof": "src/controllers/templates/index.js~TemplatesController",
    "longname": "src/controllers/templates/index.js~TemplatesController#getById",
    "access": "public",
    "description": "Get template by id",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 57,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAll",
    "memberof": "src/controllers/templates/index.js~TemplatesController",
    "longname": "src/controllers/templates/index.js~TemplatesController#getAll",
    "access": "public",
    "description": "Get all templates",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 58,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/controllers/templates/index.js~TemplatesController",
    "longname": "src/controllers/templates/index.js~TemplatesController#update",
    "access": "public",
    "description": "Update a template",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 59,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/controllers/users/index.js",
    "memberof": null,
    "longname": "src/controllers/users/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport UserModel  from '../../models/user'\nimport RootController from '../root'\n\n/**\n * UsersController Class\n *\n * @public\n * @class UsersController\n */\nclass UsersController extends RootController {\n\n  /**\n   * UsersController constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(options)\n  }\n\n  /**\n   * Create new user\n   *\n   * @public\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   */\n  create(req, res) {\n\n    var user = new UserModel()\n\n    return user.create(req.body)\n\n  }\n\n  /**\n   * Get user by id\n   *\n   * @public\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   */\n  getById(req, res) {\n\n    var user = new UserModel()\n\n    return user.getById(req.params.id)\n\n  }\n\n  /**\n   * Get all users\n   *\n   * @public\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   */\n  getAll(req, res) {\n\n    var user = new UserModel()\n\n    return user.getAll()\n\n  }\n\n  /**\n   * Update a user\n   *\n   * @public\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   */\n  update(req, res) {\n\n    var user = new UserModel()\n\n    return user.update(req.params.id, req.body)\n\n  }\n\n}\n\nexport default UsersController\n"
  },
  {
    "__docId__": 60,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "UsersController",
    "memberof": "src/controllers/users/index.js",
    "longname": "src/controllers/users/index.js~UsersController",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/controllers/users/index.js",
    "importStyle": "UsersController",
    "description": "UsersController Class",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "UsersController"
      }
    ],
    "interface": false,
    "extends": [
      "src/controllers/root.js~RootController"
    ]
  },
  {
    "__docId__": 61,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/controllers/users/index.js~UsersController",
    "longname": "src/controllers/users/index.js~UsersController#constructor",
    "access": "public",
    "description": "UsersController constructor",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 62,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/controllers/users/index.js~UsersController",
    "longname": "src/controllers/users/index.js~UsersController#create",
    "access": "public",
    "description": "Create new user",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 63,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getById",
    "memberof": "src/controllers/users/index.js~UsersController",
    "longname": "src/controllers/users/index.js~UsersController#getById",
    "access": "public",
    "description": "Get user by id",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 64,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAll",
    "memberof": "src/controllers/users/index.js~UsersController",
    "longname": "src/controllers/users/index.js~UsersController#getAll",
    "access": "public",
    "description": "Get all users",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 65,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/controllers/users/index.js~UsersController",
    "longname": "src/controllers/users/index.js~UsersController#update",
    "access": "public",
    "description": "Update a user",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 66,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/index.js",
    "memberof": null,
    "longname": "src/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport StructureApplicationController  from './controllers/applications'\nimport StructureApplicationModel       from './models/application'\n\nimport StructureDispatcher             from './server/dispatcher'\nimport StructureLogger                 from './lib/logger'\n\nimport StructureOrganizationController from './controllers/organizations'\nimport StructureOrganizationModel      from './models/organization'\n\nimport StructurePasswordService        from './services/password'\n\nimport StructureRegistry               from './lib/registry'\n\nimport StructureRootController         from './controllers/root'\nimport StructureRootModel              from './models/root'\n\nimport StructureRouter                 from './server/router'\nimport StructureServer                 from './server'\nimport StructureShortIdService         from './services/short-id'\nimport StructureStorageAdaptors        from './server/storageAdaptors'\nimport StructureTokenService           from './services/token'\n\nimport StructureUserController         from './controllers/users'\nimport StructureUserModel              from './models/user'\n\nexport {\n  StructureApplicationController,\n  StructureApplicationModel,\n\n  StructureDispatcher,\n  StructureLogger,\n\n  StructureOrganizationController,\n  StructureOrganizationModel,\n\n  StructurePasswordService,\n  StructureRegistry,\n\n  StructureRootController,\n  StructureRootModel,\n\n  StructureRouter,\n  StructureServer,\n  StructureShortIdService,\n  StructureStorageAdaptors,\n  StructureTokenService,\n\n  StructureUserController,\n  StructureUserModel\n}\n"
  },
  {
    "__docId__": 67,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/lib/database/config.js",
    "memberof": null,
    "longname": "src/lib/database/config.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "var config = {\n  authKey: process.env.RETHINK_DB_AUTH_KEY || '',\n  buffer:  process.env.NODE_ENV === 'production' ? 50 : 3,\n  db:      process.env.RETHINK_DB_NAME,\n  host:    process.env.RETHINK_DB_HOST || 'localhost',\n  min:     process.env.NODE_ENV === 'production' ? 50 : 3,\n  pool:    true,\n  port:    process.env.RETHINK_DB_PORT || 28015,\n  servers: [\n    {host: '127.0.0.1', port: 28015}\n  ],\n  tables:  [\n    'actions',\n    'auth',\n    'applications',\n    'buckets',\n    'channels',\n    'digital_assets',\n    'documents',\n    'document_revisions',\n    'fields',\n    'organizations',\n    'refs', // References\n    'registry',\n    //'revisions',\n    'root',\n    'taxonomies',\n    'templates',\n    'template_revisions',\n    'test',\n    'users'\n  ]\n}\n\nif(process.env.RETHINK_SSL) {\n\n  Object.assign(config, {\n    ssl: {\n      ca: ''\n    }\n  })\n\n}\n\nexport default config\n"
  },
  {
    "__docId__": 68,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "config",
    "memberof": "src/lib/database/config.js",
    "longname": "src/lib/database/config.js~config",
    "access": null,
    "export": true,
    "importPath": "structure-core/src/lib/database/config.js",
    "importStyle": "config",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/lib/database/driver.js",
    "memberof": null,
    "longname": "src/lib/database/driver.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nvar config = require('./config').default\n\nif(process.env.TEST_TYPE == 'unit') {\n  config = {\n    max: 1,\n    port: 28016,\n    timeout: 5,\n    timeoutGb: 1000\n  }\n}\n\nvar r = require('rethinkdbdash')(config)\n\nr.getPoolMaster().on('log', function() {\n  //console.error.apply(console, arguments)\n})\n\nmodule.exports = r\n"
  },
  {
    "__docId__": 70,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "config",
    "memberof": "src/lib/database/driver.js",
    "longname": "src/lib/database/driver.js~config",
    "access": null,
    "export": false,
    "importPath": "structure-core/src/lib/database/driver.js",
    "importStyle": null,
    "description": "Module Dependencies",
    "lineNumber": 6,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "r",
    "memberof": "src/lib/database/driver.js",
    "longname": "src/lib/database/driver.js~r",
    "access": null,
    "export": false,
    "importPath": "structure-core/src/lib/database/driver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/lib/eventemitter.js",
    "memberof": null,
    "longname": "src/lib/eventemitter.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "class EventEmitter {\n\n  constructor() {\n\n  }\n\n  emit(e) {\n    this._events = this._events || {}\n\n\t\tif(e in this._events === false)\treturn\n\n\t\tfor(let i = 0, l = this._events[e].length; i < l; i++) {\n\t\t\tthis._events[e][i].apply(this, Array.prototype.slice.call(arguments, 1))\n\t\t}\n  }\n\n  off(e, f) {\n    this._events = this._events || {}\n\t\tif(e in this._events === false)\treturn\n\n    if(f) {\n      this._events[e].splice(this._events[e].indexOf(f), 1)\n    }\n    else {\n      delete this._events[e]\n    }\n\n  }\n\n  on(e, f) {\n    this._events    = this._events    || {}\n\t\tthis._events[e] = this._events[e]\t|| []\n\t\tthis._events[e].push(f)\n  }\n\n  once(e, f) {\n    var _this  = this\n\n    this.on(e, function onOnce() {\n      f.apply(this, arguments)\n      _this.off.call(_this, e, f)\n    })\n  }\n\n}\n\nexport default EventEmitter\n"
  },
  {
    "__docId__": 73,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "EventEmitter",
    "memberof": "src/lib/eventemitter.js",
    "longname": "src/lib/eventemitter.js~EventEmitter",
    "access": null,
    "export": true,
    "importPath": "structure-core/src/lib/eventemitter.js",
    "importStyle": "EventEmitter",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 74,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/lib/eventemitter.js~EventEmitter",
    "longname": "src/lib/eventemitter.js~EventEmitter#constructor",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 75,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "emit",
    "memberof": "src/lib/eventemitter.js~EventEmitter",
    "longname": "src/lib/eventemitter.js~EventEmitter#emit",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 76,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_events",
    "memberof": "src/lib/eventemitter.js~EventEmitter",
    "longname": "src/lib/eventemitter.js~EventEmitter#_events",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "off",
    "memberof": "src/lib/eventemitter.js~EventEmitter",
    "longname": "src/lib/eventemitter.js~EventEmitter#off",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      },
      {
        "name": "f",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 78,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_events",
    "memberof": "src/lib/eventemitter.js~EventEmitter",
    "longname": "src/lib/eventemitter.js~EventEmitter#_events",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "on",
    "memberof": "src/lib/eventemitter.js~EventEmitter",
    "longname": "src/lib/eventemitter.js~EventEmitter#on",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      },
      {
        "name": "f",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 80,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_events",
    "memberof": "src/lib/eventemitter.js~EventEmitter",
    "longname": "src/lib/eventemitter.js~EventEmitter#_events",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "once",
    "memberof": "src/lib/eventemitter.js~EventEmitter",
    "longname": "src/lib/eventemitter.js~EventEmitter#once",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      },
      {
        "name": "f",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 82,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/lib/logger.js",
    "memberof": null,
    "longname": "src/lib/logger.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport chalk   from 'chalk'\nimport winston from 'winston'\n\nvar argv = require('minimist')(process.argv.slice(2))\n\nvar logger = new winston.Logger({\n\n  transports:[\n    new winston.transports.Console({\n      colorize: true,\n      level: (argv.debug) ? 'debug' : process.env.LOG_LEVEL\n    })\n  ]\n\n})\n\nexport {chalk}\nexport {logger}\n"
  },
  {
    "__docId__": 83,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "argv",
    "memberof": "src/lib/logger.js",
    "longname": "src/lib/logger.js~argv",
    "access": null,
    "export": false,
    "importPath": "structure-core/src/lib/logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 84,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "logger",
    "memberof": "src/lib/logger.js",
    "longname": "src/lib/logger.js~logger",
    "access": null,
    "export": true,
    "importPath": "structure-core/src/lib/logger.js",
    "importStyle": "{logger}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 85,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/lib/mapper.js",
    "memberof": null,
    "longname": "src/lib/mapper.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger} from './logger'\n\nclass Mapper {\n\n  constructor(Nodes) {\n    this.Nodes = Nodes\n  }\n\n  relations() {\n\n    this.Nodes.forEach( (Node) => {\n      var node = new Node()\n\n      Object.keys(this.relations).forEach( (relation) => {\n\n        Object.keys(relation).forEach( (key) => {\n          var options  = relation[key]\n\n          options.forEach( (option) => {\n            var Node = require(`../${option.Node}`).default\n\n            switch(key) {\n              case 'belongsTo':\n\n                try {\n                  this.Model.belongsTo(Node, option.localField, option.localKey, option.foreignKey || this.defaults.fields.foreignKey)\n                }\n                catch(e) {\n                  logger.error('Relationship failed: belongsTo', e)\n                }\n\n                break\n\n              case 'hasAndBelongsToMany':\n\n                try {\n                  this.Model.hasAndBelongsToMany(Node, option.localField, option.localKey, option.foreignKey || this.defaults.fields.foreignKey)\n                }\n                catch(e) {\n                  logger.error('Relationship failed: hasAndBelongsToMany', e)\n                }\n\n                break\n\n              case 'hasMany':\n\n                try {\n                  this.Model.hasMany(Node, option.localField, option.localKey, option.foreignKey || this.defaults.fields.foreignKey)\n                }\n                catch(e) {\n                  logger.error('Relationship failed: hasMany', e)\n                }\n\n                break\n\n              case 'hasOne':\n\n                try {\n                  this.Model.hasOne(Node, option.localField, option.localKey, option.foreignKey || this.defaults.fields.foreignKey)\n                }\n                catch(e) {\n                  logger.error('Relationship failed: hasOne', e)\n                }\n\n                break\n            }\n\n          })\n\n        })\n\n      })\n    })\n\n  }\n\n}\n\nexport default Mapper\n"
  },
  {
    "__docId__": 86,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Mapper",
    "memberof": "src/lib/mapper.js",
    "longname": "src/lib/mapper.js~Mapper",
    "access": null,
    "export": true,
    "importPath": "structure-core/src/lib/mapper.js",
    "importStyle": "Mapper",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 87,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/lib/mapper.js~Mapper",
    "longname": "src/lib/mapper.js~Mapper#constructor",
    "access": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "Nodes",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 88,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "Nodes",
    "memberof": "src/lib/mapper.js~Mapper",
    "longname": "src/lib/mapper.js~Mapper#Nodes",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "relations",
    "memberof": "src/lib/mapper.js~Mapper",
    "longname": "src/lib/mapper.js~Mapper#relations",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 90,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/lib/mixin.js",
    "memberof": null,
    "longname": "src/lib/mixin.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export default function mixin(dest, source) {\n\n  dest   = (dest.prototype) ? dest.prototype : dest\n  source = source.prototype\n\n  Object.getOwnPropertyNames(source).forEach(function propertyName(name) {\n\n    if(name !== 'constructor') {\n      Object.defineProperty(dest, name, Object.getOwnPropertyDescriptor(source, name))\n    }\n\n  })\n\n}\n"
  },
  {
    "__docId__": 91,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "mixin",
    "memberof": "src/lib/mixin.js",
    "longname": "src/lib/mixin.js~mixin",
    "access": null,
    "export": true,
    "importPath": "structure-core/src/lib/mixin.js",
    "importStyle": "mixin",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "dest",
        "types": [
          "*"
        ]
      },
      {
        "name": "source",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 92,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/lib/registry.js",
    "memberof": null,
    "longname": "src/lib/registry.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport Disk from 'structure-storage-disk-adaptor'\n\nexport default {\n  items: [\n    Object.assign({\n      status: 'active',\n      type: 'adaptor'\n    }, Disk.config)\n  ]\n}\n"
  },
  {
    "__docId__": 93,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/lib/utils/object/each.js",
    "memberof": null,
    "longname": "src/lib/utils/object/each.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "function ObjectEach(obj, fun) {\n\n  Object.keys(obj).forEach( (k, i) => {\n    var o = obj[k]\n\n    if(o.hasOwnProperty(k)) {\n      if(typeof o == 'object' && !o.join) {\n\n        ObjectEach(o, fun)\n\n        // Array\n        /*if(o.join) {\n          o.forEach( (item) => {\n\n          })\n        }\n\n        // Object\n        else {\n\n        }*/\n\n      }\n\n      else {\n        fun(o, k, i)\n      }\n    }\n\n  })\n\n}\n\nexport default ObjectEach\n"
  },
  {
    "__docId__": 94,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "ObjectEach",
    "memberof": "src/lib/utils/object/each.js",
    "longname": "src/lib/utils/object/each.js~ObjectEach",
    "access": null,
    "export": true,
    "importPath": "structure-core/src/lib/utils/object/each.js",
    "importStyle": "ObjectEach",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "fun",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 95,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/lib/utils/object/map.js",
    "memberof": null,
    "longname": "src/lib/utils/object/map.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "function ObjectMap(obj, fun) {\n\n  var newObj = {}\n\n  Object.keys(obj).forEach( (k, i) => {\n\n    var v = obj[k]\n\n    console.error('inside k,v', k, v)\n\n    if(typeof v == 'object' && !v.join) {\n\n      newObj[k] = ObjectMap(v, fun)\n\n      // Array\n      /*if(o.join) {\n        o.forEach( (item) => {\n\n        })\n      }\n\n      // Object\n      else {\n\n      }*/\n\n    }\n\n    else {\n      newObj[k] = fun(v, k, i)\n      console.error('v', vs)\n    }\n\n  })\n\n  return newObj\n\n}\n\nexport default ObjectMap\n"
  },
  {
    "__docId__": 96,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "ObjectMap",
    "memberof": "src/lib/utils/object/map.js",
    "longname": "src/lib/utils/object/map.js~ObjectMap",
    "access": null,
    "export": true,
    "importPath": "structure-core/src/lib/utils/object/map.js",
    "importStyle": "ObjectMap",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "fun",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 97,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/lib/utils/uuid.js",
    "memberof": null,
    "longname": "src/lib/utils/uuid.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport uuid from 'node-uuid'\n\nexport default function generateUUID() {\n  return uuid.v4()\n}\n"
  },
  {
    "__docId__": 98,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "generateUUID",
    "memberof": "src/lib/utils/uuid.js",
    "longname": "src/lib/utils/uuid.js~generateUUID",
    "access": null,
    "export": true,
    "importPath": "structure-core/src/lib/utils/uuid.js",
    "importStyle": "generateUUID",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 99,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/manual/styles/base/variables.js",
    "memberof": null,
    "longname": "src/manual/styles/base/variables.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "module.exports = {}\n"
  },
  {
    "__docId__": 100,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/mixins/log.js",
    "memberof": null,
    "longname": "src/mixins/log.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import winston from 'winston'\n\nclass Log {\n\n  log(str = '') {\n\n    this.use((next) => {\n\n      console.log(this.body)\n      //winston.log('debug', this.body)\n      next()\n\n    })\n\n    return this\n\n  }\n\n}\n\nexport default Log\n"
  },
  {
    "__docId__": 101,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Log",
    "memberof": "src/mixins/log.js",
    "longname": "src/mixins/log.js~Log",
    "access": null,
    "export": true,
    "importPath": "structure-core/src/mixins/log.js",
    "importStyle": "Log",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 102,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "log",
    "memberof": "src/mixins/log.js~Log",
    "longname": "src/mixins/log.js~Log#log",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "str",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "",
        "defaultValue": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 103,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/mixins/middleware.js",
    "memberof": null,
    "longname": "src/mixins/middleware.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "class Middleware {\n\n  next(err, pkg) {\n\n    if(err) {\n      return this.emit('error', err)\n    }\n\n    // Have all the middleware run?\n    if(this.middlewareLayers.length == this.currentMiddlewareLayer) {\n\n      if(this.emit) this.emit('end', pkg)\n\n      // Reset so middleware can make another run if need be\n      this.currentMiddlewareLayer = 0\n      this.middlewareLayers = []\n\n      return\n\n    }\n\n    // There are more middleware, go to next one\n    this.currentMiddlewareLayer++\n\n    var nextMiddleware = this.middlewareLayers[this.currentMiddlewareLayer - 1]\n\n    // The next middleware was found\n    if(nextMiddleware) {\n\n      nextMiddleware.call(this, pkg, this.next.bind(this))\n\n    }\n\n    // The next middleware was not found; this is a developer error\n    else {\n      return this.emit('error', err)\n    }\n\n  }\n\n  use(fn) {\n\n    // These need to be set here because we can't set them in the constructor and if we set them on the prototype, then all models would share the same middleware\n    if(!this.currentMiddlewareLayer) this.currentMiddlewareLayer = 0\n    if(!this.middlewareLayers)       this.middlewareLayers = []\n\n    this.middlewareLayers.push(fn)\n\n    return this\n\n  }\n\n}\n\nexport default Middleware\n"
  },
  {
    "__docId__": 104,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Middleware",
    "memberof": "src/mixins/middleware.js",
    "longname": "src/mixins/middleware.js~Middleware",
    "access": null,
    "export": true,
    "importPath": "structure-core/src/mixins/middleware.js",
    "importStyle": "Middleware",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 105,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "next",
    "memberof": "src/mixins/middleware.js~Middleware",
    "longname": "src/mixins/middleware.js~Middleware#next",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "err",
        "types": [
          "*"
        ]
      },
      {
        "name": "pkg",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 106,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "currentMiddlewareLayer",
    "memberof": "src/mixins/middleware.js~Middleware",
    "longname": "src/mixins/middleware.js~Middleware#currentMiddlewareLayer",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "middlewareLayers",
    "memberof": "src/mixins/middleware.js~Middleware",
    "longname": "src/mixins/middleware.js~Middleware#middlewareLayers",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "use",
    "memberof": "src/mixins/middleware.js~Middleware",
    "longname": "src/mixins/middleware.js~Middleware#use",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 109,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "currentMiddlewareLayer",
    "memberof": "src/mixins/middleware.js~Middleware",
    "longname": "src/mixins/middleware.js~Middleware#currentMiddlewareLayer",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "middlewareLayers",
    "memberof": "src/mixins/middleware.js~Middleware",
    "longname": "src/mixins/middleware.js~Middleware#middlewareLayers",
    "access": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/mixins/mixin.js",
    "memberof": null,
    "longname": "src/mixins/mixin.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "function mixin(source) {\n  var _this = this\n\n  source = source.prototype\n\n  Object.getOwnPropertyNames(source).forEach(function propertyName(name) {\n\n    if(name !== 'constructor' && name !== 'flowMethods') {\n      Object.defineProperty(_this, name, Object.getOwnPropertyDescriptor(source, name))\n    }\n\n  })\n\n}\n\nexport default mixin\n"
  },
  {
    "__docId__": 112,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "mixin",
    "memberof": "src/mixins/mixin.js",
    "longname": "src/mixins/mixin.js~mixin",
    "access": null,
    "export": true,
    "importPath": "structure-core/src/mixins/mixin.js",
    "importStyle": "mixin",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "source",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 113,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/mixins/scrape.js",
    "memberof": null,
    "longname": "src/mixins/scrape.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import cheerio from 'cheerio'\n\nclass Scrape {\n\n  scrape(operations) {\n    var _this = this\n\n    this.use((pkg, next) => {\n\n      try {\n        var $ = cheerio.load(pkg)\n        pkg = operations.call(_this, $)\n\n        next(null, pkg)\n      }\n      catch(e) {\n        next(e)\n      }\n\n    })\n\n    return this\n\n  }\n\n}\n\nScrape.prototype.flowMethods = ['scrape']\n\nexport default Scrape\n"
  },
  {
    "__docId__": 114,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Scrape",
    "memberof": "src/mixins/scrape.js",
    "longname": "src/mixins/scrape.js~Scrape",
    "access": null,
    "export": true,
    "importPath": "structure-core/src/mixins/scrape.js",
    "importStyle": "Scrape",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 115,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "scrape",
    "memberof": "src/mixins/scrape.js~Scrape",
    "longname": "src/mixins/scrape.js~Scrape#scrape",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "operations",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 116,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/mixins/stream-extras.js",
    "memberof": null,
    "longname": "src/mixins/stream-extras.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import through2 from 'through2'\n\nclass StreamExtras {\n\n  streamToString(stream) {\n\n    var chunks = '',\n        _this  = this\n\n    this.use((pkg, next) => {\n\n      stream\n        .pipe(through2({objectMode: true, allowHalfOpen: false}, function streamChunkCallback(chunk, enc, t2cb) {\n\n          chunks += chunk.toString()\n\n          t2cb(null, chunks)\n        }))\n        .on('data', function onDataCallback(data) {\n          //console.log('do we have something?', data)\n        })\n        .on('end', function onEndCallback() {\n          pkg = chunks\n          next(null, pkg)\n        })\n        .on('error', function onErrorCallback(err) {\n          next(err)\n        })\n\n    })\n\n    return this\n\n  }\n\n}\n\nStreamExtras.prototype.flowMethods = ['streamToString']\n\nexport default StreamExtras\n"
  },
  {
    "__docId__": 117,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "StreamExtras",
    "memberof": "src/mixins/stream-extras.js",
    "longname": "src/mixins/stream-extras.js~StreamExtras",
    "access": null,
    "export": true,
    "importPath": "structure-core/src/mixins/stream-extras.js",
    "importStyle": "StreamExtras",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 118,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "streamToString",
    "memberof": "src/mixins/stream-extras.js~StreamExtras",
    "longname": "src/mixins/stream-extras.js~StreamExtras#streamToString",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "stream",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 119,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/application/index.js",
    "memberof": null,
    "longname": "src/models/application/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger} from '../../lib/logger'\nimport Model           from '../root'\n\n/**\n * AppModel Class\n *\n * @public\n * @class AppModel\n */\nclass AppModel extends Model {\n\n  /**\n   * AppModel constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(Object.assign({}, {\n      name: 'applications',\n\n      permissions: {\n        create:  ['admin'],\n        delete:  ['admin'],\n        read:    ['organization'],\n        replace: ['admin'],\n        update:  ['admin'],\n      },\n      relations: {\n        belongsTo: {\n          Node: 'Organization',\n          foreignKey: 'id',\n          localField: 'organization',\n          localKey: 'organizationId'\n        }\n      },\n      schema: {\n        desc: {\n          type: 'string'\n        },\n        title: {\n          type: 'string'\n        }\n      }\n    }, options))\n  }\n\n}\n\nexport default AppModel\n"
  },
  {
    "__docId__": 120,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AppModel",
    "memberof": "src/models/application/index.js",
    "longname": "src/models/application/index.js~AppModel",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/models/application/index.js",
    "importStyle": "AppModel",
    "description": "AppModel Class",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "AppModel"
      }
    ],
    "interface": false,
    "extends": [
      "src/models/root.js~Model"
    ]
  },
  {
    "__docId__": 121,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/models/application/index.js~AppModel",
    "longname": "src/models/application/index.js~AppModel#constructor",
    "access": "public",
    "description": "AppModel constructor",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 122,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/auth/index.js",
    "memberof": null,
    "longname": "src/models/auth/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger} from '../../lib/logger'\nimport loginSchema     from './schemas/login'\nimport Model           from '../root'\nimport PasswordService from '../../services/password'\nimport r               from '../../lib/database/driver'\nimport TokenService    from '../../services/token'\nimport UserModel       from '../user'\n\n/**\n * AuthModel Class\n *\n * @public\n * @class AuthModel\n */\nclass AuthModel extends Model {\n\n  /**\n   * AuthModel constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(Object.assign({}, {\n      name: 'auth',\n\n      permissions: {\n        create:  ['user', 'admin'],\n        delete:  ['admin'],\n        read:    ['organization', 'admin'],\n        replace: ['admin'],\n        update:  ['admin'],\n      },\n      relations: {\n        belongsTo: [\n          {\n            Node: 'User',\n            foreignKey: 'id',\n            localField: 'user',\n            localKey: 'userId'\n          }\n        ]\n      }\n    }, options))\n  }\n\n  /**\n   * Login user\n   *\n   * @public\n   * @param {Object} pkg - Login data\n   */\n  login(pkg = {}) {\n\n    return new Promise( async (resolve, reject) => {\n\n      var isValidPkg = loginSchema.validate(pkg)\n\n      if(isValidPkg.err) {\n        Model.prototype.create.call(this, {\n          body: {\n            authenticated: false,\n            err: 'BAD_USER_PKG',\n            username: pkg.username\n          }\n        }, {table: 'actions'})\n\n        return reject({\n          err: {\n            message: 'Could not validate user pkg: ' + pkg.username,\n            resource: 'AuthModel'\n          }\n        })\n      }\n\n      var user = await UserModel.prototype.getByUsername(pkg.username)\n\n      if(!user) {\n        Model.prototype.create.call(this, {\n          body: {\n            authenticated: false,\n            err: 'NO_USER',\n            username: pkg.username\n          }\n        }, {table: 'actions'})\n\n        return reject({\n          err: {\n            message: 'Could not get user: ' + pkg.username,\n            resource: 'AuthModel'\n          }\n        })\n      }\n\n      try {\n        var validated = await new PasswordService().verify(pkg.password, user.hash)\n      }\n      catch(e) {\n        Model.prototype.create.call(this, {\n          authenticated: false,\n          err: 'BAD_PASSWORD',\n          //password: pkg.password,\n          userId: user.id,\n          username: pkg.username\n        }, {table: 'actions'})\n\n        logger.info('Auth: Bad Password')\n\n        return reject({\n          err: {\n            message: 'Could not validate password',\n            resource: 'AuthModel'\n          }\n        })\n      }\n\n      Model.prototype.create.call(this, {\n        authenticated: true,\n        userId: user.id,\n        username: user.username\n      }, {table: 'actions'})\n\n      return resolve(user)\n\n    })\n  }\n\n  /**\n   * Logout user\n   *\n   * @public\n   * @param {Object} pkg - Logout data\n   */\n  logout(pkg = {}) {\n\n    return Model.prototype.create.call(this, {\n      unauthenticated: true,\n      userId: pkg.id,\n      username: pkg.username\n    }, {table: 'actions'})\n\n  }\n\n  /**\n   * Facebook authentication\n   *\n   * @public\n   * @param {Object} pkg - Login data\n   * @todo Needs work\n   */\n  authByFacebook(pkg) {\n    console.error('handle args', pkg)\n    return new Promise( (resolve, reject) => {\n\n      r.db(process.env.RETHINK_DB_NAME)\n        .table('users')\n        .filter({\n          strategies: {\n            facebook: {\n              id: pkg.profile.id\n            }\n          }\n        })\n        .limit(1)\n        .run()\n        .then( (res) => {\n          console.log('handle res', res)\n          resolve()\n        })\n        .catch( (err) => {\n          console.error('handle err', err)\n          reject()\n        })\n\n    })\n  }\n\n}\n\nexport default AuthModel\n"
  },
  {
    "__docId__": 123,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AuthModel",
    "memberof": "src/models/auth/index.js",
    "longname": "src/models/auth/index.js~AuthModel",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/models/auth/index.js",
    "importStyle": "AuthModel",
    "description": "AuthModel Class",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "AuthModel"
      }
    ],
    "interface": false,
    "extends": [
      "src/models/root.js~Model"
    ]
  },
  {
    "__docId__": 124,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/models/auth/index.js~AuthModel",
    "longname": "src/models/auth/index.js~AuthModel#constructor",
    "access": "public",
    "description": "AuthModel constructor",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 125,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "login",
    "memberof": "src/models/auth/index.js~AuthModel",
    "longname": "src/models/auth/index.js~AuthModel#login",
    "access": "public",
    "description": "Login user",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pkg",
        "description": "Login data"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 126,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "logout",
    "memberof": "src/models/auth/index.js~AuthModel",
    "longname": "src/models/auth/index.js~AuthModel#logout",
    "access": "public",
    "description": "Logout user",
    "lineNumber": 140,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pkg",
        "description": "Logout data"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 127,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "authByFacebook",
    "memberof": "src/models/auth/index.js~AuthModel",
    "longname": "src/models/auth/index.js~AuthModel#authByFacebook",
    "access": "public",
    "description": "Facebook authentication",
    "lineNumber": 157,
    "todo": [
      "Needs work"
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pkg",
        "description": "Login data"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 128,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/auth/schemas/create.js",
    "memberof": null,
    "longname": "src/models/auth/schemas/create.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type} from 'eisley'\n\nexport default new Schema({\n  email    : type('string'),\n  password : type('string'),\n  username : type('string')\n})\n"
  },
  {
    "__docId__": 129,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/auth/schemas/forgot-password.js",
    "memberof": null,
    "longname": "src/models/auth/schemas/forgot-password.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type} from 'eisley'\n\nexport default new Schema({\n  username : type('string')\n})\n"
  },
  {
    "__docId__": 130,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/auth/schemas/forgot-username.js",
    "memberof": null,
    "longname": "src/models/auth/schemas/forgot-username.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type} from 'eisley'\n\nexport default new Schema({\n  email : type('string')\n})\n"
  },
  {
    "__docId__": 131,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/auth/schemas/login.js",
    "memberof": null,
    "longname": "src/models/auth/schemas/login.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type} from 'eisley'\n\nexport default new Schema({\n  password : type('string'),\n  username : type('string')\n})\n"
  },
  {
    "__docId__": 132,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/bucket/index.js",
    "memberof": null,
    "longname": "src/models/bucket/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger} from '../../lib/logger'\nimport Model           from '../root'\n\n/**\n * BucketModel Class\n *\n * @public\n * @class BucketModel\n */\nclass BucketModel extends Model {\n\n  /**\n   * BucketModel constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(Object.assign({}, {\n      name: 'buckets',\n\n      permissions: {\n        create:  ['admin'],\n        delete:  ['admin'],\n        read:    ['organization'],\n        replace: ['admin'],\n        update:  ['admin'],\n      },\n      relations: {\n        belongsTo: [\n          {\n            Node: 'Channel',\n            foreignKey: 'id',\n            localField: 'channel',\n            localKey: 'channelId'\n          },\n          {\n            Node: 'Organization',\n            foreignKey: 'id',\n            localField: 'organization',\n            localKey: 'organizationId'\n          }\n        ]\n      },\n      schema: {\n        data: {\n          type: 'object'\n        },\n        desc: {\n          type: 'string'\n        },\n        /*\n        Example of a query with some documents\n\n        query: [\n          {\n            id: 5\n          },\n          // Get one article by author with id 543; this would get their latest article\n          {\n            filter: {\n              authorId: 543\n            },\n            limit: 1\n          },\n          // Get up to 5 articles that are in the category \"trending\"\n          {\n            filter: {\n              category: 'trending'\n            },\n            limit: 5\n          },\n          // Get up to 10 documents that have \"Kardashian\" as the title\n          {\n            match: /$kardashian$/,\n            key: 'title',\n            limit: 10\n          }\n        ]\n        */\n        query: {\n          type: 'array'\n        },\n        title: {\n          type: 'string'\n        }\n      }\n    }, options))\n  }\n\n}\n\nexport default BucketModel\n"
  },
  {
    "__docId__": 133,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "BucketModel",
    "memberof": "src/models/bucket/index.js",
    "longname": "src/models/bucket/index.js~BucketModel",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/models/bucket/index.js",
    "importStyle": "BucketModel",
    "description": "BucketModel Class",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "BucketModel"
      }
    ],
    "interface": false,
    "extends": [
      "src/models/root.js~Model"
    ]
  },
  {
    "__docId__": 134,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/models/bucket/index.js~BucketModel",
    "longname": "src/models/bucket/index.js~BucketModel#constructor",
    "access": "public",
    "description": "BucketModel constructor",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 135,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/channel/index.js",
    "memberof": null,
    "longname": "src/models/channel/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger} from '../../lib/logger'\nimport Model           from '../root'\nimport r               from '../../lib/database/driver'\n\n/**\n * ChannelModel Class\n *\n * @public\n * @class ChannelModel\n */\nclass ChannelModel extends Model {\n\n  /**\n   * ChannelModel constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(Object.assign({}, {\n      name: 'channels',\n\n      permissions: {\n        create:  ['admin'],\n        delete:  ['admin'],\n        read:    ['organization'],\n        replace: ['admin'],\n        update:  ['admin'],\n      },\n      relations: {\n        belongsTo: [\n          {\n            Node: 'Channel',\n            foreignKey: 'id',\n            localField: 'channelParent',\n            localKey: 'channelParentId'\n          },\n          {\n            Node: 'Organization',\n            foreignKey: 'id',\n            localField: 'organization',\n            localKey: 'organizationId'\n          }\n        ],\n        hasMany: [\n          {\n            Node: 'Bucket',\n            foreignKey: 'id',\n            localField: 'buckets',\n            localKey: 'bucketIds'\n          },\n          {\n            Node: 'Channel',\n            foreignKey: 'id',\n            localField: 'channelChildren',\n            localKey: 'channelChildrenIds'\n          },\n        ]\n      },\n      schema: {\n        bucketIds: {\n          type: 'array'\n        },\n        data: {\n          type: 'object'\n        },\n        desc: {\n          type: 'string'\n        },\n        slug: {\n          type: 'string'\n        },\n        title: {\n          type: 'string'\n        }\n      }\n    }, options))\n  }\n\n  /**\n   * Get all\n   *\n   * @public\n   */\n  getAll() {\n\n    return new Promise( async (resolve, reject) => {\n\n\n\n    })\n  }\n\n}\n\nexport default ChannelModel\n"
  },
  {
    "__docId__": 136,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ChannelModel",
    "memberof": "src/models/channel/index.js",
    "longname": "src/models/channel/index.js~ChannelModel",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/models/channel/index.js",
    "importStyle": "ChannelModel",
    "description": "ChannelModel Class",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "ChannelModel"
      }
    ],
    "interface": false,
    "extends": [
      "src/models/root.js~Model"
    ]
  },
  {
    "__docId__": 137,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/models/channel/index.js~ChannelModel",
    "longname": "src/models/channel/index.js~ChannelModel#constructor",
    "access": "public",
    "description": "ChannelModel constructor",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 138,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAll",
    "memberof": "src/models/channel/index.js~ChannelModel",
    "longname": "src/models/channel/index.js~ChannelModel#getAll",
    "access": "public",
    "description": "Get all",
    "lineNumber": 91,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 139,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/digital-asset/index.js",
    "memberof": null,
    "longname": "src/models/digital-asset/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger} from '../../lib/logger'\nimport fs              from 'fs'\nimport Model           from '../root'\nimport request         from 'superagent'\nimport r               from '../../lib/database/driver'\n\n/**\n * DigitalAssetModel Class\n *\n * @public\n * @class DigitalAssetModel\n */\nclass DigitalAssetModel extends Model {\n\n  /**\n   * DigitalAssetModel constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(Object.assign({}, {\n      name: 'digital-assets',\n\n      permissions: {\n        create:  ['user'],\n        delete:  ['admin'],\n        read:    ['organization'],\n        replace: ['admin'],\n        update:  ['user'],\n      },\n      relations: {\n        belongsTo: [\n          {\n            Node: 'Organization',\n            foreignKey: 'id',\n            localField: 'organization',\n            localKey: 'organizationId'\n          }\n        ],\n        hasMany: [\n          {\n            Node: 'Taxonomy',\n            foreignKey: 'id',\n            localField: 'taxonomys',\n            localKey: 'taxonomysId'\n          },\n        ]\n      },\n      schema: {\n        desc: {\n          type: 'string'\n        },\n        title: {\n          type: 'string'\n        }\n      }\n    }, options))\n  }\n\n  /**\n   * Create, or save, a new digital asset\n   *\n   * @public\n   * @param {Object} pkg - The data to save for the digital asset\n   */\n  create(pkg = {}) {\n\n    return new Promise( (resolve, reject) => {\n\n      var createFilesPromises = []\n\n      pkg.files.forEach( (file) => {\n        var insert = {\n          diskFileName: file.diskFileName,\n          mimetype: file.mimetype,\n          originalFileName: file.originalFileName,\n          originalSize: file.size,\n          storageAdaptor: file.storageAdaptor\n        }\n\n        createFilesPromises.push(Model.prototype.create.call(this, insert))\n      })\n\n      Promise.all(createFilesPromises)\n        .then( (values) => {\n          //console.error('create values', values)\n          values = this.pkgAll(values)\n          resolve(values)\n        })\n        .catch( (err) => reject(err))\n\n    })\n\n  }\n\n  /**\n   * Some embeds have a 3rd party JS script that needs to be appended to the page for them to load\n   *\n   * @public\n   * @param {String} type - Which site's embed\n   */\n  embedScript(type) {\n\n    switch(type) {\n\n      case 'imgur':\n        return `<script async src=\"//s.imgur.com/min/embed.js\" charset=\"utf-8\"></script>`\n\n      case 'instagram':\n        return `<script async defer src=\\\"//platform.instagram.com/en_US/embeds.js\\\"></script>`\n\n      case 'pinterest':\n        return `<script async defer src=\"//assets.pinterest.com/js/pinit.js\"></script>`\n\n      case 'reddit':\n        return `<script async src=\\\"https://www.redditstatic.com/comment-embed.js\\\"></script>`\n\n      case 'twitter':\n        return `<script async src=\\\"//platform.twitter.com/widgets.js\\\" charset=\\\"utf-8\\\"></script>`\n\n      case 'tumblr':\n        return `<script async src=\\\"https://secure.assets.tumblr.com/post.js\\\"></script>`\n\n      default:\n        return ''\n\n    }\n\n  }\n\n  /**\n   * Fetch the embed data\n   *\n   * @public\n   * @param {Object} pkg - The data pkg holding the information about which embed to fetch\n   */\n  fetchEmbed(pkg = {}) {\n    var type = pkg.type,\n        url  = ''\n\n    return new Promise( (resolve, reject) => {\n\n      switch(type) {\n\n        case 'aol':\n          url = `http://api.embed.ly/1/oembed?url=${pkg.url}`\n          break\n\n        case 'dailymotion':\n          url = `http://www.dailymotion.com/services/oembed?url=${pkg.url}`\n          break\n\n        case 'deviantart':\n          url = `http://backend.deviantart.com/oembed?url=${pkg.url}`\n          break\n\n        case 'flickr':\n          url = `http://www.flickr.com/services/oembed/?url=${pkg.url}`\n          break\n\n        case 'funnyordie':\n          url = `http://www.funnyordie.com/oembed.json?url=${pkg.url}`\n          break\n\n        case 'getty':\n          url = ` http://embed.gettyimages.com/oembed?url=${pkg.url}`\n          break\n\n        case 'gfycat':\n          url = `https://api.gfycat.com/v1/oembed?url=${pkg.url}`\n          break\n\n        case 'hulu':\n          url = `http://www.hulu.com/api/oembed.xml?url=${pkg.url}`\n          break\n\n        case 'ifttt':\n          url = `https://ifttt.com/oembed?url=${pkg.url}`\n          break\n\n        case 'imgur':\n          url = `http://api.imgur.com/oembed?url=${pkg.url}`\n          break\n\n        case 'instagram':\n          url = `https://api.instagram.com/oembed?url=${pkg.url}`\n          break\n\n        case 'kickstarter':\n          url = `http://www.kickstarter.com/services/oembed?url=${pkg.url}`\n          break\n\n        case 'meetup':\n          url = `https://api.meetup.com/oembed?format=json&url=${pkg.url}`\n          break\n\n        case 'newyorktimes':\n          url = `https://www.nytimes.com/svc/oembed/html/?url=${pkg.url}`\n          break\n\n        case 'pinterest':\n          return resolve({\n            html: `<a data-pin-do=\"embedPin\" data-pin-width=\"${(pkg.size || 'small')}\" href=\"${pkg.url}\"></a>`,\n            pinSize: pkg.size || 'small',\n            script: this.embedScript(pkg.type)\n          })\n\n        case 'soundcloud':\n          url = `https://soundcloud.com/oembed?url=${pkg.url}`\n          break\n\n        case 'reddit':\n          url = `https://www.reddit.com/oembed?url=${pkg.url}`\n          break\n\n        case 'twitter':\n          url = `https://api.twitter.com/1/statuses/oembed.json?url=${pkg.url}`\n          break\n\n        case 'tumblr':\n          url = `http://www.tumblr.com/oembed/1.0?url=${pkg.url}`\n          break\n\n        case 'ustream':\n          url = `http://www.ustream.tv/oembed?url=${pkg.url}`\n          break\n\n        case 'vimeo':\n          url = `https://vimeo.com/api/oembed.json?url=${pkg.url}`\n          break\n\n        case 'vine':\n          url = `https://vine.co/oembed.json?url=${pkg.url}`\n          break\n\n        case 'youtube':\n          url = `https://www.youtube.com/oembed?url=${pkg.url}?v=${pkg.v}&format=json`\n          break\n\n        default:\n          return Promise.reject()\n      }\n\n      request\n        .get(url)\n        .end( (err, res) => {\n\n          if(err) {\n            logger.error('There was an error fetching the embed')\n            console.error(err)\n            return reject(err)\n          }\n\n          return resolve(Object.assign(res.body, {\n            script: this.embedScript(type)\n          }))\n\n        })\n\n    })\n\n  }\n\n  /**\n   * Get all digital assets\n   *\n   * @public\n   */\n  getAll() {\n\n    return new Promise( (resolve, reject) => {\n\n      Model.prototype.getAll.call(this)\n        .then( (values) => {\n          values = this.pkgAll(values)\n\n          resolve(values)\n        })\n        .catch((err) => {\n          reject(err)\n        })\n\n    })\n  }\n\n  /**\n   * Create digital asset data package for API\n   *\n   * @public\n   * @param {Object} value - The value object being passed to the API\n   */\n  pkg(value) {\n\n    value.src = {\n      url: `http://${process.env.HOST}/api/v0.1/${this.entityName}/${value.sid}/view`\n    }\n\n    return value\n\n  }\n\n  /**\n   * Package all values\n   *\n   * @public\n   * @param {String} values\n   */\n  pkgAll(values) {\n    values = values.map(this.pkg.bind(this))\n\n    return values\n  }\n\n  /**\n   * Serve digital asset from url\n   *\n   * @public\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   */\n  view(req, res) {\n\n    var id = req.params.id\n\n    /*\n    TODO:\n    This is the disk adapter - need to account for each adaptor\n    */\n    this.getById(id)\n      .then( (doc) => {\n        const filePath = `/tmp/uploads/${doc.diskFileName}`\n\n        res.sendFile(filePath)\n      })\n      .catch((err) => {\n        logger.error('Could not find asset', err)\n      })\n\n  }\n\n}\n\nexport default DigitalAssetModel\n"
  },
  {
    "__docId__": 140,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DigitalAssetModel",
    "memberof": "src/models/digital-asset/index.js",
    "longname": "src/models/digital-asset/index.js~DigitalAssetModel",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/models/digital-asset/index.js",
    "importStyle": "DigitalAssetModel",
    "description": "DigitalAssetModel Class",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DigitalAssetModel"
      }
    ],
    "interface": false,
    "extends": [
      "src/models/root.js~Model"
    ]
  },
  {
    "__docId__": 141,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/models/digital-asset/index.js~DigitalAssetModel",
    "longname": "src/models/digital-asset/index.js~DigitalAssetModel#constructor",
    "access": "public",
    "description": "DigitalAssetModel constructor",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 142,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/models/digital-asset/index.js~DigitalAssetModel",
    "longname": "src/models/digital-asset/index.js~DigitalAssetModel#create",
    "access": "public",
    "description": "Create, or save, a new digital asset",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pkg",
        "description": "The data to save for the digital asset"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 143,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "embedScript",
    "memberof": "src/models/digital-asset/index.js~DigitalAssetModel",
    "longname": "src/models/digital-asset/index.js~DigitalAssetModel#embedScript",
    "access": "public",
    "description": "Some embeds have a 3rd party JS script that needs to be appended to the page for them to load",
    "lineNumber": 109,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Which site's embed"
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 144,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fetchEmbed",
    "memberof": "src/models/digital-asset/index.js~DigitalAssetModel",
    "longname": "src/models/digital-asset/index.js~DigitalAssetModel#fetchEmbed",
    "access": "public",
    "description": "Fetch the embed data",
    "lineNumber": 144,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pkg",
        "description": "The data pkg holding the information about which embed to fetch"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 145,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAll",
    "memberof": "src/models/digital-asset/index.js~DigitalAssetModel",
    "longname": "src/models/digital-asset/index.js~DigitalAssetModel#getAll",
    "access": "public",
    "description": "Get all digital assets",
    "lineNumber": 276,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 146,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "pkg",
    "memberof": "src/models/digital-asset/index.js~DigitalAssetModel",
    "longname": "src/models/digital-asset/index.js~DigitalAssetModel#pkg",
    "access": "public",
    "description": "Create digital asset data package for API",
    "lineNumber": 299,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value object being passed to the API"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 147,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "pkgAll",
    "memberof": "src/models/digital-asset/index.js~DigitalAssetModel",
    "longname": "src/models/digital-asset/index.js~DigitalAssetModel#pkgAll",
    "access": "public",
    "description": "Package all values",
    "lineNumber": 315,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "values",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 148,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "view",
    "memberof": "src/models/digital-asset/index.js~DigitalAssetModel",
    "longname": "src/models/digital-asset/index.js~DigitalAssetModel#view",
    "access": "public",
    "description": "Serve digital asset from url",
    "lineNumber": 328,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 149,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/document/index.js",
    "memberof": null,
    "longname": "src/models/document/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger}  from '../../lib/logger'\nimport DocumentRevision from '../document-revision'\nimport documentSchema   from './schemas/document'\nimport Model            from '../root'\nimport r                from '../../lib/database/driver'\n\n//import config from '../../config'\n\n/**\n * DocumentModel Class\n *\n * @public\n * @class DocumentModel\n */\nclass DocumentModel extends Model {\n\n  /**\n   * DocumentModel constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(Object.assign({}, {\n      name: 'documents',\n\n      permissions: {\n        create:  ['user'],\n        delete:  ['admin'],\n        read:    ['organization'],\n        replace: ['admin'],\n        update:  ['user'],\n      },\n      relations: {\n        belongsTo: [\n          {\n            Node: 'Organization',\n            foreignKey: 'id',\n            localField: 'organization',\n            localKey: 'organizationId'\n          },\n          {\n            Node: 'Template',\n            foreignKey: 'id',\n            localField: 'template',\n            localKey: 'templateId'\n          },\n          {\n            Node: 'User',\n            foreignKey: 'id',\n            localField: 'user',\n            localKey: 'userId'\n          }\n        ],\n        hasMany: [\n          {\n            Node: 'Taxonomy',\n            foreignKey: 'id',\n            localField: 'taxonomys',\n            localKey: 'taxonomysId'\n          },\n        ]\n      },\n      schema: documentSchema\n    }, options))\n  }\n\n  /**\n   * Create, or save, a document\n   *\n   * @public\n   * @param {Object} pkg - The data to save for the document\n   */\n  create(pkg = {}) {\n\n    /*\n    NOTE:\n    When a document is created with fields, we need to take those fields and place them on a revision\n    */\n    var fields = []\n    if(pkg.fields) {\n      fields = pkg.fields.slice(0)\n      delete pkg.fields\n    }\n\n    return new Promise( async (resolve, reject) => {\n      // Create document\n      var doc = await Model.prototype.create.call(this, pkg)\n\n      // Create revision\n      var revision = await new DocumentRevision().create({\n        documentId: doc.id,\n        fields\n      })\n\n      // Associate document with revision\n      var update = await this.update(doc.id, {\n        activeRevisionId: revision.id,\n        revisionIds: [revision.id],\n        title: doc.title // To satisfy the schema\n      })\n\n      resolve(update)\n    })\n  }\n\n  /**\n   * Get all documents\n   *\n   * @public\n   */\n  getAll() {\n    return new Promise( async (resolve, reject) => {\n\n      var docs = await Model.prototype.getAll.call(this),\n          docsResolved = []\n\n      docs.forEach( (doc) => {\n        docsResolved.push(this.getActiveRevision(doc).then( (revision) => {\n          return Object.assign(doc, {\n            fields: revision.fields\n          })\n        }))\n      })\n\n      Promise.all(docsResolved)\n        .then( (docs) => {\n          resolve(docs)\n        })\n\n    })\n  }\n\n  /**\n   * Get document by ID\n   *\n   * @public\n   * @param {String} id\n   */\n  getById(id) {\n\n    return new Promise( async (resolve, reject) => {\n\n      var doc = await Model.prototype.getById.call(this, id)\n\n      if(!doc.id) {\n        logger.error('Could not get document', id)\n        return reject(doc)\n      }\n\n      var revision = await this.getActiveRevision(doc)\n\n      Object.assign(doc, {\n        fields: revision.fields\n      })\n\n      return resolve(doc)\n\n    })\n\n  }\n\n  /**\n   * Get the document's active revision\n   *\n   * @public\n   * @param {Object} doc - The document\n   */\n  getActiveRevision(doc) {\n\n    return new Promise( async (resolve, reject) => {\n      if(!doc.activeRevisionId) return resolve({\n        fields: [],\n        title: doc.title\n      })\n\n      var revision = await new DocumentRevision().getById(doc.activeRevisionId)\n\n      if(!revision.id) {\n        logger.error('Could not get document revision for', doc.id)\n        return reject(revision)\n      }\n\n      resolve(revision)\n\n    })\n\n  }\n\n}\n\nexport default DocumentModel\n"
  },
  {
    "__docId__": 150,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DocumentModel",
    "memberof": "src/models/document/index.js",
    "longname": "src/models/document/index.js~DocumentModel",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/models/document/index.js",
    "importStyle": "DocumentModel",
    "description": "DocumentModel Class",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DocumentModel"
      }
    ],
    "interface": false,
    "extends": [
      "src/models/root.js~Model"
    ]
  },
  {
    "__docId__": 151,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/models/document/index.js~DocumentModel",
    "longname": "src/models/document/index.js~DocumentModel#constructor",
    "access": "public",
    "description": "DocumentModel constructor",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 152,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/models/document/index.js~DocumentModel",
    "longname": "src/models/document/index.js~DocumentModel#create",
    "access": "public",
    "description": "Create, or save, a document",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pkg",
        "description": "The data to save for the document"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 153,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAll",
    "memberof": "src/models/document/index.js~DocumentModel",
    "longname": "src/models/document/index.js~DocumentModel#getAll",
    "access": "public",
    "description": "Get all documents",
    "lineNumber": 118,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 154,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getById",
    "memberof": "src/models/document/index.js~DocumentModel",
    "longname": "src/models/document/index.js~DocumentModel#getById",
    "access": "public",
    "description": "Get document by ID",
    "lineNumber": 146,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 155,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getActiveRevision",
    "memberof": "src/models/document/index.js~DocumentModel",
    "longname": "src/models/document/index.js~DocumentModel#getActiveRevision",
    "access": "public",
    "description": "Get the document's active revision",
    "lineNumber": 175,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "doc",
        "description": "The document"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 156,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/document/schemas/document.js",
    "memberof": null,
    "longname": "src/models/document/schemas/document.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type} from 'eisley'\n\nexport default new Schema({\n  title : type('string')\n})\n"
  },
  {
    "__docId__": 157,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/document-revision/index.js",
    "memberof": null,
    "longname": "src/models/document-revision/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger}        from '../../lib/logger'\nimport DigitalAsset           from '../digital-asset'\nimport documentrevisionSchema from './schemas/document-revision'\nimport Model                  from '../root'\nimport r                      from '../../lib/database/driver'\nimport RevisionModel          from '../revision'\n\n/**\n * DocumentRevisionModel Class\n *\n * @public\n * @class DocumentRevisionModel\n */\nclass DocumentRevisionModel extends RevisionModel {\n\n  /**\n   * DocumentRevisionModel constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(Object.assign({}, {\n      name: 'document-revisions',\n\n      permissions: {\n        create:  ['user'],\n        delete:  ['admin'],\n        read:    ['organization'],\n        replace: ['admin'],\n        update:  ['user'],\n      },\n      relations: {\n        belongsTo: [\n          {\n            Node: 'Document',\n            foreignKey: 'id',\n            localField: 'document',\n            localKey: 'documentId'\n          }\n        ]\n      },\n      schema: documentrevisionSchema\n    }, options))\n  }\n\n}\n\nexport default DocumentRevisionModel\n"
  },
  {
    "__docId__": 158,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DocumentRevisionModel",
    "memberof": "src/models/document-revision/index.js",
    "longname": "src/models/document-revision/index.js~DocumentRevisionModel",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/models/document-revision/index.js",
    "importStyle": "DocumentRevisionModel",
    "description": "DocumentRevisionModel Class",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "DocumentRevisionModel"
      }
    ],
    "interface": false,
    "extends": [
      "src/models/revision.js~RevisionModel"
    ]
  },
  {
    "__docId__": 159,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/models/document-revision/index.js~DocumentRevisionModel",
    "longname": "src/models/document-revision/index.js~DocumentRevisionModel#constructor",
    "access": "public",
    "description": "DocumentRevisionModel constructor",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 160,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/document-revision/schemas/document-revision.js",
    "memberof": null,
    "longname": "src/models/document-revision/schemas/document-revision.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type} from 'eisley'\n\nexport default new Schema({\n  fields : type('array')\n})\n"
  },
  {
    "__docId__": 161,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/field/index.js",
    "memberof": null,
    "longname": "src/models/field/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger} from '../../lib/logger'\nimport Model           from '../root'\nimport r               from '../../lib/database/driver'\n\n/**\n * FieldModel Class\n *\n * @public\n * @class FieldModel\n */\nclass FieldModel extends Model {\n\n  /**\n   * FieldModel constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(Object.assign({}, {\n      name: 'fields',\n\n      permissions: {\n        create:  ['user', 'admin'],\n        delete:  ['admin'],\n        read:    ['user', 'organization', 'admin'],\n        replace: ['admin'],\n        update:  ['user', 'organization', 'admin'],\n      },\n      relations: {\n        belongsTo: [\n          {\n            Node: 'Organization',\n            foreignKey: 'id',\n            localField: 'organization',\n            localKey: 'organizationId'\n          }\n        ]\n      },\n      schema: {\n\n      }\n    }, options))\n  }\n\n}\n\nexport default FieldModel\n"
  },
  {
    "__docId__": 162,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FieldModel",
    "memberof": "src/models/field/index.js",
    "longname": "src/models/field/index.js~FieldModel",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/models/field/index.js",
    "importStyle": "FieldModel",
    "description": "FieldModel Class",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "FieldModel"
      }
    ],
    "interface": false,
    "extends": [
      "src/models/root.js~Model"
    ]
  },
  {
    "__docId__": 163,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/models/field/index.js~FieldModel",
    "longname": "src/models/field/index.js~FieldModel#constructor",
    "access": "public",
    "description": "FieldModel constructor",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 164,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/organization/index.js",
    "memberof": null,
    "longname": "src/models/organization/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger}    from '../../lib/logger'\nimport Model              from '../root'\nimport organizationSchema from './schemas/organization'\nimport r                  from '../../lib/database/driver'\n\n/**\n * OrganziationModel Class\n *\n * @public\n * @class OrganziationModel\n */\nclass OrganizationModel extends Model {\n\n  /**\n   * OrganizationModel constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(Object.assign({}, {\n      name: 'organizations',\n\n      permissions: {\n        create:  ['admin'],\n        delete:  ['admin'],\n        read:    ['organization'],\n        replace: ['admin'],\n        update:  ['admin'],\n      },\n      relations: {\n        hasMany: [\n          {\n            Node: 'App',\n            foreignKey: 'id',\n            localField: 'apps',\n            localKey: 'appIds'\n          },\n          {\n            Node: 'Bucket',\n            foreignKey: 'id',\n            localField: 'buckts',\n            localKey: 'bucketIds'\n          },\n          {\n            Node: 'User',\n            foreignKey: 'id',\n            localField: 'users',\n            localKey: 'userIds'\n          }\n        ]\n      },\n      schema: organizationSchema\n    }, options))\n  }\n\n}\n\nexport default OrganizationModel\n"
  },
  {
    "__docId__": 165,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "OrganizationModel",
    "memberof": "src/models/organization/index.js",
    "longname": "src/models/organization/index.js~OrganizationModel",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/models/organization/index.js",
    "importStyle": "OrganizationModel",
    "description": "OrganziationModel Class",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "OrganziationModel"
      }
    ],
    "interface": false,
    "extends": [
      "src/models/root.js~Model"
    ]
  },
  {
    "__docId__": 166,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/models/organization/index.js~OrganizationModel",
    "longname": "src/models/organization/index.js~OrganizationModel#constructor",
    "access": "public",
    "description": "OrganizationModel constructor",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 167,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/organization/schemas/organization.js",
    "memberof": null,
    "longname": "src/models/organization/schemas/organization.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type} from 'eisley'\n\nexport default new Schema({\n  desc  : type('string'),\n  title : type('string')\n})\n"
  },
  {
    "__docId__": 168,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/registry/index.js",
    "memberof": null,
    "longname": "src/models/registry/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger} from '../../lib/logger'\nimport registry        from '../../lib/registry'\nimport Model           from '../root'\nimport r               from '../../lib/database/driver'\n\n/**\n * RegistryModel Class\n *\n * @public\n * @class RegistryModel\n */\nclass RegistryModel extends Model {\n\n  /**\n   * RegistryModel constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(Object.assign({}, {\n      name: 'registry',\n\n      permissions: {\n        create:  ['admin'],\n        delete:  ['admin'],\n        read:    ['organization'],\n        replace: ['admin'],\n        update:  ['admin'],\n      },\n      relations: {\n        belongsTo: [\n          {\n            Node: 'Organization',\n            foreignKey: 'id',\n            localField: 'organization',\n            localKey: 'organizationId'\n          },\n        ],\n        hasMany: [\n          {\n            Node: 'Plugin',\n            foreignKey: 'id',\n            localField: 'plugins',\n            localKey: 'pluginIds'\n          },\n        ]\n      },\n      schema: {\n        desc: {\n          type: 'string'\n        },\n        title: {\n          type: 'string'\n        }\n      }\n    }, options))\n  }\n\n  /**\n   * Create, or save, a registry item\n   *\n   * @public\n   * @param {Object} pkg - The data to save for the registry item\n   */\n  create(pkg = {}) {\n\n    return new Promise( (resolve, reject) => {\n\n\n\n    })\n  }\n\n  /**\n   * Get all registry items\n   *\n   * @public\n   */\n  getAll() {\n\n    return new Promise( async (resolve, reject) => {\n\n      var items = await Model.prototype.getAll.call(this)\n      items = items.concat(registry.items)\n\n      var pkg = {\n        adaptors: [],\n        fields: [],\n        plugins: []\n      }\n\n      items.forEach( (item) => {\n        switch(item.type) {\n          case 'adaptor':\n            pkg.adaptors.push(item)\n            break\n          case 'field':\n            pkg.fields.push(item)\n            break\n          case 'plugin':\n            pkg.plugins.push(item)\n            break\n        }\n      })\n\n      resolve(pkg)\n\n    })\n\n  }\n\n  /**\n   * Get registry setting by name\n   *\n   * @public\n   * @param {Object} pkg - The data holding the name\n   */\n  getSettingsByName(pkg = {}) {\n\n    return new Promise( (resolve, reject) => {\n\n      try {\n        var pluginSettings = require(pkg.name).default.settings\n        resolve(pluginSettings)\n      }\n      catch(e) {\n        reject(e)\n      }\n\n    })\n\n  }\n\n}\n\nexport default RegistryModel\n"
  },
  {
    "__docId__": 169,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "RegistryModel",
    "memberof": "src/models/registry/index.js",
    "longname": "src/models/registry/index.js~RegistryModel",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/models/registry/index.js",
    "importStyle": "RegistryModel",
    "description": "RegistryModel Class",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "RegistryModel"
      }
    ],
    "interface": false,
    "extends": [
      "src/models/root.js~Model"
    ]
  },
  {
    "__docId__": 170,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/models/registry/index.js~RegistryModel",
    "longname": "src/models/registry/index.js~RegistryModel#constructor",
    "access": "public",
    "description": "RegistryModel constructor",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 171,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/models/registry/index.js~RegistryModel",
    "longname": "src/models/registry/index.js~RegistryModel#create",
    "access": "public",
    "description": "Create, or save, a registry item",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pkg",
        "description": "The data to save for the registry item"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 172,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAll",
    "memberof": "src/models/registry/index.js~RegistryModel",
    "longname": "src/models/registry/index.js~RegistryModel#getAll",
    "access": "public",
    "description": "Get all registry items",
    "lineNumber": 86,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 173,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSettingsByName",
    "memberof": "src/models/registry/index.js~RegistryModel",
    "longname": "src/models/registry/index.js~RegistryModel#getSettingsByName",
    "access": "public",
    "description": "Get registry setting by name",
    "lineNumber": 125,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pkg",
        "description": "The data holding the name"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 174,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/revision/index.js",
    "memberof": null,
    "longname": "src/models/revision/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger} from '../../lib/logger'\nimport DigitalAsset    from '../digital-asset'\nimport Model           from '../root'\nimport r               from '../../lib/database/driver'\n\n/**\n * RevisionModel Class\n *\n * @public\n * @class RevisionModel\n */\nclass RevisionModel extends Model {\n\n  /**\n   * RevisionModel constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(Object.assign({}, {\n      name: 'revisions',\n\n      permissions: {\n        create:  ['user'],\n        delete:  ['admin'],\n        read:    ['organization'],\n        replace: ['admin'],\n        update:  ['user'],\n      },\n      relations: {\n        belongsTo: [\n          {\n            Node: 'Document',\n            foreignKey: 'id',\n            localField: 'document',\n            localKey: 'documentId'\n          }\n        ]\n      },\n      schema: {\n        desc: {\n          type: 'string'\n        },\n        title: {\n          type: 'string'\n        }\n      }\n    }, options))\n  }\n\n  /**\n   * Get all revisions\n   *\n   * @public\n   */\n  getAll() {\n\n    return new Promise( (resolve, reject) => {\n\n      Model.prototype.getAll.call(this)\n        .then( (revisions) => {\n\n          var resolvedRevisions = []\n          revisions.forEach( (revision) => {\n            resolvedRevisions.push(this.resolveFields(revisions))\n          })\n\n          Promise.all(resolvedRevisions)\n            .then( (revisions) => {\n              resolve(revisions)\n            })\n            .catch( (err) => {\n              logger.error('Error resolving revisions', err)\n              reject(err)\n            })\n        })\n        .catch( (err) => {\n          logger.error('Could not get revisions', err)\n        })\n\n    })\n\n  }\n\n  /**\n   * Get a revision by ID\n   *\n   * @public\n   * @param {String} id\n   */\n  getById(id) {\n\n    return new Promise( async (resolve, reject) => {\n\n      var revision = await Model.prototype.getById.call(this, id)\n\n      if(!revision.id) {\n        logger.error('Could not get revision', id)\n        return reject(revisions)\n      }\n\n      this.resolveFields(revision)\n        .then( (revision) => {\n          resolve(revision)\n        })\n        .catch( (err) => {\n          logger.error('Could not resolve fields for revision', err)\n        })\n\n    })\n\n  }\n\n  /**\n   * Get a field reference\n   *\n   * @public\n   * @param {Object} ref - The field reference data\n   */\n  getFieldReference(ref = {}) {\n    return new Promise( (resolve, reject) => {\n\n      r.db(process.env.RETHINK_DB_NAME).table(ref.node.replace('-', '_')).get(ref.id).run()\n        .then( (res) => {\n          resolve(res)\n        })\n        .catch( (err) => {\n          console.error('Could not get field reference', err)\n          reject(err)\n        })\n\n    })\n  }\n\n  /**\n   * Get references for a field\n   *\n   * @public\n   * @param {Object} field - The field\n   */\n  getFieldReferences(field = {}) {\n    var resolvedRefs = 0\n\n    return new Promise( (resolve, reject) => {\n\n      if(!field.__refs) {\n        return resolve(field)\n      }\n\n      field.__refs.forEach( (ref) => {\n        this.getFieldReference(ref)\n          .then( (res) => {\n\n            switch(ref.node) {\n              case 'digital-asset':\n\n                var da   = new DigitalAsset(),\n                    pkgd = da.pkg(res)\n\n                Object.assign(field, {\n                  body: {\n                    mimetype: pkgd.mimetype,\n                    src: pkgd.src\n                  }\n                })\n\n                break\n\n              /*\n              TODO:\n              Not quite sure what to do here\n              */\n              default:\n                var re = Object.assign({}, res)\n                delete re.id\n\n                Object.assign(field, {\n                  body: re\n                })\n            }\n\n            resolvedRefs++\n\n            if(field.__refs.length == resolvedRefs) {\n              resolve(field)\n            }\n          })\n          .catch( (err) => {\n            logger.error('Could not handle field references', err)\n            reject(err)\n          })\n\n      })\n\n    })\n  }\n\n  /**\n   * Resolve field references\n   *\n   * @public\n   * @param {Object} field - The field\n   */\n  resolveFieldReferences(field) {\n\n    return new Promise( (resolve, reject) => {\n\n      var resolvedRefs = []\n      resolvedRefs.push(this.getFieldReferences(field))\n\n      Promise\n        .all(resolvedRefs)\n        .then( (fields) => {\n          resolve(fields[0])\n        })\n        .catch( (err) => {\n          logger.error('Error fetching revision field references', err)\n          reject(err)\n        })\n\n    })\n\n  }\n\n  /**\n   * Resolve fields for revision\n   *\n   * @public\n   * @param {Object} revision - The revision\n   */\n  resolveFields(revision) {\n\n    return new Promise( (resolve, reject) => {\n\n      var fieldsResolved = []\n\n      if(revision.fields) {\n        revision.fields.forEach( (field, i) => {\n          fieldsResolved.push(this.resolveFieldReferences(field, i))\n        })\n\n        Promise\n          .all(fieldsResolved)\n          .then( (fields) => {\n            Object.assign(revision, {\n              fields\n            })\n\n            resolve(revision)\n          })\n          .catch( (err) => {\n            reject(err)\n          })\n      }\n      else {\n        resolve(revision)\n      }\n\n    })\n\n  }\n\n}\n\nexport default RevisionModel\n"
  },
  {
    "__docId__": 175,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "RevisionModel",
    "memberof": "src/models/revision/index.js",
    "longname": "src/models/revision/index.js~RevisionModel",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/models/revision/index.js",
    "importStyle": "RevisionModel",
    "description": "RevisionModel Class",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "RevisionModel"
      }
    ],
    "interface": false,
    "extends": [
      "src/models/root.js~Model"
    ]
  },
  {
    "__docId__": 176,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/models/revision/index.js~RevisionModel",
    "longname": "src/models/revision/index.js~RevisionModel#constructor",
    "access": "public",
    "description": "RevisionModel constructor",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 177,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAll",
    "memberof": "src/models/revision/index.js~RevisionModel",
    "longname": "src/models/revision/index.js~RevisionModel#getAll",
    "access": "public",
    "description": "Get all revisions",
    "lineNumber": 63,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 178,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getById",
    "memberof": "src/models/revision/index.js~RevisionModel",
    "longname": "src/models/revision/index.js~RevisionModel#getById",
    "access": "public",
    "description": "Get a revision by ID",
    "lineNumber": 98,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 179,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getFieldReference",
    "memberof": "src/models/revision/index.js~RevisionModel",
    "longname": "src/models/revision/index.js~RevisionModel#getFieldReference",
    "access": "public",
    "description": "Get a field reference",
    "lineNumber": 127,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "ref",
        "description": "The field reference data"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 180,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getFieldReferences",
    "memberof": "src/models/revision/index.js~RevisionModel",
    "longname": "src/models/revision/index.js~RevisionModel#getFieldReferences",
    "access": "public",
    "description": "Get references for a field",
    "lineNumber": 148,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": "The field"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 181,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resolveFieldReferences",
    "memberof": "src/models/revision/index.js~RevisionModel",
    "longname": "src/models/revision/index.js~RevisionModel#resolveFieldReferences",
    "access": "public",
    "description": "Resolve field references",
    "lineNumber": 211,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "field",
        "description": "The field"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 182,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resolveFields",
    "memberof": "src/models/revision/index.js~RevisionModel",
    "longname": "src/models/revision/index.js~RevisionModel#resolveFields",
    "access": "public",
    "description": "Resolve fields for revision",
    "lineNumber": 238,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "revision",
        "description": "The revision"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 183,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/root.js",
    "memberof": null,
    "longname": "src/models/root.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger} from '../lib/logger'\nimport EventEmitter    from '../lib/eventemitter'\nimport mixin           from '../lib/mixin'\nimport ShortId         from '../services/short-id'\nimport r               from '../lib/database/driver'\nimport uuid            from '../lib/utils/uuid'\n\n/**\n * RootModel Class\n *\n * @public\n * @class RootModel\n */\nclass RootModel {\n\n  /**\n   * RootModel constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n\n    /**\n     * Default parameters\n     *\n     * @private\n     * @type {Object}\n     */\n    this.defaults = {}\n\n    /**\n     * Default read/write permissions for model.\n     *\n     * @private\n     * @type {Object}\n     */\n    this.permissions = {\n      create:  ['admin'],\n      delete:  ['admin'],\n      read:    ['public'],\n      replace: ['admin'],\n      update:  ['admin'],\n    }\n\n    /**\n     * Assign options to this\n     *\n     * @private\n     * @type {Object}\n     */\n    Object.assign(this, options)\n    if(!this.name) {\n      throw new Error('model.name must be defined')\n    }\n\n    /**\n     * Name of the default table the model works with.\n     *\n     * @private\n     * @type {String}\n     */\n    if(!this.table) this.table = this.name.replace(/\\-/g, '_')\n\n    /**\n     * (optional) Table schema\n     *\n     * @private\n     * @type {Object}\n     */\n    var schema = {}\n\n  }\n\n  /**\n   * Create, or save, data for the model\n   *\n   * @public\n   * @param {Object} pkg - Data to be saved\n   * @param {Object} options - Options\n   */\n  create(pkg = {}, options = {}) {\n\n    return new Promise( async (resolve, reject) => {\n\n      //If the model has a schema, validate it\n      var schema = options.schema || this.schema\n\n      if(schema) {\n\n        var validation = this.validate(pkg, schema)\n\n        if(validation.err) {\n          logger.debug('Create validation error')\n          logger.debug(validation.err)\n          return reject(validation.err)\n        }\n\n        delete options.schema\n\n      }\n\n      var insertOptions = {\n        returnChanges: options.returnChanges || true\n      }\n\n      pkg.createdAt  = r.now()\n      pkg.id         = pkg.id || uuid()\n      pkg.sid        = new ShortId().issue(pkg.id)\n      pkg.updatedAt  = r.now()\n      pkg.__version  = process.env.npm_package_version\n\n      try {\n\n        var res = await r.table(options.table || this.table).insert(pkg, insertOptions)\n        if(res.errors && res.errors > 0) {\n          return reject(res.first_error)\n        }\n\n        var doc = res.changes[0].new_val\n\n        //logger.debug('Document created', doc)\n        if(pkg.__refs && pkg.__refs.length > 0) {\n\n          var refs = []\n          pkg.__refs.forEach( (ref) => {\n            refs.push(this.referenceTo('belongsTo', doc.id, ref))\n          })\n\n          return Promise\n            .all(refs)\n            .then( () => {\n              resolve(doc)\n            })\n            .catch(reject)\n        }\n\n        else {\n          return resolve(doc)\n        }\n      }\n      catch(err) {\n        logger.error('Could not create')\n        console.error(err)\n        reject(err)\n      }\n\n    })\n  }\n\n  /**\n   * Delete by id\n   *\n   * @public\n   * @param {String} id\n   */\n  delete(id) {\n    return Promise.resolve()\n  }\n\n  /**\n   * Get model by id\n   *\n   * @public\n   * @param {String} id\n   */\n  getById(id) {\n\n    // Short ID\n    if(id.length <= 10) {\n\n      return new Promise( async (resolve, reject) => {\n\n        try {\n          var doc = await r.table(this.table).filter({sid: id}).limit(1)\n          return resolve(this.getById(doc[0].id))\n        }\n        catch(err) {\n          logger.error('Could not get by id')\n          console.error(err.stack)\n          throw err\n        }\n\n      })\n    }\n\n    // Long ID\n    else {\n      return r.table(this.table).get(id)\n    }\n\n  }\n\n  /**\n   * Get all from table\n   *\n   * @public\n   * @todo Add logic to limit, paginate, etc.\n   */\n  getAll() {\n    return r.table(this.table).orderBy(r.desc('updatedAt')).limit(10)\n  }\n\n  /**\n   * Get model relationships\n   *\n   * @private\n   * @param {String} Relationship type\n   */\n  getRelations(type) {\n    var relations = []\n\n    Object.keys(this.relations).forEach( (relation) => {\n\n      if(relation == type) {\n        relations = this.relations[relation]\n      }\n\n    })\n\n    return relations\n  }\n\n  /**\n   * Create, or save, data for the model\n   *\n   * @private\n   * @param {String} Relationship type\n   * @param {String} id\n   * @param {Object} Reference object\n   */\n  referenceTo(type, id, reference) {\n\n    return new Promise( (resolve, reject) => {\n      var inserts = []\n\n      Object.keys(reference).forEach( async (key) => {\n        var referencePkg = {}\n        referencePkg[`${this.name}Id`] = id // local key\n        referencePkg[key] = reference[key]  // foreign key\n\n        switch(type) {\n          case 'belongsTo':\n            //referencePkg.name = `${key.replace('Id', '')}_has_${this.name}`\n            referencePkg.type = 'belongsTo'\n\n            break\n        }\n\n        referencePkg.node = this.name\n\n        inserts.push(this.insertReference(referencePkg))\n      })\n\n      Promise\n        .all(inserts)\n        .then(resolve)\n        .catch(reject)\n\n    })\n\n  }\n\n  /**\n   * Insert model reference to table 'refs'\n   *\n   * @private\n   * @param {Object} Reference to be saved\n   */\n  insertReference(pkg = {}) {\n    return r.table('refs').insert(pkg)\n  }\n\n  /**\n   * Update a model\n   *\n   * @public\n   * @param {String} id\n   * @param {Object} pkg - Data to be saved\n   * @param {Object} options - Options\n   */\n  update(id, pkg = {}, options = {}) {\n\n    options.returnChanges = options.returnChanges || true\n\n    return new Promise( async (resolve, reject) => {\n\n      //If the model has a schema, validate it\n      var schema = options.schema || this.schema\n\n      if(schema) {\n\n        var validation = this.validate(pkg, schema)\n\n        if(validation.err) {\n          logger.debug('Update validation error')\n          logger.debug(validation.err)\n          return reject(validation.err)\n        }\n\n        delete options.schema\n\n      }\n\n      pkg.__version  = process.env.npm_package_version\n\n      try {\n        var res = await r.table(this.table).get(id).update(pkg, options)\n\n        return resolve(res.changes[0].new_val)\n      }\n      catch(err) {\n        logger.error('Error updating')\n        console.error(err.stack)\n        reject(err)\n      }\n\n    })\n  }\n\n  /**\n   * Validate data\n   *\n   * @public\n   * @param {Object} pkg - What is being validated\n   * @param {Object} schema - The schema to validate against pkg\n   * @param {Object} options - Options\n   */\n  validate(pkg, schema, options = {}) {\n    schema = schema || this.schema\n\n    if(!schema) throw new Error('Validate requires a schema')\n\n    return schema.validate(pkg)\n\n  }\n\n}\n\n/**\n * Mixin EventEmitter.prototype properties onto RootModel.prototype\n *\n * @ignore\n */\nmixin(RootModel, EventEmitter)\n\nexport default RootModel\n"
  },
  {
    "__docId__": 184,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "RootModel",
    "memberof": "src/models/root.js",
    "longname": "src/models/root.js~RootModel",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/models/root.js",
    "importStyle": "RootModel",
    "description": "RootModel Class",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "RootModel"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 185,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/models/root.js~RootModel",
    "longname": "src/models/root.js~RootModel#constructor",
    "access": "public",
    "description": "RootModel constructor",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 186,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "defaults",
    "memberof": "src/models/root.js~RootModel",
    "longname": "src/models/root.js~RootModel#defaults",
    "access": "private",
    "description": "Default parameters",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 187,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "permissions",
    "memberof": "src/models/root.js~RootModel",
    "longname": "src/models/root.js~RootModel#permissions",
    "access": "private",
    "description": "Default read/write permissions for model.",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 188,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "table",
    "memberof": "src/models/root.js~RootModel",
    "longname": "src/models/root.js~RootModel#table",
    "access": null,
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/models/root.js~RootModel",
    "longname": "src/models/root.js~RootModel#create",
    "access": "public",
    "description": "Create, or save, data for the model",
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pkg",
        "description": "Data to be saved"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 190,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "delete",
    "memberof": "src/models/root.js~RootModel",
    "longname": "src/models/root.js~RootModel#delete",
    "access": "public",
    "description": "Delete by id",
    "lineNumber": 163,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 191,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getById",
    "memberof": "src/models/root.js~RootModel",
    "longname": "src/models/root.js~RootModel#getById",
    "access": "public",
    "description": "Get model by id",
    "lineNumber": 173,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 192,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAll",
    "memberof": "src/models/root.js~RootModel",
    "longname": "src/models/root.js~RootModel#getAll",
    "access": "public",
    "description": "Get all from table",
    "lineNumber": 206,
    "todo": [
      "Add logic to limit, paginate, etc."
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 193,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getRelations",
    "memberof": "src/models/root.js~RootModel",
    "longname": "src/models/root.js~RootModel#getRelations",
    "access": "private",
    "description": "Get model relationships",
    "lineNumber": 216,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "Relationship",
        "description": "type"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 194,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "referenceTo",
    "memberof": "src/models/root.js~RootModel",
    "longname": "src/models/root.js~RootModel#referenceTo",
    "access": "private",
    "description": "Create, or save, data for the model",
    "lineNumber": 238,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "Relationship",
        "description": "type"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "Reference",
        "description": "object"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 195,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "insertReference",
    "memberof": "src/models/root.js~RootModel",
    "longname": "src/models/root.js~RootModel#insertReference",
    "access": "private",
    "description": "Insert model reference to table 'refs'",
    "lineNumber": 276,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "Reference",
        "description": "to be saved"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 196,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/models/root.js~RootModel",
    "longname": "src/models/root.js~RootModel#update",
    "access": "public",
    "description": "Update a model",
    "lineNumber": 288,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pkg",
        "description": "Data to be saved"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 197,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "validate",
    "memberof": "src/models/root.js~RootModel",
    "longname": "src/models/root.js~RootModel#validate",
    "access": "public",
    "description": "Validate data",
    "lineNumber": 335,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pkg",
        "description": "What is being validated"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "schema",
        "description": "The schema to validate against pkg"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 198,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/taxonomy/index.js",
    "memberof": null,
    "longname": "src/models/taxonomy/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger} from '../../lib/logger'\nimport Model           from '../root'\nimport r               from '../../lib/database/driver'\nimport taxonomySchema  from './schemas/taxonomy'\n\n/**\n * TaxonomyModel Class\n *\n * @public\n * @class TaxonomyModel\n */\nclass TaxonomyModel extends Model {\n\n  /**\n   * TaxonomyModel constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(Object.assign({}, {\n      name: 'taxonomies',\n\n      permissions: {\n        create:  ['admin'],\n        delete:  ['admin'],\n        read:    ['organization'],\n        replace: ['admin'],\n        update:  ['admin'],\n      },\n      relations: {\n        belongsTo: [\n          {\n            Node: 'Organization',\n            foreignKey: 'id',\n            localField: 'organization',\n            localKey: 'organizationId'\n          },\n          {\n            Node: 'Taxonomy',\n            foreignKey: 'id',\n            localField: 'taxonomy',\n            localKey: 'taxonomyId'\n          },\n        ],\n        hasMany: [\n          {\n            Node: 'Taxonomy',\n            foreignKey: 'id',\n            localField: 'taxonomys',\n            localKey: 'taxonomysId'\n          },\n        ]\n      },\n      schema: taxonomySchema\n    }, options))\n  }\n\n}\n\nexport default TaxonomyModel\n"
  },
  {
    "__docId__": 199,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TaxonomyModel",
    "memberof": "src/models/taxonomy/index.js",
    "longname": "src/models/taxonomy/index.js~TaxonomyModel",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/models/taxonomy/index.js",
    "importStyle": "TaxonomyModel",
    "description": "TaxonomyModel Class",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TaxonomyModel"
      }
    ],
    "interface": false,
    "extends": [
      "src/models/root.js~Model"
    ]
  },
  {
    "__docId__": 200,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/models/taxonomy/index.js~TaxonomyModel",
    "longname": "src/models/taxonomy/index.js~TaxonomyModel#constructor",
    "access": "public",
    "description": "TaxonomyModel constructor",
    "lineNumber": 26,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 201,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/taxonomy/schemas/taxonomy.js",
    "memberof": null,
    "longname": "src/models/taxonomy/schemas/taxonomy.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type} from 'eisley'\n\nexport default new Schema({\n  desc: type('string'),\n  slug: type('string'),\n  title: type('string')\n})\n"
  },
  {
    "__docId__": 202,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/template/index.js",
    "memberof": null,
    "longname": "src/models/template/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger}  from '../../lib/logger'\nimport Model            from '../root'\nimport r                from '../../lib/database/driver'\nimport TemplateRevision from '../template-revision'\nimport templateSchema   from './schemas/template'\n\n\n/**\n * TemplateModel Class\n *\n * @public\n * @class TemplateModel\n */\nclass TemplateModel extends Model {\n\n  /**\n   * TemplateModel constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(Object.assign({}, {\n      name: 'templates',\n\n      permissions: {\n        create:  ['admin'],\n        delete:  ['admin'],\n        read:    ['organization'],\n        replace: ['admin'],\n        update:  ['admin'],\n      },\n      relations: {\n        belongsTo: {\n          Node: 'Organization',\n          foreignKey: 'id',\n          localField: 'organization',\n          localKey: 'organizationId'\n        }\n      },\n      schema: templateSchema\n    }, options))\n  }\n\n  /**\n   * Create, or save, a template\n   *\n   * @public\n   * @param {Object} pkg - The data to save for the template\n   */\n  create(pkg = {}) {\n\n    /*\n    NOTE:\n    When a template is created with fields, we need to take those fields and place them on a revision\n    */\n    var fields = []\n    if(pkg.fields) {\n      fields = pkg.fields.slice(0)\n      delete pkg.fields\n    }\n\n    return new Promise( async (resolve, reject) => {\n      // Create template\n      var doc = await Model.prototype.create.call(this, pkg)\n\n      // Create revision\n      var revision = await new TemplateRevision().create({\n        templateId: doc.id,\n        fields\n      })\n\n      // Associate template with revision\n      var update = await this.update(doc.id, {\n        activeRevisionId: revision.id,\n        revisionIds: [revision.id],\n        title: doc.title // To satisfy the schema\n      })\n\n      resolve(update)\n    })\n  }\n\n  /**\n   * Get all templates\n   *\n   * @public\n   */\n  getAll() {\n    return new Promise( async (resolve, reject) => {\n\n      var docs = await Model.prototype.getAll.call(this),\n          docsResolved = []\n\n      docs.forEach( (doc) => {\n        docsResolved.push(this.getActiveRevision(doc).then( (revision) => {\n          return Object.assign(doc, {\n            fields: revision.fields\n          })\n        }))\n      })\n\n      Promise.all(docsResolved)\n        .then( (docs) => {\n          resolve(docs)\n        })\n\n    })\n  }\n\n  /**\n   * Get template by ID\n   *\n   * @public\n   * @param {String} id\n   */\n  getById(id) {\n\n    return new Promise( async (resolve, reject) => {\n\n      var doc = await Model.prototype.getById.call(this, id)\n\n      if(!doc.id) {\n        logger.error('Could not get template', id)\n        return reject(doc)\n      }\n\n      var revision = await this.getActiveRevision(doc)\n\n      Object.assign(doc, {\n        fields: revision.fields,\n        title: doc.title\n      })\n\n      return resolve(doc)\n\n    })\n\n  }\n\n  /**\n   * Get template's active revision\n   *\n   * @public\n   * @param {Object} doc - The item to get a revision for\n   */\n  getActiveRevision(doc) {\n\n    return new Promise( async (resolve, reject) => {\n\n      if(!doc.activeRevisionId) return resolve({\n        fields: [],\n        title: doc.title\n      })\n\n      var revision = await new TemplateRevision().getById(doc.activeRevisionId)\n\n\n      if(!revision.id) {\n        logger.error('Could not get template revision for', doc.id)\n        return reject(revision)\n      }\n\n      resolve(revision)\n\n    })\n\n  }\n\n}\n\nexport default TemplateModel\n"
  },
  {
    "__docId__": 203,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TemplateModel",
    "memberof": "src/models/template/index.js",
    "longname": "src/models/template/index.js~TemplateModel",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/models/template/index.js",
    "importStyle": "TemplateModel",
    "description": "TemplateModel Class",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TemplateModel"
      }
    ],
    "interface": false,
    "extends": [
      "src/models/root.js~Model"
    ]
  },
  {
    "__docId__": 204,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/models/template/index.js~TemplateModel",
    "longname": "src/models/template/index.js~TemplateModel#constructor",
    "access": "public",
    "description": "TemplateModel constructor",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 205,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/models/template/index.js~TemplateModel",
    "longname": "src/models/template/index.js~TemplateModel#create",
    "access": "public",
    "description": "Create, or save, a template",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pkg",
        "description": "The data to save for the template"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 206,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAll",
    "memberof": "src/models/template/index.js~TemplateModel",
    "longname": "src/models/template/index.js~TemplateModel#getAll",
    "access": "public",
    "description": "Get all templates",
    "lineNumber": 95,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 207,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getById",
    "memberof": "src/models/template/index.js~TemplateModel",
    "longname": "src/models/template/index.js~TemplateModel#getById",
    "access": "public",
    "description": "Get template by ID",
    "lineNumber": 123,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 208,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getActiveRevision",
    "memberof": "src/models/template/index.js~TemplateModel",
    "longname": "src/models/template/index.js~TemplateModel#getActiveRevision",
    "access": "public",
    "description": "Get template's active revision",
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "doc",
        "description": "The item to get a revision for"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 209,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/template/schemas/template.js",
    "memberof": null,
    "longname": "src/models/template/schemas/template.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type} from 'eisley'\n\nexport default new Schema({\n  title : type('string')\n})\n"
  },
  {
    "__docId__": 210,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/template-revision/index.js",
    "memberof": null,
    "longname": "src/models/template-revision/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger} from '../../lib/logger'\nimport DigitalAsset    from '../digital-asset'\nimport Model           from '../root'\nimport r               from '../../lib/database/driver'\nimport RevisionModel   from '../revision'\nimport templaterevisionSchema      from './schemas/template-revision'\n\n\n/**\n * TemplateRevisionModel Class\n *\n * @public\n * @class TemplateRevisionModel\n */\nclass TemplateRevisionModel extends RevisionModel {\n\n  /**\n   * TemplateRevisionModel constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(Object.assign({}, {\n      name: 'template-revisions',\n\n      permissions: {\n        create:  ['user'],\n        delete:  ['admin'],\n        read:    ['organization'],\n        replace: ['admin'],\n        update:  ['user'],\n      },\n      relations: {\n        belongsTo: [\n          {\n            Node: 'Template',\n            foreignKey: 'id',\n            localField: 'template',\n            localKey: 'templateId'\n          }\n        ]\n      },\n      schema: templaterevisionSchema\n    }, options))\n  }\n\n}\n\nexport default TemplateRevisionModel\n"
  },
  {
    "__docId__": 211,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TemplateRevisionModel",
    "memberof": "src/models/template-revision/index.js",
    "longname": "src/models/template-revision/index.js~TemplateRevisionModel",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/models/template-revision/index.js",
    "importStyle": "TemplateRevisionModel",
    "description": "TemplateRevisionModel Class",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TemplateRevisionModel"
      }
    ],
    "interface": false,
    "extends": [
      "src/models/revision.js~RevisionModel"
    ]
  },
  {
    "__docId__": 212,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/models/template-revision/index.js~TemplateRevisionModel",
    "longname": "src/models/template-revision/index.js~TemplateRevisionModel#constructor",
    "access": "public",
    "description": "TemplateRevisionModel constructor",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 213,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/template-revision/schemas/template-revision.js",
    "memberof": null,
    "longname": "src/models/template-revision/schemas/template-revision.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type} from 'eisley'\n\nexport default new Schema({\n  fields : type('array')\n})\n"
  },
  {
    "__docId__": 214,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/user/index.js",
    "memberof": null,
    "longname": "src/models/user/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger} from '../../lib/logger'\nimport createSchema    from './schemas/create'\nimport Model           from '../root'\nimport PasswordService from '../../services/password'\nimport r               from '../../lib/database/driver'\nimport updateSchema    from './schemas/update'\n\n/**\n * UserModel Class\n *\n * @public\n * @class UserModel\n */\nclass UserModel extends Model {\n\n  /**\n   * UserModel constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    super(Object.assign({}, {\n      name: 'users',\n\n      mapping: {\n        fields: {\n\n        }\n      },\n      permissions: {\n        create:  ['admin'],\n        delete:  ['admin'],\n        read:    ['organization'],\n        replace: ['admin'],\n        update:  ['self', 'admin'],\n      },\n      relations: {\n        belongsTo: [\n          {\n            Node: 'Organization',\n            foreignKey: 'id',\n            localField: 'organization',\n            localKey: 'organizationId'\n          }\n        ]\n      }\n    }, options))\n  }\n\n  /**\n   * Create, or save, user data for the model\n   *\n   * @public\n   * @param {Object} pkg - Data to be saved\n   * @param {Object} options - Options\n   */\n  create(pkg = {}, options = {}) {\n\n    return new Promise( async (resolve, reject) => {\n\n      pkg.hash = await new PasswordService().issue(pkg.password)\n      delete pkg.password\n\n      options.schema = createSchema\n\n      try {\n        var doc = await Model.prototype.create.call(this, pkg, options)\n\n        resolve(doc)\n      }\n      catch(e) {\n        reject(e)\n      }\n\n    })\n\n  }\n\n  /**\n   * Get user by email\n   *\n   * @public\n   * @param {String} email\n   */\n  getByEmail(email) {\n    return r.table(this.table || 'users').filter({email}).limit(1)\n  }\n\n  /**\n   * Get user by username\n   *\n   * @public\n   * @param {String} username\n   */\n  getByUsername(username) {\n    return new Promise( async (resolve, reject) => {\n      var user = await r.table(this.table || 'users').filter({username}).limit(1)\n\n      if(!user) return reject(user)\n\n      resolve(user[0])\n    })\n  }\n\n  /**\n   * Update user\n   *\n   * @public\n   * @param {String} id\n   * @param {Object} pkg - Data to update user\n   * @param {Object} options - Options\n   */\n  update(id, pkg = {}, options = {}) {\n\n    if(pkg.password) {\n      logger.warn('User.update does not support property password; deleted.')\n      delete pkg.password\n    }\n\n    options.schema = updateSchema\n\n    return Model.prototype.update.call(this, id, pkg, options)\n\n  }\n\n}\n\nexport default UserModel\n"
  },
  {
    "__docId__": 215,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "UserModel",
    "memberof": "src/models/user/index.js",
    "longname": "src/models/user/index.js~UserModel",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/models/user/index.js",
    "importStyle": "UserModel",
    "description": "UserModel Class",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "UserModel"
      }
    ],
    "interface": false,
    "extends": [
      "src/models/root.js~Model"
    ]
  },
  {
    "__docId__": 216,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/models/user/index.js~UserModel",
    "longname": "src/models/user/index.js~UserModel#constructor",
    "access": "public",
    "description": "UserModel constructor",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 217,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/models/user/index.js~UserModel",
    "longname": "src/models/user/index.js~UserModel#create",
    "access": "public",
    "description": "Create, or save, user data for the model",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pkg",
        "description": "Data to be saved"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 218,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getByEmail",
    "memberof": "src/models/user/index.js~UserModel",
    "longname": "src/models/user/index.js~UserModel#getByEmail",
    "access": "public",
    "description": "Get user by email",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 219,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getByUsername",
    "memberof": "src/models/user/index.js~UserModel",
    "longname": "src/models/user/index.js~UserModel#getByUsername",
    "access": "public",
    "description": "Get user by username",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "username",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 220,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/models/user/index.js~UserModel",
    "longname": "src/models/user/index.js~UserModel#update",
    "access": "public",
    "description": "Update user",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "pkg",
        "description": "Data to update user"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 221,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/user/schemas/create.js",
    "memberof": null,
    "longname": "src/models/user/schemas/create.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type} from 'eisley'\n\nexport default new Schema({\n  email    : type('string'),\n  username : type('string'),\n  password : type('password', {hash: true})\n})\n"
  },
  {
    "__docId__": 222,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/models/user/schemas/update.js",
    "memberof": null,
    "longname": "src/models/user/schemas/update.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type} from 'eisley'\n\nexport default new Schema({\n  email     : type('string'),\n  firstName : type('string'),\n  lastName  : type('string'),\n  username  : type('string'),\n  password : type('password', {hash: true})\n}, {strict: false})\n"
  },
  {
    "__docId__": 223,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/server/dispatcher.js",
    "memberof": null,
    "longname": "src/server/dispatcher.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger} from '../lib/logger'\n\n/**\n * Dispatcher Class\n *\n * @public\n * @class Dispatcher\n */\nclass Dispatcher {\n\n  /**\n   * Server constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    this.options = options\n  }\n\n  /**\n   * Dispatch a route to controller action\n   *\n   * @public\n   * @param {Object} controller - Controller\n   * @param {String} actionName - The name of the controller method, or action, to call\n   */\n  dispatch(controller, actionName) {\n\n    return async (req, res, next) => {\n      logger.debug(`Dispatching controller: ${controller.name} & action: ${actionName}`)\n      var action = controller[actionName]\n\n      if(req.files) {\n        logger.debug('File upload detected:', req.files)\n\n        req.files = req.files.map( (file) => {\n          file.diskFileName     = file.filename\n          file.originalFileName = file.originalname.replace(/ /g, '_')\n          file.storageAdaptor   = storageAdaptors.disk.name\n\n          return file\n        })\n      }\n\n      var pkg    = {},\n          status = 200\n\n      try {\n        var result = await action.call(controller, req, res)\n\n        if(req.method == 'PUT') status = 201\n\n        // return collection name\n        if(actionName == 'getAll') {\n          pkg[controller.name] = result\n        }\n        // return item\n        else {\n          pkg = result\n        }\n        logger.debug(`${actionName}`, pkg)\n        res.status(status).json({\n          pkg,\n          status\n        })\n      }\n      catch(err) {\n        logger.error(`Action ${actionName} failed`)\n        if(err.stack) {\n          console.error(err.message)\n          console.error(err.stack)\n        }\n        else {\n          console.error(err)\n        }\n\n        status = 403\n\n        res.status(status).json({\n          status\n        })\n      }\n\n    }\n\n  }\n\n}\n\nexport default Dispatcher\n"
  },
  {
    "__docId__": 224,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Dispatcher",
    "memberof": "src/server/dispatcher.js",
    "longname": "src/server/dispatcher.js~Dispatcher",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/server/dispatcher.js",
    "importStyle": "Dispatcher",
    "description": "Dispatcher Class",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Dispatcher"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 225,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/server/dispatcher.js~Dispatcher",
    "longname": "src/server/dispatcher.js~Dispatcher#constructor",
    "access": "public",
    "description": "Server constructor",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 226,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "options",
    "memberof": "src/server/dispatcher.js~Dispatcher",
    "longname": "src/server/dispatcher.js~Dispatcher#options",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 227,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dispatch",
    "memberof": "src/server/dispatcher.js~Dispatcher",
    "longname": "src/server/dispatcher.js~Dispatcher#dispatch",
    "access": "public",
    "description": "Dispatch a route to controller action",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "controller",
        "description": "Controller"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "actionName",
        "description": "The name of the controller method, or action, to call"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 228,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/server/index.js",
    "memberof": null,
    "longname": "src/server/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport bodyParser      from 'body-parser'\nimport {chalk, logger} from '../lib/logger'\nimport Dispatcher      from './dispatcher'\nimport express         from 'express'\nimport path            from 'path'\nimport Router          from './router'\nimport serveStatic     from 'serve-static'\n\nfunction removePoweredBy(req, res, next) {\n  res.removeHeader('X-Powered-By')\n  next()\n}\n\n/**\n * Server Class\n *\n * @public\n * @class Server\n */\nclass Server {\n\n  /**\n   * Server constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n\n    this.server = express()\n\n    this.server.use(serveStatic(path.join(__dirname, '../public')))\n    this.server.use(bodyParser.urlencoded({extended: true}))\n    this.server.use(bodyParser.json({strict: false}))\n    this.server.use(removePoweredBy)\n    if(process.env.NODE_ENV != 'test') {\n      this.server.use(this.logRequestInfo)\n    }\n\n    this.router = options.router || new Router({\n      dispatcher: options.dispatcher || new Dispatcher(),\n      server: this.server\n    })\n\n    //console.log('DEBUG: routes', this.debugRoutes())\n\n  }\n\n  /**\n   * List of routes registered with Express including middleware routes\n   *\n   * @private\n   */\n  debugRoutes() {\n    var route, routes = []\n\n    this.server._router.stack.forEach(function(middleware) {\n      if(middleware.route) {\n        routes.push(middleware.route)\n      } else if(middleware.name === 'router') { // router middleware\n        middleware.handle.stack.forEach(function(handler) {\n          route = handler.route\n          route && routes.push(route)\n        })\n      }\n    })\n\n    return routes\n  }\n\n  /**\n   * Log each HTTP request's method and url\n   *\n   * @private\n   * @param {Object} req - Express req\n   * @param {Object} res - Express res\n   * @param {Function} next - Express next\n   */\n  logRequestInfo(req, res, next) {\n\n    logger.info(req.method, req.originalUrl)\n    next()\n\n  }\n\n  /**\n   * Start the HTTP Server\n   *\n   * @public\n   */\n  start() {\n\n    this.server = this.server.listen(process.env.EXPRESS_PORT)\n\n  }\n\n  /**\n   * Stop the HTTP Server\n   *\n   * @public\n   */\n  stop() {\n\n    var r = require('../lib/database/driver')\n    r.getPoolMaster().drain()\n\n    this.server.close()\n\n  }\n\n  /**\n   * Add Express middleware to the Express server object\n   *\n   * @public\n   */\n  use() {\n\n    this.server.use.apply(this.server, arguments)\n\n  }\n\n}\n\nmodule.exports = Server\n"
  },
  {
    "__docId__": 229,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "removePoweredBy",
    "memberof": "src/server/index.js",
    "longname": "src/server/index.js~removePoweredBy",
    "access": null,
    "export": false,
    "importPath": "structure-core/src/server/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "req",
        "types": [
          "*"
        ]
      },
      {
        "name": "res",
        "types": [
          "*"
        ]
      },
      {
        "name": "next",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 230,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Server",
    "memberof": "src/server/index.js",
    "longname": "src/server/index.js~Server",
    "access": "public",
    "export": false,
    "importPath": "structure-core/src/server/index.js",
    "importStyle": null,
    "description": "Server Class",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Server"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 231,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/server/index.js~Server",
    "longname": "src/server/index.js~Server#constructor",
    "access": "public",
    "description": "Server constructor",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 232,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "server",
    "memberof": "src/server/index.js~Server",
    "longname": "src/server/index.js~Server#server",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 233,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "router",
    "memberof": "src/server/index.js~Server",
    "longname": "src/server/index.js~Server#router",
    "access": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 234,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "debugRoutes",
    "memberof": "src/server/index.js~Server",
    "longname": "src/server/index.js~Server#debugRoutes",
    "access": "private",
    "description": "List of routes registered with Express including middleware routes",
    "lineNumber": 60,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 235,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "logRequestInfo",
    "memberof": "src/server/index.js~Server",
    "longname": "src/server/index.js~Server#logRequestInfo",
    "access": "private",
    "description": "Log each HTTP request's method and url",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "req",
        "description": "Express req"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "Express res"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "next",
        "description": "Express next"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 236,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "start",
    "memberof": "src/server/index.js~Server",
    "longname": "src/server/index.js~Server#start",
    "access": "public",
    "description": "Start the HTTP Server",
    "lineNumber": 97,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 237,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "server",
    "memberof": "src/server/index.js~Server",
    "longname": "src/server/index.js~Server#server",
    "access": null,
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 238,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stop",
    "memberof": "src/server/index.js~Server",
    "longname": "src/server/index.js~Server#stop",
    "access": "public",
    "description": "Stop the HTTP Server",
    "lineNumber": 108,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 239,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "use",
    "memberof": "src/server/index.js~Server",
    "longname": "src/server/index.js~Server#use",
    "access": "public",
    "description": "Add Express middleware to the Express server object",
    "lineNumber": 122,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 240,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/server/router.js",
    "memberof": null,
    "longname": "src/server/router.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger}   from '../lib/logger'\nimport cors              from 'cors'\nimport multer            from 'multer'\nimport storageAdaptors   from './storageAdaptors'\n\nimport App               from '../controllers/applications'\nimport Auth              from '../controllers/auth'\nimport Bucket            from '../controllers/buckets'\nimport DigitalAsset      from '../controllers/digital-assets'\nimport Document          from '../controllers/documents'\nimport DocumentRevision  from '../controllers/document-revisions'\nimport Field             from '../controllers/fields'\nimport Org               from '../controllers/organizations'\nimport Registry          from '../controllers/registry'\nimport Taxonomy          from '../controllers/taxonomies'\nimport Template          from '../controllers/templates'\nimport TemplateRevision  from '../controllers/template-revisions'\nimport User              from '../controllers/users'\n\nconst Controllers = [App, Auth, Bucket, DigitalAsset, Document, DocumentRevision, Field, Org, Registry, Taxonomy, Template, TemplateRevision, User]\n\nvar upload = multer({storage: storageAdaptors.disk.adaptor}).any()\n\n/**\n * Router Class\n *\n * @public\n * @class Router\n */\nclass Router {\n\n  /**\n   * Router constructor\n   *\n   * @public\n   * @constructor\n   * @param {Object} options - Options\n   */\n  constructor(options = {}) {\n    this.options     = options\n\n    this.Controllers = this.options.Controllers || Controllers\n    this.dispatcher  = options.dispatcher\n    this.routes      = options.routes\n    this.server      = options.server\n    //this.structRoute()\n\n    this.generateRoutes()\n    if(typeof this.routes == 'function') this.loadRoutes()\n\n  }\n\n  /**\n   * Auto generate routes for controller actions\n   *\n   * @private\n   */\n  generateRoutes() {\n    var server  = this.server,\n        version = `v${process.env.API_VERSION}`\n\n    /*\n    TODO:\n    Make this a simple on/off flag\n    */\n    server.use(cors())\n\n    /*\n    TODO: build middleware to handle the extra routes needed per respective node(s)\n    */\n    var digitalAsset = new DigitalAsset()\n\n    server.get(`/api/${version}/digital-assets/embeds/:type/:url(*)`,  this.dispatcher.dispatch(new DigitalAsset(), 'fetchEmbed'))\n    server.get(`/api/${version}/digital-assets/:id/view`,              digitalAsset.view.bind(digitalAsset))\n    server.get(`/api/${version}/registry/settings/:name`,              this.dispatcher.dispatch(new Registry(), 'getSettingsByName'))\n\n    server.post(`/api/${version}/auth/login`,                          this.dispatcher.dispatch(new Auth(), 'login'))\n    server.post(`/api/${version}/auth/user/facebook`,                  this.dispatcher.dispatch(new Auth(), 'authByFacebook'))\n\n    server.put(`/api/${version}/digital-assets`,                       [upload, this.dispatcher.dispatch(new DigitalAsset(), 'create')])\n\n    this.Controllers.forEach( (Controller) => {\n      var controller = new Controller(),\n          routeName  = controller.name\n\n      // If the controller doesn't have a route name, don't make any routes for it\n      if(!controller.name) return\n\n      server.get(`/api/${version}/${routeName}/:id`,                    this.dispatcher.dispatch(controller, 'getById'))\n      server.get(`/api/${version}/${routeName}`,                        this.dispatcher.dispatch(controller, 'getAll'))\n\n      server.post(`/api/${version}/${routeName}/:id`,                   this.dispatcher.dispatch(controller, 'update'))\n\n      server.put(`/api/${version}/${routeName}`,                        this.dispatcher.dispatch(controller, 'create'))\n\n      server.delete(`/api/${version}/${routeName}/:id`,                 this.dispatcher.dispatch(controller, 'delete'))\n    })\n\n  }\n\n  /**\n   * Load custom defined routes\n   *\n   * @private\n   */\n  loadRoutes() {\n    this.routes.call(this, this.server)\n  }\n\n  /**\n   * TBD...\n   *\n   * @private\n   */\n  structRoute() {\n    var server = this.server\n\n    var mapper = {\n      buckets: {\n        Node: 'bucket'\n      }\n    }\n\n    server.post(`/api/struct`, (req, res, next) => {\n\n      /* Example Query:\n      buckets: {\n        fields: ['data', 'desc', 'id', 'sid', 'title'],\n        id: 12345\n      }\n      */\n      var query = req.body.query\n\n      var fetch = {}\n\n      Object.keys(query).forEach( async (k, i) => {\n        var o = query[k]\n\n        var node = require(`../../nodes/${mapper[k].Node}`).default\n\n        /*\n        TODO: pluck the values instead of returning all the values\n        */\n        if(o.id) {\n          fetch[k] = await node.getById(o.id)\n        }\n\n        else {\n          fetch[k] = await node.getAll()\n        }\n\n      })\n\n      res.status(200).json({\n        pkg: fetch,\n        status: 200\n      })\n    })\n  }\n\n}\n\nexport default Router\n"
  },
  {
    "__docId__": 241,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Controllers",
    "memberof": "src/server/router.js",
    "longname": "src/server/router.js~Controllers",
    "access": null,
    "export": false,
    "importPath": "structure-core/src/server/router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 242,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "upload",
    "memberof": "src/server/router.js",
    "longname": "src/server/router.js~upload",
    "access": null,
    "export": false,
    "importPath": "structure-core/src/server/router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 243,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Router",
    "memberof": "src/server/router.js",
    "longname": "src/server/router.js~Router",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/server/router.js",
    "importStyle": "Router",
    "description": "Router Class",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Router"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 244,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/server/router.js~Router",
    "longname": "src/server/router.js~Router#constructor",
    "access": "public",
    "description": "Router constructor",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 245,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "options",
    "memberof": "src/server/router.js~Router",
    "longname": "src/server/router.js~Router#options",
    "access": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "Controllers",
    "memberof": "src/server/router.js~Router",
    "longname": "src/server/router.js~Router#Controllers",
    "access": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 247,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "dispatcher",
    "memberof": "src/server/router.js~Router",
    "longname": "src/server/router.js~Router#dispatcher",
    "access": null,
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 248,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "routes",
    "memberof": "src/server/router.js~Router",
    "longname": "src/server/router.js~Router#routes",
    "access": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 249,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "server",
    "memberof": "src/server/router.js~Router",
    "longname": "src/server/router.js~Router#server",
    "access": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 250,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "generateRoutes",
    "memberof": "src/server/router.js~Router",
    "longname": "src/server/router.js~Router#generateRoutes",
    "access": "private",
    "description": "Auto generate routes for controller actions",
    "lineNumber": 63,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 251,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "loadRoutes",
    "memberof": "src/server/router.js~Router",
    "longname": "src/server/router.js~Router#loadRoutes",
    "access": "private",
    "description": "Load custom defined routes",
    "lineNumber": 111,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 252,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "structRoute",
    "memberof": "src/server/router.js~Router",
    "longname": "src/server/router.js~Router#structRoute",
    "access": "private",
    "description": "TBD...",
    "lineNumber": 120,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 253,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/server/storageAdaptors.js",
    "memberof": null,
    "longname": "src/server/storageAdaptors.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport Disk from 'structure-storage-disk-adaptor'\n\nexport default {\n  disk: {\n    adaptor: new Disk.Adaptor(),\n    name: 'disk'\n  }\n}\n"
  },
  {
    "__docId__": 254,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/services/app.js",
    "memberof": null,
    "longname": "src/services/app.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport AppModel        from '../models/app'\nimport {chalk, logger} from '../lib/logger'\nimport ShortIdService  from '../services/short-id'\n\n/**\n * AppService Class\n *\n * @public\n * @class AppService\n */\nclass AppService {\n\n  create(o = {}, cb) {\n    var _this = this\n\n    var pkg = Object.assign({}, o)\n\n    // validation\n\n    var shortidService  = new ShortIdService(),\n        appModel   = new AppModel()\n\n    appModel.create(pkg, function(err, res) {\n\n      if(err) {\n        logger.error(err)\n\n        return cb({\n          message: 'Could not create app',\n          resource: 'AppService'\n        })\n      }\n\n      var sid = shortidService.issue(res.id)\n\n      _this.update(res.id, {sid}, function(err2, res2) {\n\n        if(err) {\n          logger.error(err)\n\n          return cb({\n            message: 'Could not create short id for app',\n            resource: 'AppService'\n          })\n        }\n\n        return cb(null, res2)\n\n      })\n\n    })\n\n  }\n\n  get() {\n    var appModel = new AppModel()\n\n    appModel.get.apply(appModel, arguments)\n  }\n\n  getByShortId() {\n    var appModel = new AppModel()\n\n    appModel.getByShortId.apply(appModel, arguments)\n  }\n\n  update() {\n    var appModel = new AppModel()\n\n    appModel.update.apply(appModel, arguments)\n  }\n\n  updateByShortId() {\n    var appModel = new AppModel()\n\n    appModel.updateByShortId.apply(appModel, arguments)\n  }\n\n}\n\nexport default AppService\n"
  },
  {
    "__docId__": 255,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AppService",
    "memberof": "src/services/app.js",
    "longname": "src/services/app.js~AppService",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/services/app.js",
    "importStyle": "AppService",
    "description": "AppService Class",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "AppService"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 256,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/services/app.js~AppService",
    "longname": "src/services/app.js~AppService#create",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "o",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "cb",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 257,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "get",
    "memberof": "src/services/app.js~AppService",
    "longname": "src/services/app.js~AppService#get",
    "access": null,
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 258,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getByShortId",
    "memberof": "src/services/app.js~AppService",
    "longname": "src/services/app.js~AppService#getByShortId",
    "access": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 259,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/services/app.js~AppService",
    "longname": "src/services/app.js~AppService#update",
    "access": null,
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 260,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateByShortId",
    "memberof": "src/services/app.js~AppService",
    "longname": "src/services/app.js~AppService#updateByShortId",
    "access": null,
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 261,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/services/auth.js",
    "memberof": null,
    "longname": "src/services/auth.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger} from '../lib/logger'\nimport PasswordService from './password'\nimport TokenService    from './token'\nimport UserModel       from '../models/user'\n\n/**\n * AuthService Class\n *\n * @public\n * @class AuthService\n */\nclass AuthService {\n\n  authenticateById(id, password, cb) {\n\n    var passwordService = new PasswordService(),\n        userModel       = new UserModel()\n\n    userModel.get(id, function AuthService_authenticateGetCallback(err, user) {\n\n      if(err) {\n        return cb({\n          message: 'Could not get user: ' + id,\n          resource: 'AuthService'\n        })\n      }\n\n      passwordService.verify(password, user.hash, function(err, verified) {\n\n        if(err) {\n          return cb({\n            message: 'Could not verify password for user: ' + id,\n            resource: 'AuthService'\n          })\n        }\n\n        cb(null, user)\n\n      })\n\n    })\n\n  }\n\n  authenticateByUsername(username, password, cb) {\n\n    var passwordService = new PasswordService(),\n        userModel       = new UserModel()\n\n    userModel.getByUsername(username, function AuthService_authenticateGetCallback(err, user) {\n\n      if(err) {\n        logger.error('Could not get user', username)\n        return cb({\n          message: 'Could not get user: ' + username,\n          resource: 'AuthService'\n        })\n      }\n\n      passwordService.verify(password, user.hash, function(err, verified) {\n\n        if(err) {\n          logger.error('Could not validate password for user', username)\n          return cb({\n            message: 'Could not verify password for user: ' + username,\n            resource: 'AuthService'\n          })\n        }\n        logger.debug('auth by user/pass its ok', user)\n        cb(null, user)\n\n      })\n\n    })\n\n  }\n\n  authorize(id, token, cb) {\n\n    var tokenService = new TokenService()\n\n    tokenService.verify(token, function(err, verified) {\n\n      if(err) {\n        return cb({\n          message: 'Could not authorize user: ' + id,\n          resource: 'AuthService'\n        })\n      }\n\n      cb(null, token)\n\n    })\n\n  }\n\n  loginById(id, pkg = {}, cb) {\n    var _this = this\n\n    if(arguments.length == 2) {\n      pkg = arguments[0]\n      id  = pkg.id\n      cb  = arguments[1]\n    }\n\n    var tokenService = new TokenService()\n\n    async.parallel([\n      this.authenticateById.bind(this, id, pkg.password),\n      tokenService.issue.bind(tokenService, pkg.hash)\n    ], function AuthService_loginByIdCallBack(err, res) {\n      logger.debug('hit parallel call')\n      if(err) {\n        logger.error('Could not log in user', id)\n        logger.error(err)\n\n        return cb({\n          message: 'Could not log in user',\n          resource: 'AuthService'\n        })\n      }\n\n      var user = res[0]\n      user.token = res[1]\n\n      cb(null, user)\n\n    })\n\n  }\n\n  loginByUsername(username, pkg = {}, cb) {\n    var _this = this\n\n    if(arguments.length == 2) {\n      pkg       = arguments[0]\n      username  = pkg.username\n      cb        = arguments[1]\n    }\n\n    var tokenService = new TokenService()\n\n    async.parallel([\n      this.authenticateByUsername.bind(this, username, pkg.password),\n      //tokenService.issue.bind(tokenService, pkg.hash)\n    ], function AuthService_loginByUsernameCallBack(err, res) {\n\n      if(err) {\n        logger.error('Could not log in user', username)\n        logger.error(err)\n\n        return cb({\n          message: 'Could not log in user',\n          resource: 'AuthService'\n        })\n      }\n\n      var user = res[0]\n      //user.token = res[1]\n\n      cb(null, user)\n\n    })\n\n  }\n\n  logout() {\n\n  }\n\n  unauthenticate() {\n\n  }\n\n}\n\nexport default AuthService\n"
  },
  {
    "__docId__": 262,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AuthService",
    "memberof": "src/services/auth.js",
    "longname": "src/services/auth.js~AuthService",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/services/auth.js",
    "importStyle": "AuthService",
    "description": "AuthService Class",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "AuthService"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 263,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "authenticateById",
    "memberof": "src/services/auth.js~AuthService",
    "longname": "src/services/auth.js~AuthService#authenticateById",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "password",
        "types": [
          "*"
        ]
      },
      {
        "name": "cb",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 264,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "authenticateByUsername",
    "memberof": "src/services/auth.js~AuthService",
    "longname": "src/services/auth.js~AuthService#authenticateByUsername",
    "access": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "username",
        "types": [
          "*"
        ]
      },
      {
        "name": "password",
        "types": [
          "*"
        ]
      },
      {
        "name": "cb",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 265,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "authorize",
    "memberof": "src/services/auth.js~AuthService",
    "longname": "src/services/auth.js~AuthService#authorize",
    "access": null,
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "token",
        "types": [
          "*"
        ]
      },
      {
        "name": "cb",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 266,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "loginById",
    "memberof": "src/services/auth.js~AuthService",
    "longname": "src/services/auth.js~AuthService#loginById",
    "access": null,
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "pkg",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "cb",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 267,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "loginByUsername",
    "memberof": "src/services/auth.js~AuthService",
    "longname": "src/services/auth.js~AuthService#loginByUsername",
    "access": null,
    "description": null,
    "lineNumber": 137,
    "undocument": true,
    "params": [
      {
        "name": "username",
        "types": [
          "*"
        ]
      },
      {
        "name": "pkg",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "cb",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 268,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "logout",
    "memberof": "src/services/auth.js~AuthService",
    "longname": "src/services/auth.js~AuthService#logout",
    "access": null,
    "description": null,
    "lineNumber": 172,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 269,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "unauthenticate",
    "memberof": "src/services/auth.js~AuthService",
    "longname": "src/services/auth.js~AuthService#unauthenticate",
    "access": null,
    "description": null,
    "lineNumber": 176,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 270,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/services/organization.js",
    "memberof": null,
    "longname": "src/services/organization.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger} from '../lib/logger'\nimport ShortIdService  from '../services/short-id'\nimport OrganizationModel   from '../models/organization'\n\n/**\n * OrganizationService Class\n *\n * @public\n * @class OrganizationService\n */\nclass OrganizationService {\n\n  create(o = {}, cb) {\n    var _this = this\n\n    var pkg = Object.assign({}, o)\n\n    // validation\n\n    var shortidService  = new ShortIdService(),\n        organizationModel   = new OrganizationModel()\n\n    organizationModel.create(pkg, function(err, res) {\n\n      if(err) {\n        logger.error(err)\n\n        return cb({\n          message: 'Could not create organization',\n          resource: 'OrganizationService'\n        })\n      }\n\n      var sid = shortidService.issue(res.id)\n\n      _this.update(res.id, {sid}, function(err2, res2) {\n\n        if(err) {\n          logger.error(err)\n\n          return cb({\n            message: 'Could not create short id for organization',\n            resource: 'OrganizationService'\n          })\n        }\n\n        return cb(null, res2)\n\n      })\n\n    })\n\n  }\n\n  get() {\n    var organizationModel = new OrganizationModel()\n\n    organizationModel.get.apply(organizationModel, arguments)\n  }\n\n  getByShortId() {\n    var organizationModel = new OrganizationModel()\n\n    organizationModel.getByShortId.apply(organizationModel, arguments)\n  }\n\n  list() {\n\n    var organizationModel = new OrganizationModel()\n\n    organizationModel.list.apply(organizationModel, arguments)\n\n  }\n\n  update() {\n    var organizationModel = new OrganizationModel()\n\n    organizationModel.update.apply(organizationModel, arguments)\n  }\n\n  updateByShortId() {\n    var organizationModel = new OrganizationModel()\n\n    organizationModel.updateByShortId.apply(organizationModel, arguments)\n  }\n\n}\n\nexport default OrganizationService\n"
  },
  {
    "__docId__": 271,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "OrganizationService",
    "memberof": "src/services/organization.js",
    "longname": "src/services/organization.js~OrganizationService",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/services/organization.js",
    "importStyle": "OrganizationService",
    "description": "OrganizationService Class",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "OrganizationService"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 272,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/services/organization.js~OrganizationService",
    "longname": "src/services/organization.js~OrganizationService#create",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "o",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "cb",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 273,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "get",
    "memberof": "src/services/organization.js~OrganizationService",
    "longname": "src/services/organization.js~OrganizationService#get",
    "access": null,
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 274,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getByShortId",
    "memberof": "src/services/organization.js~OrganizationService",
    "longname": "src/services/organization.js~OrganizationService#getByShortId",
    "access": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 275,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "list",
    "memberof": "src/services/organization.js~OrganizationService",
    "longname": "src/services/organization.js~OrganizationService#list",
    "access": null,
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 276,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/services/organization.js~OrganizationService",
    "longname": "src/services/organization.js~OrganizationService#update",
    "access": null,
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 277,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateByShortId",
    "memberof": "src/services/organization.js~OrganizationService",
    "longname": "src/services/organization.js~OrganizationService#updateByShortId",
    "access": null,
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 278,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/services/package.js",
    "memberof": null,
    "longname": "src/services/package.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * PackageService Class\n *\n * @public\n * @class PackageService\n */\nclass PackageService {\n\n  constructor() {\n\n  }\n\n  error(o = {}, options) {\n    var status = 400\n\n    if(typeof options == 'number') status = options\n    if(typeof options == 'object') {\n      status = options.status || status\n    }\n\n    return {\n      err: {},\n      status\n    }\n\n  }\n\n  success(o = {}, options) {\n    var status = 200\n\n    if(typeof options == 'number') status = options\n    if(typeof options == 'object') {\n      status = options.status || status\n    }\n\n    return {\n      pkg: o,\n      status\n    }\n\n  }\n\n}\n\nexport default PackageService\n"
  },
  {
    "__docId__": 279,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "PackageService",
    "memberof": "src/services/package.js",
    "longname": "src/services/package.js~PackageService",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/services/package.js",
    "importStyle": "PackageService",
    "description": "PackageService Class",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PackageService"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 280,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/services/package.js~PackageService",
    "longname": "src/services/package.js~PackageService#constructor",
    "access": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 281,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "error",
    "memberof": "src/services/package.js~PackageService",
    "longname": "src/services/package.js~PackageService#error",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "o",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 282,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "success",
    "memberof": "src/services/package.js~PackageService",
    "longname": "src/services/package.js~PackageService#success",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "o",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 283,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/services/password.js",
    "memberof": null,
    "longname": "src/services/password.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport bcrypt          from 'bcrypt'\nimport {chalk, logger} from '../lib/logger'\n\n/**\n * PasswordService Class\n *\n * @public\n * @class PasswordService\n */\nclass PasswordService {\n\n  constructor(options = {}) {\n    this.options = options\n  }\n\n  issue(s) {\n\n    return new Promise( (resolve, reject) => {\n\n      if(typeof s != 'string') return reject({\n        message: 'Password must be a string',\n        resource: 'PasswordService'\n      })\n\n      bcrypt.genSalt(\n        parseInt(this.options.genSalt) ||\n        parseInt(process.env.SALT_FACTOR) ||\n        10,\n      function PasswordService_genSaltCallback(err, salt) {\n        if(err) {\n          logger.error('Could not generate salt', err)\n          return reject(err)\n        }\n\n        bcrypt.hash(s, salt, function PasswordService_hashCallback(err, hash) {\n          if(err) {\n            logger.error('Could not generate hash', err)\n            return reject(err)\n          }\n\n          resolve(hash)\n        })\n\n      })\n\n    })\n\n  }\n\n  verify(s, hash) {\n\n    return new Promise( (resolve, reject) => {\n\n      bcrypt.compare(s, hash, function PasswordService_compareCallback(err, match) {\n\n        if(err) {\n          logger.error('Could not verify password', err)\n          logger.debug('Password', s)\n          logger.debug('Hash', hash)\n          return reject(false)\n        }\n\n        if(!match) return reject(false)\n\n        return resolve(true)\n\n      })\n\n    })\n\n  }\n\n}\n\nexport default PasswordService\n"
  },
  {
    "__docId__": 284,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "PasswordService",
    "memberof": "src/services/password.js",
    "longname": "src/services/password.js~PasswordService",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/services/password.js",
    "importStyle": "PasswordService",
    "description": "PasswordService Class",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PasswordService"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 285,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/services/password.js~PasswordService",
    "longname": "src/services/password.js~PasswordService#constructor",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 286,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "options",
    "memberof": "src/services/password.js~PasswordService",
    "longname": "src/services/password.js~PasswordService#options",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 287,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "issue",
    "memberof": "src/services/password.js~PasswordService",
    "longname": "src/services/password.js~PasswordService#issue",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "s",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 288,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "verify",
    "memberof": "src/services/password.js~PasswordService",
    "longname": "src/services/password.js~PasswordService#verify",
    "access": null,
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [
      {
        "name": "s",
        "types": [
          "*"
        ]
      },
      {
        "name": "hash",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 289,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/services/short-id.js",
    "memberof": null,
    "longname": "src/services/short-id.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport {chalk, logger} from '../lib/logger'\nimport shorthash       from 'shorthash'\n\n/**\n * ShortIdService Class\n *\n * @public\n * @class ShortIdService\n */\nclass ShortIdService {\n\n  constructor(options = {}) {\n    this.options = options\n  }\n\n  issue(id) {\n\n    var sid = shorthash.unique(id)\n\n    return sid\n\n  }\n\n}\n\nexport default ShortIdService\n"
  },
  {
    "__docId__": 290,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ShortIdService",
    "memberof": "src/services/short-id.js",
    "longname": "src/services/short-id.js~ShortIdService",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/services/short-id.js",
    "importStyle": "ShortIdService",
    "description": "ShortIdService Class",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "ShortIdService"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 291,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/services/short-id.js~ShortIdService",
    "longname": "src/services/short-id.js~ShortIdService#constructor",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 292,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "options",
    "memberof": "src/services/short-id.js~ShortIdService",
    "longname": "src/services/short-id.js~ShortIdService#options",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 293,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "issue",
    "memberof": "src/services/short-id.js~ShortIdService",
    "longname": "src/services/short-id.js~ShortIdService#issue",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 294,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/services/template.js",
    "memberof": null,
    "longname": "src/services/template.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport async             from 'async'\nimport {chalk, logger}   from '../lib/logger'\nimport OrganizationModel from '../models/organization'\nimport ShortIdService    from '../services/short-id'\nimport TemplateModel     from '../models/template'\n\n/**\n * TemplateService Class\n *\n * @public\n * @class TemplateService\n */\nclass TemplateService {\n\n  create(o = {}, cb) {\n    var _this = this\n\n    var pkg = Object.assign({}, o)\n\n    // validation\n\n    var shortidService    = new ShortIdService(),\n        templateModel     = new TemplateModel()\n\n    templateModel.create(pkg, function(err, res) {\n\n      if(err) {\n        logger.error(err)\n\n        return cb({\n          message: 'Could not create template',\n          resource: 'TemplateService'\n        })\n      }\n\n      var sid = shortidService.issue(res.id)\n\n      _this.update(res.id, {sid}, function(err2, res2) {\n\n        if(err) {\n          logger.error(err)\n\n          return cb({\n            message: 'Could not create short id for template',\n            resource: 'TemplateService'\n          })\n        }\n\n        return cb(null, res2)\n\n      })\n\n    })\n\n  }\n\n  get() {\n    var templateModel = new TemplateModel()\n\n    templateModel.get.apply(templateModel, arguments)\n  }\n\n  getByShortId() {\n    var templateModel = new TemplateModel()\n\n    templateModel.getByShortId.apply(templateModel, arguments)\n  }\n\n  update() {\n    var templateModel = new TemplateModel()\n\n    templateModel.update.apply(templateModel, arguments)\n  }\n\n  updateByShortId() {\n    var templateModel = new TemplateModel()\n\n    templateModel.updateByShortId.apply(templateModel, arguments)\n  }\n\n}\n\nexport default TemplateService\n"
  },
  {
    "__docId__": 295,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TemplateService",
    "memberof": "src/services/template.js",
    "longname": "src/services/template.js~TemplateService",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/services/template.js",
    "importStyle": "TemplateService",
    "description": "TemplateService Class",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TemplateService"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 296,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/services/template.js~TemplateService",
    "longname": "src/services/template.js~TemplateService#create",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "o",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "cb",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 297,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "get",
    "memberof": "src/services/template.js~TemplateService",
    "longname": "src/services/template.js~TemplateService#get",
    "access": null,
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 298,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getByShortId",
    "memberof": "src/services/template.js~TemplateService",
    "longname": "src/services/template.js~TemplateService#getByShortId",
    "access": null,
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 299,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/services/template.js~TemplateService",
    "longname": "src/services/template.js~TemplateService#update",
    "access": null,
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 300,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateByShortId",
    "memberof": "src/services/template.js~TemplateService",
    "longname": "src/services/template.js~TemplateService#updateByShortId",
    "access": null,
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 301,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/services/token.js",
    "memberof": null,
    "longname": "src/services/token.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport jwt from 'jsonwebtoken'\n\n/**\n * TokenService Class\n *\n * @public\n * @class TokenService\n */\nclass TokenService {\n\n  constructor() {\n\n  }\n\n  issue(s) {\n\n    if(typeof s == 'number') s = s.toString()\n    if(typeof s != 'string') return false\n\n    var token = jwt.sign(s, cert, {\n      //expiresInMinutes: 1440 // 24 hours\n    })\n\n    return token\n\n  }\n\n  verify(token) {\n\n    return jwt.verify(token, process.env.JWT_SECRET)\n\n  }\n\n}\n\nexport default TokenService\n"
  },
  {
    "__docId__": 302,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TokenService",
    "memberof": "src/services/token.js",
    "longname": "src/services/token.js~TokenService",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/services/token.js",
    "importStyle": "TokenService",
    "description": "TokenService Class",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TokenService"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 303,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/services/token.js~TokenService",
    "longname": "src/services/token.js~TokenService#constructor",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 304,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "issue",
    "memberof": "src/services/token.js~TokenService",
    "longname": "src/services/token.js~TokenService#issue",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "s",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 305,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "verify",
    "memberof": "src/services/token.js~TokenService",
    "longname": "src/services/token.js~TokenService#verify",
    "access": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [
      {
        "name": "token",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 306,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/services/user.js",
    "memberof": null,
    "longname": "src/services/user.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nimport async           from 'async'\nimport {chalk, logger} from '../lib/logger'\nimport PasswordService from './password'\nimport ShortIdService  from '../services/short-id'\nimport TokenService    from './token'\nimport UserModel       from '../models/user'\n\n/**\n * UserService Class\n *\n * @public\n * @class UserService\n */\nclass UserService {\n\n  create(o = {}, cb) {\n    var _this = this\n\n    var pkg = Object.assign({}, o)\n\n    // validation\n\n    var passwordService = new PasswordService(),\n        shortidService  = new ShortIdService(),\n        tokenService    = new TokenService(),\n        userModel       = new UserModel()\n\n    /*\n    TODO: clean up this query, it could be optimized\n    */\n    passwordService.issue(pkg.password, function UserService_createIssueCallback(err, hash) {\n\n      if(err) {\n        logger.error(err)\n        logger.debug('cb', typeof cb)\n        return cb({\n          message: 'Could not create password hash',\n          resource: 'UserModel'\n        })\n      }\n\n      if(pkg.password) delete pkg.password // dont want to store actual password\n      if(pkg.organizationId) delete pkg.organizationId\n\n      pkg.hash = hash\n      pkg.organizations = pkg.organizations || []\n\n      async.parallel([\n        userModel.create.bind(userModel, pkg)\n      ], function UserService_createParallelCallback(err, res) {\n\n        if(err) {\n          logger.error(err)\n          return cb({\n            raw: err,\n            resource: 'UserModel'\n          })\n        }\n\n        var user = res[0]\n        var sid  = shortidService.issue(user.id)\n\n        async.parallel([\n          tokenService.issue.bind(tokenService, user.id),\n          userModel.addToOrganizationTable.bind(userModel, user.id, o.organizations[0]),\n          _this.update.bind(_this, user.id, {sid})\n        ], function UserService_createParallelCallback2(err2, res2) {\n\n          if(err2) {\n            logger.error(err2)\n            return cb({\n              raw: err2,\n              resource: 'UserModel'\n            })\n          }\n\n          user               = res2[2]\n          user.organizations = res2[1].organizations\n          user.token         = res2[0]\n\n          cb(null, user)\n\n        })\n\n      })\n\n    })\n\n  }\n\n  get() {\n    var userModel = new UserModel()\n\n    userModel.get.apply(userModel, arguments)\n  }\n\n  getByShortId() {\n    var userModel = new UserModel()\n\n    userModel.getByShortId.apply(userModel, arguments)\n  }\n\n  getByUsername() {\n    var userModel = new UserModel()\n\n    userModel.getByUsername.apply(userModel, arguments)\n  }\n\n  list() {\n\n    var userModel = new UserModel()\n\n    userModel.list.apply(userModel, arguments)\n\n  }\n\n  update() {\n    var userModel = new UserModel()\n\n    userModel.update.apply(userModel, arguments)\n  }\n\n  updateByShortId() {\n    var userModel = new UserModel()\n\n    userModel.updateByShortId.apply(userModel, arguments)\n  }\n\n}\n\nexport default UserService\n"
  },
  {
    "__docId__": 307,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "UserService",
    "memberof": "src/services/user.js",
    "longname": "src/services/user.js~UserService",
    "access": "public",
    "export": true,
    "importPath": "structure-core/src/services/user.js",
    "importStyle": "UserService",
    "description": "UserService Class",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "UserService"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 308,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/services/user.js~UserService",
    "longname": "src/services/user.js~UserService#create",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "o",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "cb",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 309,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "get",
    "memberof": "src/services/user.js~UserService",
    "longname": "src/services/user.js~UserService#get",
    "access": null,
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 310,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getByShortId",
    "memberof": "src/services/user.js~UserService",
    "longname": "src/services/user.js~UserService#getByShortId",
    "access": null,
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 311,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getByUsername",
    "memberof": "src/services/user.js~UserService",
    "longname": "src/services/user.js~UserService#getByUsername",
    "access": null,
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 312,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "list",
    "memberof": "src/services/user.js~UserService",
    "longname": "src/services/user.js~UserService#list",
    "access": null,
    "description": null,
    "lineNumber": 114,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 313,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/services/user.js~UserService",
    "longname": "src/services/user.js~UserService#update",
    "access": null,
    "description": null,
    "lineNumber": 122,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 314,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "updateByShortId",
    "memberof": "src/services/user.js~UserService",
    "longname": "src/services/user.js~UserService#updateByShortId",
    "access": null,
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 315,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/start.js",
    "memberof": null,
    "longname": "src/start.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Module Dependencies\n *\n * @ignore\n */\nprocess.env.npm_package_version = process.env.npm_package_version || require('../package.json').version\n\nvar path = require('path')\nrequire('dotenv').config({path: path.join(__dirname, '../.env')})\n\nvar Server = require('./lib/server')\n\nvar server = new Server()\n\nserver.start()\n"
  },
  {
    "__docId__": 316,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "path",
    "memberof": "src/start.js",
    "longname": "src/start.js~path",
    "access": null,
    "export": false,
    "importPath": "structure-core/src/start.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 317,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Server",
    "memberof": "src/start.js",
    "longname": "src/start.js~Server",
    "access": null,
    "export": false,
    "importPath": "structure-core/src/start.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 318,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "server",
    "memberof": "src/start.js",
    "longname": "src/start.js~server",
    "access": null,
    "export": false,
    "importPath": "structure-core/src/start.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "Server"
      ]
    }
  },
  {
    "__docId__": 320,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 321,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 322,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 323,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 324,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 325,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 326,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 327,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 328,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 329,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 330,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 331,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 332,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 333,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 334,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 335,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 336,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 337,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 338,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 339,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 340,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 341,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 342,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 343,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 344,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 345,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 346,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 347,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 348,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 349,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 350,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 351,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 352,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 353,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 354,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 355,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 356,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 357,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 358,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 359,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 360,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 361,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 362,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 363,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 364,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 365,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 366,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 368,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 369,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 370,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 371,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 372,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 373,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 374,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 375,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 376,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/helpers/db.babel.js",
    "memberof": null,
    "longname": "test/helpers/db.babel.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "require('babel-core/register')\nrequire('babel-polyfill')\nrequire('./db')(require('minimist')(process.argv.slice(2)))\n"
  },
  {
    "__docId__": 377,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/helpers/db.js",
    "memberof": null,
    "longname": "test/helpers/db.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "process.on('uncaughtException', function(err) {\n  console.error('Unhandled Exception')\n  console.error(err)\n})\n\nprocess.on('unhandledRejection', function(err) {\n  console.error('Unhandled Rejection')\n  console.error(err)\n})\n\nimport {chalk, logger} from '../../src/lib/logger'\nimport config          from '../../src/lib/database/config'\nimport r               from '../../src/lib/database/driver'\n\nmodule.exports = function(argv) {\n\n  var debug = argv.debug\n\n  async function tableOperations() {\n\n    try {\n      await r.dbCreate('test')\n      logger.debug('Created database test')\n    }\n    catch(e) {}\n\n    for(let i = 0, l = config.tables.length; i < l; i++) {\n      let table = config.tables[i]\n\n      if(argv.drop) {\n        try {\n          await r.tableDrop(table)\n          logger.debug(`Dropped table ${table}`)\n        }\n        catch(err) {\n          if(err.message.indexOf('does not exist') == -1) {\n            logger.error(`Error dropping table ${table}`)\n            console.error(err)\n          }\n        }\n      }\n\n      try {\n        await r.tableCreate(table)\n        logger.debug(`Created table ${table}`)\n      }\n      catch(err) {\n        if(err.message.indexOf('already exists') == -1) {\n          logger.error(`Error creating table ${table}`)\n          console.error(err)\n        }\n        else {\n          logger.error(`Cannot create table ${table}; already exists`)\n        }\n      }\n    }\n\n    logger.debug('Completed dropping & adding tables')\n    process.exit(0)\n\n  }\n\n  tableOperations()\n\n}\n"
  },
  {
    "__docId__": 378,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/helpers/expressObjects.js",
    "memberof": null,
    "longname": "test/helpers/expressObjects.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {chalk, logger} from '../../src/lib/logger'\n\nclass Res {\n\n  end() {\n    return this\n  }\n\n  json(pkg = {}) {\n    logger.debug('pkg', pkg)\n    return this\n  }\n\n  send() {\n    return this\n  }\n\n  status(code) {\n    logger.debug('status', code)\n    this.statusCode = code\n\n    return this\n  }\n\n}\n\nfunction next() {return this}\n\nexport default function expressObjects() {\n\n  return {\n    req: {\n      body: {},\n      params: {}\n    },\n    res: new Res(),\n    next\n  }\n\n}\n"
  },
  {
    "__docId__": 379,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/helpers/mock-http-server.js",
    "memberof": null,
    "longname": "test/helpers/mock-http-server.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import request from 'supertest-as-promised'\nimport Server  from '../../src/server'\n\nfunction MockHTTPServer(options = {}) {\n\n  var api = new Server(options)\n\n  // Supertest wants the express server object\n  return request(api.server)\n}\n\nexport default MockHTTPServer\n"
  },
  {
    "__docId__": 380,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/helpers/start.js",
    "memberof": null,
    "longname": "test/helpers/start.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "process.on('uncaughtException', function(err) {\n  console.error(err.stack)\n})\n\nprocess.on('unhandledRejection', function(err) {\n  console.error('Unhandled Rejection')\n  if(err.stack) {\n    console.error(err.message)\n    console.error(err.stack)\n  } else {\n    console.error(err)\n  }\n\n})\n\nrequire('babel-core/register')\nrequire('babel-polyfill')\n\nvar path = require('path')\nrequire('dotenv').config({path: path.join(__dirname, '../../.env')})\n\nvar chai  = require('chai'),\n    sinon = require('sinon'),\n    sinonChai = require('sinon-chai')\n\nchai.use(sinonChai)\n\nglobal.expect = chai.expect\nglobal.sinon  = sinon\n"
  },
  {
    "__docId__": 381,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/integration/suite.js",
    "memberof": null,
    "longname": "test/integration/suite.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "describe('Integration', function() {\n\n  /*describe('Routes', function() {\n    require('./routes/organizations')\n  })*/\n\n})\n"
  },
  {
    "__docId__": 382,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe0",
    "testId": 0,
    "memberof": "test/integration/suite.js",
    "testDepth": 0,
    "longname": "test/integration/suite.js~describe0",
    "access": null,
    "description": "Integration",
    "lineNumber": 1
  },
  {
    "__docId__": 383,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/controllers/auth.js",
    "memberof": null,
    "longname": "test/unit/controllers/auth.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type} from 'eisley'\nimport AuthController from '../../../src/controllers/auth'\nimport UserModel      from '../../../src/models/user'\n\n/** @test {AuthController} */\ndescribe('Auth', function() {\n\n  /** @test {AuthController#login} */\n  it('should not login; missing login data',  async function(done) {\n\n    var auth = new AuthController()\n\n    var req = {\n      body: {\n        username: 'foo'\n      }\n    }\n\n    try {\n      var res = await auth.login(req)\n    }\n    catch(e) {\n      expect(e).to.be.an('object')\n\n      done()\n    }\n\n  })\n\n  /** @test {AuthController#login} */\n  it('should not login; no user',  async function(done) {\n\n    var auth = new AuthController()\n\n    var req = {\n      body: {\n        username: 'foo',\n        password: 'bar'\n      }\n    }\n\n    try {\n      var res = await auth.login(req)\n    }\n    catch(e) {\n      expect(e).to.be.an('object')\n\n      done()\n    }\n\n  })\n\n  /** @test {AuthController#login} */\n  it('should not login; bad password',  async function(done) {\n\n    var auth      = new AuthController(),\n        userModel = new UserModel()\n\n    var user = await userModel.create({\n      email: 'mail@foo.com',\n      username: 'tom335599',\n      password: 'gonnacatchyou22'\n    })\n\n    var req = {\n      body: {\n        username: 'tom335599',\n        password: 'gonnacatchyou21'\n      }\n    }\n\n    try {\n      var res = await auth.login(req)\n    }\n    catch(e) {\n      expect(e).to.be.an('object')\n\n      done()\n    }\n\n  })\n\n  /** @test {AuthController#login} */\n  it('should login',  async function(done) {\n\n    var auth      = new AuthController(),\n        userModel = new UserModel()\n\n    var user = await userModel.create({\n      email: 'mail@foo.com',\n      username: 'tom335599',\n      password: 'gonnacatchyou22'\n    })\n\n    var req = {\n      body: {\n        username: 'tom335599',\n        password: 'gonnacatchyou22'\n      }\n    }\n\n    var res = await auth.login(req)\n\n    expect(res).to.be.an('object')\n    expect(res.username).to.equal('tom335599')\n\n    done()\n\n  })\n\n})\n"
  },
  {
    "__docId__": 384,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe1",
    "testId": 1,
    "memberof": "test/unit/controllers/auth.js",
    "testDepth": 0,
    "longname": "test/unit/controllers/auth.js~describe1",
    "access": null,
    "description": "Auth",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AuthController}"
      }
    ],
    "testTargets": [
      "AuthController"
    ]
  },
  {
    "__docId__": 385,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it2",
    "testId": 2,
    "memberof": "test/unit/controllers/auth.js~describe1",
    "testDepth": 1,
    "longname": "test/unit/controllers/auth.js~describe1.it2",
    "access": null,
    "description": "should not login; missing login data",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AuthController#login}"
      }
    ],
    "testTargets": [
      "AuthController#login"
    ]
  },
  {
    "__docId__": 386,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it3",
    "testId": 3,
    "memberof": "test/unit/controllers/auth.js~describe1",
    "testDepth": 1,
    "longname": "test/unit/controllers/auth.js~describe1.it3",
    "access": null,
    "description": "should not login; no user",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AuthController#login}"
      }
    ],
    "testTargets": [
      "AuthController#login"
    ]
  },
  {
    "__docId__": 387,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it4",
    "testId": 4,
    "memberof": "test/unit/controllers/auth.js~describe1",
    "testDepth": 1,
    "longname": "test/unit/controllers/auth.js~describe1.it4",
    "access": null,
    "description": "should not login; bad password",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AuthController#login}"
      }
    ],
    "testTargets": [
      "AuthController#login"
    ]
  },
  {
    "__docId__": 388,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it5",
    "testId": 5,
    "memberof": "test/unit/controllers/auth.js~describe1",
    "testDepth": 1,
    "longname": "test/unit/controllers/auth.js~describe1.it5",
    "access": null,
    "description": "should login",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AuthController#login}"
      }
    ],
    "testTargets": [
      "AuthController#login"
    ]
  },
  {
    "__docId__": 389,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/controllers/documents.js",
    "memberof": null,
    "longname": "test/unit/controllers/documents.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type}       from 'eisley'\nimport DocumentsController from '../../../src/controllers/documents'\n\n/** @test {DocumentsController} */\ndescribe('Documents', function() {\n\n  /** @test {DocumentsController#create} */\n  it('should create an taxonomy', async function(done) {\n\n      var document = new DocumentsController()\n\n      var req = {\n        body: {\n          title: 'My Document'\n        }\n      }\n\n      var res = await document.create(req)\n\n      expect(res.title).to.equal('My Document')\n\n    done()\n\n  })\n\n\n  /** @test {DocumentsController#getById} */\n  it('should get by ID', async function(done) {\n\n    var document = new DocumentsController()\n\n    var req = {\n      body: {\n        title: 'My Document'\n      }\n    }\n\n    var res = await document.create(req)\n\n    var req2 = {\n      params: {\n        id: res.id\n      }\n    }\n\n    var res2 = await document.getById(req2)\n\n    expect(res.title).to.equal('My Document')\n\n    done()\n\n  })\n\n  /** @test {DocumentsController#getAll} */\n  it('should get all', async function(done) {\n\n    var document = new DocumentsController({\n    })\n\n    var req = {\n      body: {\n        title: 'My Document'\n      }\n    }\n\n    var res = await document.create(req)\n\n    var res2 = await document.getAll()\n\n    expect(res2.length > 0).to.be.true\n\n    done()\n\n  })\n\n  /** @test {DocumentsController#update} */\n  it('should update a document', async function(done) {\n\n    var document = new DocumentsController()\n\n    var req = {\n      body: {\n        title: 'My Document'\n      }\n    }\n\n    var res = await document.create(req)\n\n    var req = {\n      body: {\n        title: 'My Updated Document'\n      },\n      params: {\n        id: res.id\n      }\n    }\n\n    var res2 = await document.update(req)\n\n    expect(res2.title).to.equal('My Updated Document')\n\n    done()\n\n  }\n)\n})\n"
  },
  {
    "__docId__": 390,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe6",
    "testId": 6,
    "memberof": "test/unit/controllers/documents.js",
    "testDepth": 0,
    "longname": "test/unit/controllers/documents.js~describe6",
    "access": null,
    "description": "Documents",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DocumentsController}"
      }
    ],
    "testTargets": [
      "DocumentsController"
    ]
  },
  {
    "__docId__": 391,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it7",
    "testId": 7,
    "memberof": "test/unit/controllers/documents.js~describe6",
    "testDepth": 1,
    "longname": "test/unit/controllers/documents.js~describe6.it7",
    "access": null,
    "description": "should create an taxonomy",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DocumentsController#create}"
      }
    ],
    "testTargets": [
      "DocumentsController#create"
    ]
  },
  {
    "__docId__": 392,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it8",
    "testId": 8,
    "memberof": "test/unit/controllers/documents.js~describe6",
    "testDepth": 1,
    "longname": "test/unit/controllers/documents.js~describe6.it8",
    "access": null,
    "description": "should get by ID",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DocumentsController#getById}"
      }
    ],
    "testTargets": [
      "DocumentsController#getById"
    ]
  },
  {
    "__docId__": 393,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it9",
    "testId": 9,
    "memberof": "test/unit/controllers/documents.js~describe6",
    "testDepth": 1,
    "longname": "test/unit/controllers/documents.js~describe6.it9",
    "access": null,
    "description": "should get all",
    "lineNumber": 55,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DocumentsController#getAll}"
      }
    ],
    "testTargets": [
      "DocumentsController#getAll"
    ]
  },
  {
    "__docId__": 394,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it10",
    "testId": 10,
    "memberof": "test/unit/controllers/documents.js~describe6",
    "testDepth": 1,
    "longname": "test/unit/controllers/documents.js~describe6.it10",
    "access": null,
    "description": "should update a document",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DocumentsController#update}"
      }
    ],
    "testTargets": [
      "DocumentsController#update"
    ]
  },
  {
    "__docId__": 395,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/controllers/organizations.js",
    "memberof": null,
    "longname": "test/unit/controllers/organizations.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type}       from 'eisley'\nimport OrganizationsController from '../../../src/controllers/organizations'\n\n/** @test {OrganizationsController} */\ndescribe('Organizations', function() {\n\n  /** @test {OrganizationsController#create} */\n  it('should create an organization', async function(done) {\n\n      var organization = new OrganizationsController()\n\n      var req = {\n        body: {\n          title: 'My Organization',\n          desc: 'Cool Organization'\n        }\n      }\n\n      var res = await organization.create(req)\n\n      expect(res.title).to.equal('My Organization')\n      expect(res.desc).to.equal('Cool Organization')\n\n    done()\n\n  })\n\n\n  /** @test {OrganizationsController#getById} */\n  it('should get by ID', async function(done) {\n\n    var organization = new OrganizationsController()\n\n    var req = {\n      body: {\n        title: 'My Organization',\n        desc: 'Cool Organization'\n      }\n    }\n\n    var res = await organization.create(req)\n\n    var req2 = {\n      params: {\n        id: res.id\n      }\n    }\n\n    var res2 = await organization.getById(req2)\n\n    expect(res.title).to.equal('My Organization')\n    expect(res.desc).to.equal('Cool Organization')\n\n    done()\n\n  })\n\n  /** @test {OrganizationsController#getAll} */\n  it('should get all', async function(done) {\n\n    var organization = new OrganizationsController({\n    })\n\n    var req = {\n      body: {\n        title: 'My Organization',\n        desc: 'Cool Organization'\n      }\n    }\n\n    var res = await organization.create(req)\n\n    var res2 = await organization.getAll()\n\n    expect(res2.length > 0).to.be.true\n\n    done()\n\n  })\n\n  /** @test {OrganizationsController#update} */\n  it('should update a organizations', async function(done) {\n\n    var organization = new OrganizationsController()\n\n    var req = {\n      body: {\n        title: 'My Organization',\n        desc: 'Cool Organization'\n      }\n    }\n\n    var res = await organization.create(req)\n\n    var req = {\n      body: {\n        title: 'My New Organization',\n        desc: 'Cooler Organization'\n      },\n      params: {\n        id: res.id\n      }\n    }\n\n    var res2 = await organization.update(req)\n\n    expect(res2.title).to.equal('My New Organization')\n    expect(res2.desc).to.equal('Cooler Organization')\n\n    done()\n\n  }\n)\n})\n"
  },
  {
    "__docId__": 396,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe11",
    "testId": 11,
    "memberof": "test/unit/controllers/organizations.js",
    "testDepth": 0,
    "longname": "test/unit/controllers/organizations.js~describe11",
    "access": null,
    "description": "Organizations",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{OrganizationsController}"
      }
    ],
    "testTargets": [
      "OrganizationsController"
    ]
  },
  {
    "__docId__": 397,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it12",
    "testId": 12,
    "memberof": "test/unit/controllers/organizations.js~describe11",
    "testDepth": 1,
    "longname": "test/unit/controllers/organizations.js~describe11.it12",
    "access": null,
    "description": "should create an organization",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{OrganizationsController#create}"
      }
    ],
    "testTargets": [
      "OrganizationsController#create"
    ]
  },
  {
    "__docId__": 398,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it13",
    "testId": 13,
    "memberof": "test/unit/controllers/organizations.js~describe11",
    "testDepth": 1,
    "longname": "test/unit/controllers/organizations.js~describe11.it13",
    "access": null,
    "description": "should get by ID",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{OrganizationsController#getById}"
      }
    ],
    "testTargets": [
      "OrganizationsController#getById"
    ]
  },
  {
    "__docId__": 399,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it14",
    "testId": 14,
    "memberof": "test/unit/controllers/organizations.js~describe11",
    "testDepth": 1,
    "longname": "test/unit/controllers/organizations.js~describe11.it14",
    "access": null,
    "description": "should get all",
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{OrganizationsController#getAll}"
      }
    ],
    "testTargets": [
      "OrganizationsController#getAll"
    ]
  },
  {
    "__docId__": 400,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it15",
    "testId": 15,
    "memberof": "test/unit/controllers/organizations.js~describe11",
    "testDepth": 1,
    "longname": "test/unit/controllers/organizations.js~describe11.it15",
    "access": null,
    "description": "should update a organizations",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{OrganizationsController#update}"
      }
    ],
    "testTargets": [
      "OrganizationsController#update"
    ]
  },
  {
    "__docId__": 401,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/controllers/taxonomies.js",
    "memberof": null,
    "longname": "test/unit/controllers/taxonomies.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type}       from 'eisley'\nimport TaxonomiesController from '../../../src/controllers/taxonomies'\n\n/** @test {TaxonomiesController} */\ndescribe('Taxonomies', function() {\n\n  /** @test {TaxonomiesController#create} */\n  it('should create an taxonomy', async function(done) {\n\n      var taxonomy = new TaxonomiesController()\n\n      var req = {\n        body: {\n          title: 'Sports',\n          slug: 'sports',\n          desc: 'All of our sports content'\n        }\n      }\n\n      var res = await taxonomy.create(req)\n\n      expect(res.title).to.equal('Sports')\n      expect(res.slug).to.equal('sports')\n      expect(res.desc).to.equal('All of our sports content')\n\n    done()\n\n  })\n\n\n  /** @test {TaxonomiesController#getById} */\n  it('should get by ID', async function(done) {\n\n    var taxonomy = new TaxonomiesController()\n\n    var req = {\n      body: {\n        title: 'Sports',\n        slug: 'sports',\n        desc: 'All of our sports content'\n      }\n    }\n\n    var res = await taxonomy.create(req)\n\n    var req2 = {\n      params: {\n        id: res.id\n      }\n    }\n\n    var res2 = await taxonomy.getById(req2)\n\n    expect(res.title).to.equal('Sports')\n    expect(res.slug).to.equal('sports')\n    expect(res.desc).to.equal('All of our sports content')\n\n    done()\n\n  })\n\n  /** @test {TaxonomiesController#getAll} */\n  it('should get all', async function(done) {\n\n    var taxonomy = new TaxonomiesController({\n    })\n\n    var req = {\n      body: {\n        title: 'Sports',\n        slug: 'sports',\n        desc: 'All of our sports content'\n      }\n    }\n\n    var res = await taxonomy.create(req)\n\n    var res2 = await taxonomy.getAll()\n\n    expect(res2.length > 0).to.be.true\n\n    done()\n\n  })\n\n  /** @test {TaxonomiesController#update} */\n  it('should update a taxonomy', async function(done) {\n\n    var taxonomy = new TaxonomiesController()\n\n    var req = {\n      body: {\n        title: 'Sports',\n        slug: 'sports',\n        desc: 'All of our sports content'\n      }\n    }\n\n    var res = await taxonomy.create(req)\n\n    var req = {\n      body: {\n        title: 'Sports & Scores',\n        slug: 'sports_and_scores',\n        desc: 'All of our sports content and the scores'\n      },\n      params: {\n        id: res.id\n      }\n    }\n\n    var res2 = await taxonomy.update(req)\n\n    expect(res2.title).to.equal('Sports & Scores')\n    expect(res2.slug).to.equal('sports_and_scores')\n    expect(res2.desc).to.equal('All of our sports content and the scores')\n\n    done()\n\n  }\n)\n})\n"
  },
  {
    "__docId__": 402,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe16",
    "testId": 16,
    "memberof": "test/unit/controllers/taxonomies.js",
    "testDepth": 0,
    "longname": "test/unit/controllers/taxonomies.js~describe16",
    "access": null,
    "description": "Taxonomies",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TaxonomiesController}"
      }
    ],
    "testTargets": [
      "TaxonomiesController"
    ]
  },
  {
    "__docId__": 403,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it17",
    "testId": 17,
    "memberof": "test/unit/controllers/taxonomies.js~describe16",
    "testDepth": 1,
    "longname": "test/unit/controllers/taxonomies.js~describe16.it17",
    "access": null,
    "description": "should create an taxonomy",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TaxonomiesController#create}"
      }
    ],
    "testTargets": [
      "TaxonomiesController#create"
    ]
  },
  {
    "__docId__": 404,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it18",
    "testId": 18,
    "memberof": "test/unit/controllers/taxonomies.js~describe16",
    "testDepth": 1,
    "longname": "test/unit/controllers/taxonomies.js~describe16.it18",
    "access": null,
    "description": "should get by ID",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TaxonomiesController#getById}"
      }
    ],
    "testTargets": [
      "TaxonomiesController#getById"
    ]
  },
  {
    "__docId__": 405,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it19",
    "testId": 19,
    "memberof": "test/unit/controllers/taxonomies.js~describe16",
    "testDepth": 1,
    "longname": "test/unit/controllers/taxonomies.js~describe16.it19",
    "access": null,
    "description": "should get all",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TaxonomiesController#getAll}"
      }
    ],
    "testTargets": [
      "TaxonomiesController#getAll"
    ]
  },
  {
    "__docId__": 406,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it20",
    "testId": 20,
    "memberof": "test/unit/controllers/taxonomies.js~describe16",
    "testDepth": 1,
    "longname": "test/unit/controllers/taxonomies.js~describe16.it20",
    "access": null,
    "description": "should update a taxonomy",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TaxonomiesController#update}"
      }
    ],
    "testTargets": [
      "TaxonomiesController#update"
    ]
  },
  {
    "__docId__": 407,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/controllers/templates.js",
    "memberof": null,
    "longname": "test/unit/controllers/templates.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type}      from 'eisley'\nimport TemplatesController from '../../../src/controllers/templates'\n\n/** @test {TemplatesController} */\ndescribe('Templates', function() {\n\n  /** @test {TemplatesController#create} */\n  it('should create an template', async function(done) {\n\n      var template = new TemplatesController()\n\n      var req = {\n        body: {\n          title: 'Fun Template',\n        }\n      }\n\n      var res = await template.create(req)\n\n      expect(res.title).to.equal('Fun Template')\n\n    done()\n\n  })\n\n\n  /** @test {TemplatesController#getById} */\n  it('should get by ID', async function(done) {\n\n    var template = new TemplatesController()\n\n    var req = {\n      body: {\n        title: 'Sports',\n        slug: 'sports',\n        desc: 'All of our sports content'\n      }\n    }\n\n    var res = await template.create(req)\n\n    var req2 = {\n      params: {\n        id: res.id\n      }\n    }\n\n    var res2 = await template.getById(req2)\n\n    expect(res.title).to.equal('Sports')\n    expect(res.slug).to.equal('sports')\n    expect(res.desc).to.equal('All of our sports content')\n\n    done()\n\n  })\n\n  /** @test {TemplatesController#getAll} */\n  it('should get all', async function(done) {\n\n    var template = new TemplatesController({\n    })\n\n    var req = {\n      body: {\n        title: 'Sports',\n        slug: 'sports',\n        desc: 'All of our sports content'\n      }\n    }\n\n    var res = await template.create(req)\n\n    var res2 = await template.getAll()\n\n    expect(res2.length > 0).to.be.true\n\n    done()\n\n  })\n\n  /** @test {TemplatesController#update} */\n  it('should update a template', async function(done) {\n\n    var template = new TemplatesController()\n\n    var req = {\n      body: {\n        title: 'Sports',\n        slug: 'sports',\n        desc: 'All of our sports content'\n      }\n    }\n\n    var res = await template.create(req)\n\n    var req = {\n      body: {\n        title: 'Sports & Scores',\n        slug: 'sports_and_scores',\n        desc: 'All of our sports content and the scores'\n      },\n      params: {\n        id: res.id\n      }\n    }\n\n    var res2 = await template.update(req)\n\n    expect(res2.title).to.equal('Sports & Scores')\n    expect(res2.slug).to.equal('sports_and_scores')\n    expect(res2.desc).to.equal('All of our sports content and the scores')\n\n    done()\n\n  }\n)\n})\n"
  },
  {
    "__docId__": 408,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe21",
    "testId": 21,
    "memberof": "test/unit/controllers/templates.js",
    "testDepth": 0,
    "longname": "test/unit/controllers/templates.js~describe21",
    "access": null,
    "description": "Templates",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TemplatesController}"
      }
    ],
    "testTargets": [
      "TemplatesController"
    ]
  },
  {
    "__docId__": 409,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it22",
    "testId": 22,
    "memberof": "test/unit/controllers/templates.js~describe21",
    "testDepth": 1,
    "longname": "test/unit/controllers/templates.js~describe21.it22",
    "access": null,
    "description": "should create an template",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TemplatesController#create}"
      }
    ],
    "testTargets": [
      "TemplatesController#create"
    ]
  },
  {
    "__docId__": 410,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it23",
    "testId": 23,
    "memberof": "test/unit/controllers/templates.js~describe21",
    "testDepth": 1,
    "longname": "test/unit/controllers/templates.js~describe21.it23",
    "access": null,
    "description": "should get by ID",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TemplatesController#getById}"
      }
    ],
    "testTargets": [
      "TemplatesController#getById"
    ]
  },
  {
    "__docId__": 411,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it24",
    "testId": 24,
    "memberof": "test/unit/controllers/templates.js~describe21",
    "testDepth": 1,
    "longname": "test/unit/controllers/templates.js~describe21.it24",
    "access": null,
    "description": "should get all",
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TemplatesController#getAll}"
      }
    ],
    "testTargets": [
      "TemplatesController#getAll"
    ]
  },
  {
    "__docId__": 412,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it25",
    "testId": 25,
    "memberof": "test/unit/controllers/templates.js~describe21",
    "testDepth": 1,
    "longname": "test/unit/controllers/templates.js~describe21.it25",
    "access": null,
    "description": "should update a template",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TemplatesController#update}"
      }
    ],
    "testTargets": [
      "TemplatesController#update"
    ]
  },
  {
    "__docId__": 413,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/controllers/users.js",
    "memberof": null,
    "longname": "test/unit/controllers/users.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type}  from 'eisley'\nimport UsersController from '../../../src/controllers/users'\n\n/** @test {UsersController} */\ndescribe('Users', function() {\n\n  /** @test {UsersController#create} */\n  it('should create an user', async function(done) {\n\n      var user = new UsersController()\n\n      var req = {\n        body: {\n          username: 'tedtalks2000',\n          email: 'ted@email.com',\n          password: 'foo88'\n        }\n      }\n\n      var res = await user.create(req)\n\n      expect(res.username).to.equal('tedtalks2000')\n      expect(res.email).to.equal('ted@email.com')\n      expect(res.password).to.be.undefined\n      expect(res.hash).to.be.a('string')\n\n    done()\n\n  })\n\n\n  /** @test {UsersController#getById} */\n  it('should get by ID', async function(done) {\n\n    var user = new UsersController({\n    })\n\n    var req = {\n      body: {\n        username: 'tedtalks2000',\n        email: 'ted@email.com',\n        password: 'foo88'\n      }\n    }\n\n    var res = await user.create(req)\n\n    var req2 = {\n      params: {\n        id: res.id\n      }\n    }\n\n    var res2 = await user.getById(req2)\n\n    expect(res2.username).to.equal('tedtalks2000')\n    expect(res2.email).to.equal('ted@email.com')\n    expect(res2.password).to.be.undefined\n    expect(res2.hash).to.be.a('string')\n\n    done()\n\n  })\n\n  /** @test {UserModel#getAll} */\n  it('should get all', async function(done) {\n\n    var user = new UsersController({\n    })\n\n    var req = {\n      body: {\n        username: 'tedtalks2000',\n        email: 'ted@email.com',\n        password: 'foo88'\n      }\n    }\n\n    var res = await user.create(req)\n\n    var res2 = await user.getAll()\n\n    expect(res2.length > 0).to.be.true\n\n    done()\n\n  })\n\n  /** @test {UsersController#update} */\n  it('should update a user', async function(done) {\n\n    var user = new UsersController()\n\n    var req = {\n      body: {\n        username: 'tedtalks2000',\n        email: 'ted@email.com',\n        password: 'foo88'\n      }\n    }\n\n    var res = await user.create(req)\n\n    var req = {\n      body: {\n        username: 'ted2000',\n        email: 'ted2000@email.com',\n      },\n      params: {\n        id: res.id\n      }\n    }\n\n    var res2 = await user.update(req)\n\n    expect(res2.username).to.equal('ted2000')\n    expect(res2.email).to.equal('ted2000@email.com')\n    expect(res.password).to.be.undefined\n    expect(res.hash).to.be.a('string')\n\n    done()\n\n  }\n)\n})\n"
  },
  {
    "__docId__": 414,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe26",
    "testId": 26,
    "memberof": "test/unit/controllers/users.js",
    "testDepth": 0,
    "longname": "test/unit/controllers/users.js~describe26",
    "access": null,
    "description": "Users",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{UsersController}"
      }
    ],
    "testTargets": [
      "UsersController"
    ]
  },
  {
    "__docId__": 415,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it27",
    "testId": 27,
    "memberof": "test/unit/controllers/users.js~describe26",
    "testDepth": 1,
    "longname": "test/unit/controllers/users.js~describe26.it27",
    "access": null,
    "description": "should create an user",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{UsersController#create}"
      }
    ],
    "testTargets": [
      "UsersController#create"
    ]
  },
  {
    "__docId__": 416,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it28",
    "testId": 28,
    "memberof": "test/unit/controllers/users.js~describe26",
    "testDepth": 1,
    "longname": "test/unit/controllers/users.js~describe26.it28",
    "access": null,
    "description": "should get by ID",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{UsersController#getById}"
      }
    ],
    "testTargets": [
      "UsersController#getById"
    ]
  },
  {
    "__docId__": 417,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it29",
    "testId": 29,
    "memberof": "test/unit/controllers/users.js~describe26",
    "testDepth": 1,
    "longname": "test/unit/controllers/users.js~describe26.it29",
    "access": null,
    "description": "should get all",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{UserModel#getAll}"
      }
    ],
    "testTargets": [
      "UserModel#getAll"
    ]
  },
  {
    "__docId__": 418,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it30",
    "testId": 30,
    "memberof": "test/unit/controllers/users.js~describe26",
    "testDepth": 1,
    "longname": "test/unit/controllers/users.js~describe26.it30",
    "access": null,
    "description": "should update a user",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{UsersController#update}"
      }
    ],
    "testTargets": [
      "UsersController#update"
    ]
  },
  {
    "__docId__": 419,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/flow/flow.js",
    "memberof": null,
    "longname": "test/unit/flow/flow.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Model   from '../../../models/base'\nimport request from 'request'\n\ndescribe('Integration: Models: Flow', function() {\n\n  it('should save', function(done) {\n\n    var model = new Model({table: 'foo'})\n\n    model\n      .flow({foo: 'bar'})\n      .save()\n      .on('end', function() {\n\n        done()\n\n      })\n\n  })\n\n  it('should get by id', function(done) {\n\n    var model = new Model({table: 'foo'})\n\n    model\n      .flow({foo: 'bar'})\n      .save()\n      .get()\n      .on('end', function(pkg) {\n\n        expect(pkg.foo).to.equal('bar')\n\n        done()\n\n      })\n\n  })\n\n  it('should update by id', function(done) {\n\n    var model = new Model({table: 'foo'})\n\n    model\n      .flow({foo: 'bar'})\n      .save()\n\n      // Just a random middlware to show that `body` changed value\n      .use(function(pkg, next) {\n        pkg.foo = 'baz'\n        next(null, pkg)\n      })\n      .update()\n      .on('end', function updateEndCallback(pkg) {\n\n        expect(pkg.foo).to.equal('baz')\n\n        done()\n\n      })\n\n  })\n\n  it('should convert a stream to string', function(done) {\n    this.timeout(10000)\n\n    var model = new Model({table: 'foo'})\n\n    model\n      .flow()\n      .streamToString(request.get('https://bitcoinwisdom.com'))\n      .on('end', function(pkg) {\n\n        expect(pkg).to.be.a('string')\n\n        done()\n      })\n\n  })\n\n  it('should scrape a string of HTML', function(done) {\n    this.timeout(10000)\n\n    var model = new Model({table: 'foo'})\n\n    model\n      .flow()\n      .streamToString(request.get('https://bitcoinwisdom.com'))\n      .scrape(function($) {\n\n        return {\n          price: {\n            bitstamp: $('#market_bitstampbtcusd').text(),\n            btce: $('#market_btcebtcusd').text(),\n            bitfinex: $('#market_bitfinexbtcusd').text(),\n            huobi: $('#market_huobibtccny .eprice').text().replace('/', ''),\n            ltc: $('#market_btceltcusd').text()\n          }\n        }\n\n      })\n      .on('end', function(pkg) {\n\n        expect(pkg).to.be.an('object')\n        expect(pkg.price).to.be.an('object')\n\n        done()\n      })\n\n  })\n\n})\n"
  },
  {
    "__docId__": 420,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe31",
    "testId": 31,
    "memberof": "test/unit/flow/flow.js",
    "testDepth": 0,
    "longname": "test/unit/flow/flow.js~describe31",
    "access": null,
    "description": "Integration: Models: Flow",
    "lineNumber": 4
  },
  {
    "__docId__": 421,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it32",
    "testId": 32,
    "memberof": "test/unit/flow/flow.js~describe31",
    "testDepth": 1,
    "longname": "test/unit/flow/flow.js~describe31.it32",
    "access": null,
    "description": "should save",
    "lineNumber": 6
  },
  {
    "__docId__": 422,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it33",
    "testId": 33,
    "memberof": "test/unit/flow/flow.js~describe31",
    "testDepth": 1,
    "longname": "test/unit/flow/flow.js~describe31.it33",
    "access": null,
    "description": "should get by id",
    "lineNumber": 21
  },
  {
    "__docId__": 423,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it34",
    "testId": 34,
    "memberof": "test/unit/flow/flow.js~describe31",
    "testDepth": 1,
    "longname": "test/unit/flow/flow.js~describe31.it34",
    "access": null,
    "description": "should update by id",
    "lineNumber": 39
  },
  {
    "__docId__": 424,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it35",
    "testId": 35,
    "memberof": "test/unit/flow/flow.js~describe31",
    "testDepth": 1,
    "longname": "test/unit/flow/flow.js~describe31.it35",
    "access": null,
    "description": "should convert a stream to string",
    "lineNumber": 63
  },
  {
    "__docId__": 425,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it36",
    "testId": 36,
    "memberof": "test/unit/flow/flow.js~describe31",
    "testDepth": 1,
    "longname": "test/unit/flow/flow.js~describe31.it36",
    "access": null,
    "description": "should scrape a string of HTML",
    "lineNumber": 80
  },
  {
    "__docId__": 426,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/lib/database/driver.js",
    "memberof": null,
    "longname": "test/unit/lib/database/driver.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import r from '../../../../src/lib/database/driver'\n\ndescribe('Driver', function() {\n\n  /*\n  NOTE: this may seem like a silly test, but it's necessary. If this test fails,\n  it means the driver is not being exported correctly.\n  */\n  it('should use r.now()', function(done) {\n\n    r.now()\n\n    done()\n\n  })\n\n})\n"
  },
  {
    "__docId__": 427,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe37",
    "testId": 37,
    "memberof": "test/unit/lib/database/driver.js",
    "testDepth": 0,
    "longname": "test/unit/lib/database/driver.js~describe37",
    "access": null,
    "description": "Driver",
    "lineNumber": 3
  },
  {
    "__docId__": 428,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it38",
    "testId": 38,
    "memberof": "test/unit/lib/database/driver.js~describe37",
    "testDepth": 1,
    "longname": "test/unit/lib/database/driver.js~describe37.it38",
    "access": null,
    "description": "should use r.now()",
    "lineNumber": 9
  },
  {
    "__docId__": 429,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/models/auth.js",
    "memberof": null,
    "longname": "test/unit/models/auth.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type} from 'eisley'\n\nimport AuthModel from '../../../src/models/auth'\nimport UserModel from '../../../src/models/user'\n\n/** @test {AuthModel} */\ndescribe('Auth', function() {\n\n  it('should initialize', function(done) {\n\n    var auth = new AuthModel()\n\n    expect(auth.name).to.be.equal('auth')\n\n    done()\n\n  })\n\n  /** @test {AuthModel#login} */\n  it('should not login; missing login data',  async function(done) {\n\n    var auth = new AuthModel()\n\n    try {\n      var res = await auth.login({\n        username: 'foo'\n      })\n    }\n    catch(e) {\n      expect(e).to.be.an('object')\n\n      done()\n    }\n\n  })\n\n  /** @test {AuthModel#login} */\n  it('should not login; no user',  async function(done) {\n\n    var auth = new AuthModel()\n\n    try {\n      var res = await auth.login({\n        username: 'foo',\n        password: 'bar'\n      })\n    }\n    catch(e) {\n      expect(e).to.be.an('object')\n\n      done()\n    }\n\n  })\n\n  /** @test {AuthModel#login} */\n  it('should not login; bad password',  async function(done) {\n\n    var auth = new AuthModel(),\n        userModel = new UserModel()\n\n    var user = await userModel.create({\n      email: 'mail@foo.com',\n      username: 'tom335599',\n      password: 'gonnacatchyou22'\n    })\n\n    try {\n      var res = await auth.login({\n        username: 'tom335599',\n        password: 'gonnacatchyou21'\n      })\n    }\n    catch(e) {\n      expect(e).to.be.an('object')\n\n      done()\n    }\n\n  })\n\n  /** @test {AuthModel#login} */\n  it('should login',  async function(done) {\n\n    var auth = new AuthModel(),\n        userModel = new UserModel()\n\n    var user = await userModel.create({\n      email: 'mail@foo.com',\n      username: 'tom335599',\n      password: 'gonnacatchyou22'\n    })\n\n    var res = await auth.login({\n      username: 'tom335599',\n      password: 'gonnacatchyou22'\n    })\n\n    expect(res).to.be.an('object')\n\n    done()\n\n  })\n\n})\n"
  },
  {
    "__docId__": 430,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe39",
    "testId": 39,
    "memberof": "test/unit/models/auth.js",
    "testDepth": 0,
    "longname": "test/unit/models/auth.js~describe39",
    "access": null,
    "description": "Auth",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AuthModel}"
      }
    ],
    "testTargets": [
      "AuthModel"
    ]
  },
  {
    "__docId__": 431,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it40",
    "testId": 40,
    "memberof": "test/unit/models/auth.js~describe39",
    "testDepth": 1,
    "longname": "test/unit/models/auth.js~describe39.it40",
    "access": null,
    "description": "should initialize",
    "lineNumber": 9
  },
  {
    "__docId__": 432,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it41",
    "testId": 41,
    "memberof": "test/unit/models/auth.js~describe39",
    "testDepth": 1,
    "longname": "test/unit/models/auth.js~describe39.it41",
    "access": null,
    "description": "should not login; missing login data",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AuthModel#login}"
      }
    ],
    "testTargets": [
      "AuthModel#login"
    ]
  },
  {
    "__docId__": 433,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it42",
    "testId": 42,
    "memberof": "test/unit/models/auth.js~describe39",
    "testDepth": 1,
    "longname": "test/unit/models/auth.js~describe39.it42",
    "access": null,
    "description": "should not login; no user",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AuthModel#login}"
      }
    ],
    "testTargets": [
      "AuthModel#login"
    ]
  },
  {
    "__docId__": 434,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it43",
    "testId": 43,
    "memberof": "test/unit/models/auth.js~describe39",
    "testDepth": 1,
    "longname": "test/unit/models/auth.js~describe39.it43",
    "access": null,
    "description": "should not login; bad password",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AuthModel#login}"
      }
    ],
    "testTargets": [
      "AuthModel#login"
    ]
  },
  {
    "__docId__": 435,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it44",
    "testId": 44,
    "memberof": "test/unit/models/auth.js~describe39",
    "testDepth": 1,
    "longname": "test/unit/models/auth.js~describe39.it44",
    "access": null,
    "description": "should login",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{AuthModel#login}"
      }
    ],
    "testTargets": [
      "AuthModel#login"
    ]
  },
  {
    "__docId__": 436,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/models/document.js",
    "memberof": null,
    "longname": "test/unit/models/document.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type} from 'eisley'\n\nimport DocumentModel         from '../../../src/models/document'\nimport DocumentRevisionModel from '../../../src/models/document-revision'\n\n/** @test {DocumentModel} */\ndescribe('Document', function() {\n\n  it('should initialize', function(done) {\n\n    var document = new DocumentModel()\n\n    expect(document.name).to.be.equal('documents')\n\n    done()\n\n  })\n\n  /** @test {DocumentModel#create} */\n  it('should create a document',  async (done) => {\n\n    var document = new DocumentModel()\n\n    var res = await document.create({\n      title: 'Fun Document'\n    })\n\n    expect(res.title).to.equal('Fun Document')\n\n    done()\n\n  })\n\n  /** @test {RootModel#getById} */\n  it('should get a document by ID', async function(done) {\n\n    var document = new DocumentModel()\n\n    var documentResponse = await document.create({\n      title: 'Document'\n    })\n\n    var getByIdResponse = await document.getById(documentResponse.id)\n\n    expect(getByIdResponse.title).to.equal('Document')\n\n    done()\n\n  })\n\n  /** @test {RootModel#getAl} */\n  it('should get all documents', async function(done) {\n\n    var document = new DocumentModel()\n\n    var documentResponse = await document.create({\n      title: 'Document',\n    })\n\n    var  getAllResponse = await document.getAll()\n\n    expect(getAllResponse.length > 0).to.be.true\n\n    done()\n\n  })\n\n  /** @test {DocumentModel#update} */\n  it('should update a document', async function(done){\n\n    var document = new DocumentModel()\n\n    var documentRes = await document.create({\n      title: 'Fun Document'\n    })\n\n    var documentUpdateRes = await document.update(documentRes.id, {\n      title: 'Fun Document 3'\n    })\n\n    expect(documentUpdateRes.title).to.equal('Fun Document 3')\n\n    done()\n\n  })\n\n  /** @test {DocumentRevisionModel#create} */\n  it('should create a document revision',  async (done) => {\n\n    var document = new DocumentModel()\n\n    var documentRes = await document.create({\n      title: 'Fun Document'\n    })\n\n    var revision = new DocumentRevisionModel()\n\n    var revisionRes = await revision.create({\n      documentId: documentRes.id,\n      fields: [\n        {\n          fieldType: 'text-input',\n          title: 'Document Title'\n        }\n      ],\n      title: 'Fun Document 2'\n    })\n\n    expect(revisionRes.fields.length).to.equal(1)\n    expect(revisionRes.fields[0].title).to.equal('Document Title')\n\n    done()\n\n  })\n\n  /** @test {DocumentRevisionModel#getById} */\n  it('should get a revision by ID', async function(done) {\n\n    var document = new DocumentModel()\n\n    var documentRes = await document.create({\n      title: 'Fun Document'\n    })\n\n    var revision = new DocumentRevisionModel()\n\n    var revisionRes = await revision.create({\n      documentId:documentRes.id,\n      fields: [\n        {\n          fieldType: 'text-input',\n          title: 'Document Title'\n        }\n      ]\n    })\n\n    var responsegetById = await  revision.getById(revisionRes.id)\n\n    expect(responsegetById.fields.length).to.equal(1)\n    expect(responsegetById.fields[0].title).to.equal('Document Title')\n\n    done()\n\n  })\n\n  /** @test {DocumentRevisionModel#getAll} */\n  it('should get All revision', async function(done) {\n\n    var document = new DocumentModel()\n\n    var documentRes = await document.create({\n      title: 'Fun Document'\n    })\n\n    var revision = new DocumentRevisionModel()\n\n    var revisionRes = await revision.create({\n      documentId:documentRes.id,\n      fields: [\n        {\n          fieldType: 'text-input',\n          title: 'Document Title'\n        }\n      ]\n    })\n\n    var getAllRes = await revision.getAll()\n\n    expect(getAllRes.length > 0).to.be.true\n\n    done()\n\n  })\n\n  /** @test {DocumentRevisionModel#update} */\n  it('should update a document revision', async function(done) {\n\n    var document = new DocumentModel()\n\n    var documentRes = await document.create({\n      title: 'Fun Document'\n    })\n\n    var revision = new DocumentRevisionModel()\n\n    var revisionRes = await revision.create({\n      documentId:documentRes.id,\n      fields: [\n      {\n        fieldType: 'text-input',\n        title: 'Document Title'\n      }\n      ]\n    })\n\n    var documentUpdateRes = await document.update(documentRes.id, {\n      activeRevisionId: revisionRes.id,\n      revisionIds: [revisionRes.id],\n      title: 'Fun Document 3'\n    })\n\n    var revisionUpdatedRes = await revision.update(revisionRes.id, {\n      fields: [\n        {\n          fieldType: 'text-input',\n          title: 'Revision Title'\n        },\n        {\n          fieldType: 'text-input',\n          title: 'Description'\n        }\n      ]\n    })\n\n    expect(documentUpdateRes.title).to.equal('Fun Document 3')\n    expect(revisionUpdatedRes.fields.length).to.equal(2)\n    expect(revisionUpdatedRes.fields[0].title).to.equal('Revision Title')\n    expect(revisionUpdatedRes.fields[1].title).to.equal('Description')\n\n    done()\n\n  })\n\n})\n"
  },
  {
    "__docId__": 437,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe45",
    "testId": 45,
    "memberof": "test/unit/models/document.js",
    "testDepth": 0,
    "longname": "test/unit/models/document.js~describe45",
    "access": null,
    "description": "Document",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DocumentModel}"
      }
    ],
    "testTargets": [
      "DocumentModel"
    ]
  },
  {
    "__docId__": 438,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it46",
    "testId": 46,
    "memberof": "test/unit/models/document.js~describe45",
    "testDepth": 1,
    "longname": "test/unit/models/document.js~describe45.it46",
    "access": null,
    "description": "should initialize",
    "lineNumber": 9
  },
  {
    "__docId__": 439,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it47",
    "testId": 47,
    "memberof": "test/unit/models/document.js~describe45",
    "testDepth": 1,
    "longname": "test/unit/models/document.js~describe45.it47",
    "access": null,
    "description": "should create a document",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DocumentModel#create}"
      }
    ],
    "testTargets": [
      "DocumentModel#create"
    ]
  },
  {
    "__docId__": 440,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it48",
    "testId": 48,
    "memberof": "test/unit/models/document.js~describe45",
    "testDepth": 1,
    "longname": "test/unit/models/document.js~describe45.it48",
    "access": null,
    "description": "should get a document by ID",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{RootModel#getById}"
      }
    ],
    "testTargets": [
      "RootModel#getById"
    ]
  },
  {
    "__docId__": 441,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it49",
    "testId": 49,
    "memberof": "test/unit/models/document.js~describe45",
    "testDepth": 1,
    "longname": "test/unit/models/document.js~describe45.it49",
    "access": null,
    "description": "should get all documents",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{RootModel#getAl}"
      }
    ],
    "testTargets": [
      "RootModel#getAl"
    ]
  },
  {
    "__docId__": 442,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it50",
    "testId": 50,
    "memberof": "test/unit/models/document.js~describe45",
    "testDepth": 1,
    "longname": "test/unit/models/document.js~describe45.it50",
    "access": null,
    "description": "should update a document",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DocumentModel#update}"
      }
    ],
    "testTargets": [
      "DocumentModel#update"
    ]
  },
  {
    "__docId__": 443,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it51",
    "testId": 51,
    "memberof": "test/unit/models/document.js~describe45",
    "testDepth": 1,
    "longname": "test/unit/models/document.js~describe45.it51",
    "access": null,
    "description": "should create a document revision",
    "lineNumber": 88,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DocumentRevisionModel#create}"
      }
    ],
    "testTargets": [
      "DocumentRevisionModel#create"
    ]
  },
  {
    "__docId__": 444,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it52",
    "testId": 52,
    "memberof": "test/unit/models/document.js~describe45",
    "testDepth": 1,
    "longname": "test/unit/models/document.js~describe45.it52",
    "access": null,
    "description": "should get a revision by ID",
    "lineNumber": 117,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DocumentRevisionModel#getById}"
      }
    ],
    "testTargets": [
      "DocumentRevisionModel#getById"
    ]
  },
  {
    "__docId__": 445,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it53",
    "testId": 53,
    "memberof": "test/unit/models/document.js~describe45",
    "testDepth": 1,
    "longname": "test/unit/models/document.js~describe45.it53",
    "access": null,
    "description": "should get All revision",
    "lineNumber": 147,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DocumentRevisionModel#getAll}"
      }
    ],
    "testTargets": [
      "DocumentRevisionModel#getAll"
    ]
  },
  {
    "__docId__": 446,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it54",
    "testId": 54,
    "memberof": "test/unit/models/document.js~describe45",
    "testDepth": 1,
    "longname": "test/unit/models/document.js~describe45.it54",
    "access": null,
    "description": "should update a document revision",
    "lineNumber": 176,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DocumentRevisionModel#update}"
      }
    ],
    "testTargets": [
      "DocumentRevisionModel#update"
    ]
  },
  {
    "__docId__": 447,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/models/organization.js",
    "memberof": null,
    "longname": "test/unit/models/organization.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type} from 'eisley'\n\nimport OrganizationModel from '../../../src/models/organization'\n\n/** @test {OrganizationModel} */\ndescribe('Organization', function() {\n\n  it('should initialize', function(done) {\n\n    var organization = new OrganizationModel()\n\n    expect(organization.name).to.be.equal('organizations')\n\n    done()\n\n  })\n\n  /** @test {OrganizationModel#create} */\n  it('should create an organization',  async function(done) {\n\n    var organization = new OrganizationModel()\n\n    var res = await organization.create({\n      desc:'cool organization',\n      title:'My organization'\n    })\n\n    expect(res.title).to.equal('My organization')\n\n    done()\n\n  })\n\n  /** @test {OrganizationModel#getById} */\n  it('should get an organization by id',  async function(done) {\n\n    var organization = new OrganizationModel()\n\n    var responseOrganization = await organization.create({\n      desc:'cool organization',\n      title:'My organization'\n    })\n\n    var responseGetById = await organization.getById(responseOrganization.id)\n\n    expect(responseGetById.title).to.equal('My organization')\n\n    done()\n\n  })\n\n  /** @test {OrganizationModel#getAll}**/\n  it('should get all organizations', async function(done) {\n\n    var organization = new OrganizationModel()\n\n    var responseOrganization = await organization.create({\n      desc:'cool organization',\n      title:'My organization'\n    })\n\n    var responseAll = await organization.getAll()\n\n    expect(responseAll.length > 0).to.be.true\n\n    done()\n\n  })\n\n  /** @test {RootModel#update} */\n  it('should update an organization', async function(done) {\n\n    var organization = new OrganizationModel()\n\n    var responseOrganization = await organization.create({\n      desc: 'cool organization',\n      title: 'My organization'\n    })\n\n    var responseUpdated = await organization.update(responseOrganization.id, {\n      desc: 'cooler organization',\n      title: 'My updated organization'\n    })\n\n    expect(responseUpdated.desc).to.equal('cooler organization')\n    expect(responseUpdated.title).to.equal('My updated organization')\n\n    done()\n\n  })\n\n})\n"
  },
  {
    "__docId__": 448,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe55",
    "testId": 55,
    "memberof": "test/unit/models/organization.js",
    "testDepth": 0,
    "longname": "test/unit/models/organization.js~describe55",
    "access": null,
    "description": "Organization",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{OrganizationModel}"
      }
    ],
    "testTargets": [
      "OrganizationModel"
    ]
  },
  {
    "__docId__": 449,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it56",
    "testId": 56,
    "memberof": "test/unit/models/organization.js~describe55",
    "testDepth": 1,
    "longname": "test/unit/models/organization.js~describe55.it56",
    "access": null,
    "description": "should initialize",
    "lineNumber": 8
  },
  {
    "__docId__": 450,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it57",
    "testId": 57,
    "memberof": "test/unit/models/organization.js~describe55",
    "testDepth": 1,
    "longname": "test/unit/models/organization.js~describe55.it57",
    "access": null,
    "description": "should create an organization",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{OrganizationModel#create}"
      }
    ],
    "testTargets": [
      "OrganizationModel#create"
    ]
  },
  {
    "__docId__": 451,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it58",
    "testId": 58,
    "memberof": "test/unit/models/organization.js~describe55",
    "testDepth": 1,
    "longname": "test/unit/models/organization.js~describe55.it58",
    "access": null,
    "description": "should get an organization by id",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{OrganizationModel#getById}"
      }
    ],
    "testTargets": [
      "OrganizationModel#getById"
    ]
  },
  {
    "__docId__": 452,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it59",
    "testId": 59,
    "memberof": "test/unit/models/organization.js~describe55",
    "testDepth": 1,
    "longname": "test/unit/models/organization.js~describe55.it59",
    "access": null,
    "description": "should get all organizations",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{OrganizationModel#getAll}*"
      }
    ],
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 453,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it60",
    "testId": 60,
    "memberof": "test/unit/models/organization.js~describe55",
    "testDepth": 1,
    "longname": "test/unit/models/organization.js~describe55.it60",
    "access": null,
    "description": "should update an organization",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{RootModel#update}"
      }
    ],
    "testTargets": [
      "RootModel#update"
    ]
  },
  {
    "__docId__": 454,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/models/root.js",
    "memberof": null,
    "longname": "test/unit/models/root.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type} from 'eisley'\n\nimport RootModel from '../../../src/models/root'\n\n/** @test {RootModel} */\ndescribe('Root', function() {\n\n  it('should initialize', function(done) {\n\n    var model = new RootModel({\n      name: 'root',\n      schema: new Schema({\n        foo: type('string')\n      })\n    })\n\n    expect(model).to.be.an('object')\n    expect(model.create).to.be.a('function')\n    expect(model.delete).to.be.a('function')\n    expect(model.emit).to.be.a('function')\n    expect(model.getAll).to.be.a('function')\n    expect(model.getById).to.be.a('function')\n    expect(model.getRelations).to.be.a('function')\n    expect(model.insertReference).to.be.a('function')\n    expect(model.name).to.equal('root')\n    expect(model.off).to.be.a('function')\n    expect(model.on).to.be.a('function')\n    expect(model.once).to.be.a('function')\n    expect(model.referenceTo).to.be.a('function')\n    expect(model.schema).to.be.an('object')\n    expect(model.table).to.equal('root')\n    expect(model.update).to.be.a('function')\n\n    done()\n\n  })\n\n  /** @test {RootModel#create} */\n  it('should create', async function(done) {\n\n    var model = new RootModel({\n      name: 'root',\n      schema: new Schema({\n        foo: type('string')\n      })\n    })\n\n    var res = await model.create({\n      foo: 'bar'\n    })\n\n    expect(res.foo).to.equal('bar')\n\n    done()\n\n  })\n\n  /** @test {RootModel#create} */\n  it('should not create; failed validation', async function(done) {\n\n    var model = new RootModel({\n      name: 'root',\n      schema: new Schema({\n        foo: type('string')\n      })\n    })\n\n    try {\n      var res = await model.create({\n        foo: 2\n      })\n    }\n    catch(err) {\n\n      expect(err).to.be.an('array')\n      expect(err[0].schemaKey).to.equal('foo')\n\n    }\n\n    done()\n\n  })\n\n  /** @test {RootModel#getById} */\n  it('should get by ID', async function(done) {\n\n    var model = new RootModel({\n      name: 'root',\n      schema: new Schema({\n        foo: type('string')\n      })\n    })\n\n    var res = await model.create({\n      foo: 'bar'\n    })\n\n    var res2 = await model.getById(res.id)\n\n    expect(res2.foo).to.equal('bar')\n\n    done()\n\n  })\n\n  /** @test {RootModel#getAll} */\n  it('should get all', async function(done) {\n\n    var model = new RootModel({\n      name: 'root',\n      schema: new Schema({\n        foo: type('string')\n      })\n    })\n\n    var res = await model.create({\n      foo: 'bar'\n    })\n\n    var res2 = await model.getAll()\n\n    expect(res2.length > 0).to.be.true\n\n    done()\n\n  })\n\n  /** @test {RootModel#update} */\n  it('should update', async function(done) {\n\n    var model = new RootModel({\n      name: 'root',\n      schema: new Schema({\n        foo: type('string')\n      })\n    })\n\n    var res = await model.create({\n      foo: 'bar'\n    })\n\n    var res2 = await model.update(res.id, {\n      foo: 'baz'\n    })\n\n    expect(res2.foo).to.equal('baz')\n\n    done()\n\n  })\n\n  /** @test {RootModel#create} */\n  it('should not update; failed validation', async function(done) {\n\n    var model = new RootModel({\n      name: 'root',\n      schema: new Schema({\n        foo: type('string')\n      })\n    })\n\n    var res = await model.create({\n      foo: 'bar'\n    })\n\n    try {\n      var res2 = await model.update(res.id, {\n        foo: 2\n      })\n    }\n    catch(err) {\n\n      expect(err).to.be.an('array')\n      expect(err[0].schemaKey).to.equal('foo')\n\n      done()\n    }\n\n  })\n\n  it('should validate successfully', function(done) {\n\n    var model = new RootModel({\n      name: 'root',\n      schema: new Schema({\n        foo: type('string')\n      })\n    })\n\n    var valid = model.validate({foo: 'bar'})\n\n    expect(typeof valid.err).to.equal('undefined')\n\n    done()\n\n  })\n\n  it('should validate unsuccessfully', function(done) {\n\n    var model = new RootModel({\n      name: 'root',\n      schema: new Schema({\n        foo: type('string')\n      })\n    })\n\n    var valid = model.validate({foo: 2})\n\n    expect(valid.err).to.be.an('array')\n\n    done()\n\n  })\n\n})\n"
  },
  {
    "__docId__": 455,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe61",
    "testId": 61,
    "memberof": "test/unit/models/root.js",
    "testDepth": 0,
    "longname": "test/unit/models/root.js~describe61",
    "access": null,
    "description": "Root",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{RootModel}"
      }
    ],
    "testTargets": [
      "RootModel"
    ]
  },
  {
    "__docId__": 456,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it62",
    "testId": 62,
    "memberof": "test/unit/models/root.js~describe61",
    "testDepth": 1,
    "longname": "test/unit/models/root.js~describe61.it62",
    "access": null,
    "description": "should initialize",
    "lineNumber": 8
  },
  {
    "__docId__": 457,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it63",
    "testId": 63,
    "memberof": "test/unit/models/root.js~describe61",
    "testDepth": 1,
    "longname": "test/unit/models/root.js~describe61.it63",
    "access": null,
    "description": "should create",
    "lineNumber": 39,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{RootModel#create}"
      }
    ],
    "testTargets": [
      "RootModel#create"
    ]
  },
  {
    "__docId__": 458,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it64",
    "testId": 64,
    "memberof": "test/unit/models/root.js~describe61",
    "testDepth": 1,
    "longname": "test/unit/models/root.js~describe61.it64",
    "access": null,
    "description": "should not create; failed validation",
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{RootModel#create}"
      }
    ],
    "testTargets": [
      "RootModel#create"
    ]
  },
  {
    "__docId__": 459,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it65",
    "testId": 65,
    "memberof": "test/unit/models/root.js~describe61",
    "testDepth": 1,
    "longname": "test/unit/models/root.js~describe61.it65",
    "access": null,
    "description": "should get by ID",
    "lineNumber": 85,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{RootModel#getById}"
      }
    ],
    "testTargets": [
      "RootModel#getById"
    ]
  },
  {
    "__docId__": 460,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it66",
    "testId": 66,
    "memberof": "test/unit/models/root.js~describe61",
    "testDepth": 1,
    "longname": "test/unit/models/root.js~describe61.it66",
    "access": null,
    "description": "should get all",
    "lineNumber": 107,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{RootModel#getAll}"
      }
    ],
    "testTargets": [
      "RootModel#getAll"
    ]
  },
  {
    "__docId__": 461,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it67",
    "testId": 67,
    "memberof": "test/unit/models/root.js~describe61",
    "testDepth": 1,
    "longname": "test/unit/models/root.js~describe61.it67",
    "access": null,
    "description": "should update",
    "lineNumber": 129,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{RootModel#update}"
      }
    ],
    "testTargets": [
      "RootModel#update"
    ]
  },
  {
    "__docId__": 462,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it68",
    "testId": 68,
    "memberof": "test/unit/models/root.js~describe61",
    "testDepth": 1,
    "longname": "test/unit/models/root.js~describe61.it68",
    "access": null,
    "description": "should not update; failed validation",
    "lineNumber": 153,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{RootModel#create}"
      }
    ],
    "testTargets": [
      "RootModel#create"
    ]
  },
  {
    "__docId__": 463,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it69",
    "testId": 69,
    "memberof": "test/unit/models/root.js~describe61",
    "testDepth": 1,
    "longname": "test/unit/models/root.js~describe61.it69",
    "access": null,
    "description": "should validate successfully",
    "lineNumber": 181
  },
  {
    "__docId__": 464,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it70",
    "testId": 70,
    "memberof": "test/unit/models/root.js~describe61",
    "testDepth": 1,
    "longname": "test/unit/models/root.js~describe61.it70",
    "access": null,
    "description": "should validate unsuccessfully",
    "lineNumber": 198
  },
  {
    "__docId__": 465,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/models/taxonomy.js",
    "memberof": null,
    "longname": "test/unit/models/taxonomy.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type} from 'eisley'\nimport TaxonomyModel  from '../../../src/models/taxonomy'\n\n/** @test {TaxonomyModel} */\ndescribe('Taxonomy', function() {\n\n  it('should initialize', function(done) {\n\n    var taxonomy = new TaxonomyModel()\n\n    expect(taxonomy.name).to.be.equal('taxonomies')\n\n    done()\n\n  })\n\n  /** @test {TaxonomyModel#create} */\n  it('should create a taxonomy', async function(done) {\n\n      var tag = new TaxonomyModel()\n\n      var res = await tag.create({\n        title: 'Sports',\n        slug: 'sports',\n        desc: 'All of our sports content'\n      })\n\n      expect(res.title).to.equal('Sports')\n      expect(res.slug).to.equal('sports')\n      expect(res.desc).to.equal('All of our sports content')\n\n    done()\n\n  })\n\n  /** @test {TaxonomyModel#getById} */\n  it('should get by ID', async function(done) {\n\n    var tag = new TaxonomyModel()\n\n    var res = await tag.create({\n      title: 'Sports',\n      slug: 'sports',\n      desc: 'All of our sports content'\n    })\n\n    var res2 = await tag.getById(res.id)\n\n    expect(res.title).to.equal('Sports')\n    expect(res.slug).to.equal('sports')\n    expect(res.desc).to.equal('All of our sports content')\n\n    done()\n\n  })\n\n  /** @test {TaxonomyModel#getAll} */\n  it('should get all', async function(done) {\n\n    var tag = new TaxonomyModel({\n    })\n\n    var res = await tag.create({\n      title: 'Sports',\n      slug: 'sports',\n      desc: 'All of our sports content'\n    })\n\n    var res2 = await tag.getAll()\n\n    expect(res2.length > 0).to.be.true\n\n    done()\n\n  })\n\n  /** @test {TaxonomyModel#update} */\n  it('should update a taxonomy', async function(done) {\n\n    var tag = new TaxonomyModel()\n\n    var res = await tag.create({\n      title: 'Sports',\n      slug: 'sports',\n      desc: 'All of our sports content'\n    })\n\n    var res2 = await tag.update(res.id, {\n      title: 'Sports & Scores',\n      slug: 'sports_and_scores',\n      desc: 'All of our sports content and the scores'\n    })\n\n    expect(res2.title).to.equal('Sports & Scores')\n    expect(res2.slug).to.equal('sports_and_scores')\n    expect(res2.desc).to.equal('All of our sports content and the scores')\n\n    done()\n\n  }\n)\n})\n"
  },
  {
    "__docId__": 466,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe71",
    "testId": 71,
    "memberof": "test/unit/models/taxonomy.js",
    "testDepth": 0,
    "longname": "test/unit/models/taxonomy.js~describe71",
    "access": null,
    "description": "Taxonomy",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TaxonomyModel}"
      }
    ],
    "testTargets": [
      "TaxonomyModel"
    ]
  },
  {
    "__docId__": 467,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it72",
    "testId": 72,
    "memberof": "test/unit/models/taxonomy.js~describe71",
    "testDepth": 1,
    "longname": "test/unit/models/taxonomy.js~describe71.it72",
    "access": null,
    "description": "should initialize",
    "lineNumber": 7
  },
  {
    "__docId__": 468,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it73",
    "testId": 73,
    "memberof": "test/unit/models/taxonomy.js~describe71",
    "testDepth": 1,
    "longname": "test/unit/models/taxonomy.js~describe71.it73",
    "access": null,
    "description": "should create a taxonomy",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TaxonomyModel#create}"
      }
    ],
    "testTargets": [
      "TaxonomyModel#create"
    ]
  },
  {
    "__docId__": 469,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it74",
    "testId": 74,
    "memberof": "test/unit/models/taxonomy.js~describe71",
    "testDepth": 1,
    "longname": "test/unit/models/taxonomy.js~describe71.it74",
    "access": null,
    "description": "should get by ID",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TaxonomyModel#getById}"
      }
    ],
    "testTargets": [
      "TaxonomyModel#getById"
    ]
  },
  {
    "__docId__": 470,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it75",
    "testId": 75,
    "memberof": "test/unit/models/taxonomy.js~describe71",
    "testDepth": 1,
    "longname": "test/unit/models/taxonomy.js~describe71.it75",
    "access": null,
    "description": "should get all",
    "lineNumber": 58,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TaxonomyModel#getAll}"
      }
    ],
    "testTargets": [
      "TaxonomyModel#getAll"
    ]
  },
  {
    "__docId__": 471,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it76",
    "testId": 76,
    "memberof": "test/unit/models/taxonomy.js~describe71",
    "testDepth": 1,
    "longname": "test/unit/models/taxonomy.js~describe71.it76",
    "access": null,
    "description": "should update a taxonomy",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TaxonomyModel#update}"
      }
    ],
    "testTargets": [
      "TaxonomyModel#update"
    ]
  },
  {
    "__docId__": 472,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/models/template.js",
    "memberof": null,
    "longname": "test/unit/models/template.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type} from 'eisley'\n\nimport TemplateModel         from '../../../src/models/template'\nimport TemplateRevisionModel from '../../../src/models/template-revision'\n\ndescribe('Template', function() {\n\n  it('should initialize', function(done) {\n\n    var template = new TemplateModel()\n\n    expect(template.name).to.be.equal('templates')\n\n    done()\n\n  })\n\n  /** @test {TemplateModel#create} */\n  it('should create a template',  async (done) => {\n\n    var template = new TemplateModel()\n\n    var res = await template.create({\n      title: 'Fun Template'\n    })\n\n    expect(res.title).to.equal('Fun Template')\n\n    done()\n\n  })\n\n  /** @test {TemplateModel#getByID} */\n  it('should get a template by ID', async function(done){\n\n    var template = new  TemplateModel()\n\n    var templateRes = await template.create({\n      title: 'Fun Template'\n    })\n\n    var getByIdResponse = await  template.getById(templateRes.id)\n\n    expect(getByIdResponse.title).to.equal('Fun Template')\n\n    done()\n\n  })\n\n  /** @test {TemplateModel#getAll} **/\n  it('should get all templates', async function(done){\n\n    var template = new  TemplateModel()\n\n    var templateRes = await template.create({\n      title: 'Fun Template'\n    })\n\n    var getAllResponse = await template.getAll();\n    expect(getAllResponse.length > 0).to.be.true\n\n    done()\n\n  })\n\n  /** @test {TemplateModel#update} */\n  it('should update a template ', async function(done) {\n\n    var  template = new TemplateModel()\n\n    var templateRes = await template.create({\n      title: 'Fun Template'\n    })\n\n    var templateUpdateRes= await template.update(templateRes.id, {\n      title: 'Fun Template 3'\n    })\n\n    expect(templateUpdateRes.title).to.equal('Fun Template 3')\n\n    done()\n\n  })\n\n  /** @test {TemplateRevisionModel#create} */\n  it('should create a template revision',  async function(done) {\n\n    var template = new TemplateModel()\n\n    var res = await template.create({\n      title: 'Fun Template'\n    })\n\n    var revision = new TemplateRevisionModel({\n      templateId: res.id\n    })\n\n    var res2 = await revision.create({\n      fields: [\n      {\n        fieldType: 'text-input',\n        title: 'Document Title'\n      }\n      ]\n    })\n\n    var res3 = await template.update(res.id, {\n      activeRevisionId: res2.id,\n      revisionIds: [res2.id],\n      title: 'Fun Template 2'\n    })\n\n    expect(res2.fields.length).to.equal(1)\n    expect(res2.fields[0].title).to.equal('Document Title')\n    expect(res3.activeRevisionId).to.equal(res2.id)\n    expect(res3.title).to.equal('Fun Template 2')\n\n    done()\n\n  })\n\n  /** @test {TemplateModel#getByID} */\n  it('should get a template by ID', async function(done){\n\n    var template = new  TemplateModel()\n\n    var templateRes = await template.create({\n      title: 'Fun Template'\n    })\n\n    var revision = new TemplateRevisionModel({\n      templateId: templateRes.id\n    })\n\n    var revisionRes = await revision.create({\n      fields: [\n      {\n        fieldType: 'text-input',\n        title: 'Document Title'\n      }\n      ]\n    })\n\n    var getByIdRes = await  revision.getById(revisionRes.id)\n\n\n    expect(getByIdRes.fields.length).to.equal(1)\n    expect(getByIdRes.fields[0].title).to.equal('Document Title')\n\n    done()\n\n  })\n\n  /** @test {TemplateModel#getAll} **/\n  it('should get all templates revisions', async function(done){\n\n    var template = new TemplateModel()\n\n    var templateRes = await template.create({\n      title: 'Fun Template'\n    })\n\n    var revision = new TemplateRevisionModel({\n      templateId: templateRes.id\n    })\n\n    var revisionRes = await revision.create({\n      fields: [\n      {\n        fieldType: 'text-input',\n        title: 'Document Title'\n      }\n      ]\n    })\n\n    var getAllResponse = await revision.getAll();\n\n    expect(getAllResponse.length > 0).to.be.true\n\n    done()\n\n  })\n\n  /** @test {TemplateRevisionModel#update} */\n  it('should update a template revision',  async function(done) {\n\n    var template = new TemplateModel()\n\n    var res = await template.create({\n      title: 'Fun Template'\n    })\n\n    var revision = new TemplateRevisionModel({\n      templateId: res.id\n    })\n\n    var res2 = await revision.create({\n      fields: [\n      {\n        fieldType: 'text-input',\n        title: 'Document Title'\n      }\n      ]\n    })\n\n    var res3 = await template.update(res.id, {\n      activeRevisionId: res2.id,\n      revisionIds: [res2.id],\n      title: 'Fun Template 2'\n    })\n\n    var res4 = await revision.update(res2.id, {\n      fields: [\n      {\n        fieldType: 'text-input',\n        title: 'Revision Title'\n      },\n      {\n        fieldType: 'text-input',\n        title: 'Description'\n      }\n      ]\n    })\n\n    expect(res3.title).to.equal('Fun Template 2')\n    expect(res4.fields.length).to.equal(2)\n    expect(res4.fields[0].title).to.equal('Revision Title')\n    expect(res4.fields[1].title).to.equal('Description')\n\n    done()\n\n  })\n\n})\n"
  },
  {
    "__docId__": 473,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe77",
    "testId": 77,
    "memberof": "test/unit/models/template.js",
    "testDepth": 0,
    "longname": "test/unit/models/template.js~describe77",
    "access": null,
    "description": "Template",
    "lineNumber": 6
  },
  {
    "__docId__": 474,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it78",
    "testId": 78,
    "memberof": "test/unit/models/template.js~describe77",
    "testDepth": 1,
    "longname": "test/unit/models/template.js~describe77.it78",
    "access": null,
    "description": "should initialize",
    "lineNumber": 8
  },
  {
    "__docId__": 475,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it79",
    "testId": 79,
    "memberof": "test/unit/models/template.js~describe77",
    "testDepth": 1,
    "longname": "test/unit/models/template.js~describe77.it79",
    "access": null,
    "description": "should create a template",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TemplateModel#create}"
      }
    ],
    "testTargets": [
      "TemplateModel#create"
    ]
  },
  {
    "__docId__": 476,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it80",
    "testId": 80,
    "memberof": "test/unit/models/template.js~describe77",
    "testDepth": 1,
    "longname": "test/unit/models/template.js~describe77.it80",
    "access": null,
    "description": "should get a template by ID",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TemplateModel#getByID}"
      }
    ],
    "testTargets": [
      "TemplateModel#getByID"
    ]
  },
  {
    "__docId__": 477,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it81",
    "testId": 81,
    "memberof": "test/unit/models/template.js~describe77",
    "testDepth": 1,
    "longname": "test/unit/models/template.js~describe77.it81",
    "access": null,
    "description": "should get all templates",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TemplateModel#getAll} *"
      }
    ],
    "testTargets": [
      "TemplateModel#getAll"
    ]
  },
  {
    "__docId__": 478,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it82",
    "testId": 82,
    "memberof": "test/unit/models/template.js~describe77",
    "testDepth": 1,
    "longname": "test/unit/models/template.js~describe77.it82",
    "access": null,
    "description": "should update a template ",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TemplateModel#update}"
      }
    ],
    "testTargets": [
      "TemplateModel#update"
    ]
  },
  {
    "__docId__": 479,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it83",
    "testId": 83,
    "memberof": "test/unit/models/template.js~describe77",
    "testDepth": 1,
    "longname": "test/unit/models/template.js~describe77.it83",
    "access": null,
    "description": "should create a template revision",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TemplateRevisionModel#create}"
      }
    ],
    "testTargets": [
      "TemplateRevisionModel#create"
    ]
  },
  {
    "__docId__": 480,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it84",
    "testId": 84,
    "memberof": "test/unit/models/template.js~describe77",
    "testDepth": 1,
    "longname": "test/unit/models/template.js~describe77.it84",
    "access": null,
    "description": "should get a template by ID",
    "lineNumber": 123,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TemplateModel#getByID}"
      }
    ],
    "testTargets": [
      "TemplateModel#getByID"
    ]
  },
  {
    "__docId__": 481,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it85",
    "testId": 85,
    "memberof": "test/unit/models/template.js~describe77",
    "testDepth": 1,
    "longname": "test/unit/models/template.js~describe77.it85",
    "access": null,
    "description": "should get all templates revisions",
    "lineNumber": 155,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TemplateModel#getAll} *"
      }
    ],
    "testTargets": [
      "TemplateModel#getAll"
    ]
  },
  {
    "__docId__": 482,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it86",
    "testId": 86,
    "memberof": "test/unit/models/template.js~describe77",
    "testDepth": 1,
    "longname": "test/unit/models/template.js~describe77.it86",
    "access": null,
    "description": "should update a template revision",
    "lineNumber": 185,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TemplateRevisionModel#update}"
      }
    ],
    "testTargets": [
      "TemplateRevisionModel#update"
    ]
  },
  {
    "__docId__": 483,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/models/user.js",
    "memberof": null,
    "longname": "test/unit/models/user.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type} from 'eisley'\nimport UserModel      from '../../../src/models/user'\n\n/** @test {UserModel} */\ndescribe('User', function() {\n\n  it('should initialize', function(done) {\n\n    var user = new UserModel()\n\n    expect(user.name).to.be.equal('users')\n\n    done()\n\n  })\n\n  /** @test {UserModel#create} */\n  it('should create a user', async function(done) {\n\n    var user = new UserModel()\n\n    var res = await user.create({\n      username: 'tedtalks2000',\n      email: 'ted@email.com',\n      password: 'foo88'\n    })\n\n    expect(res.username).to.equal('tedtalks2000')\n    expect(res.email).to.equal('ted@email.com')\n    expect(res.password).to.be.undefined\n    expect(res.hash).to.be.a('string')\n\n    done()\n\n  })\n\n  /** @test {UserModel#getById} */\n  it('should get by ID', async function(done) {\n\n    var user = new UserModel({\n    })\n\n    var res = await user.create({\n      username: 'tedtalks2000',\n      email: 'ted@email.com',\n      password: 'foo88'\n    })\n\n    var res2 = await user.getById(res.id)\n\n    expect(res2.username).to.equal('tedtalks2000')\n    expect(res2.email).to.equal('ted@email.com')\n    expect(res2.password).to.be.undefined\n    expect(res2.hash).to.be.a('string')\n\n    done()\n\n  })\n\n  /** @test {UserModel#getAll} */\n  it('should get all', async function(done) {\n\n    var user = new UserModel({\n      name: 'root'\n    })\n\n    var res = await user.create({\n      username: 'tedtalks2000',\n      email: 'ted@email.com',\n      password: 'foo88'\n    })\n\n    var res2 = await user.getAll()\n\n    expect(res2.length > 0).to.be.true\n\n    done()\n\n  })\n\n  /** @test {UserModel#update} */\n  it('should update a user', async function(done) {\n\n    var user = new UserModel()\n\n    var res = await user.create({\n      username: 'tedtalks2000',\n      email: 'ted@email.com',\n      password: 'foo88'\n    })\n\n    var res2 = await user.update(res.id, {\n      firstName: 'Theodore',\n      lastName: 'Talkington',\n      username: 'tedtalks200',\n      email: 'ted2000@email.com'\n    })\n\n    expect(res2.firstName).to.equal('Theodore')\n    expect(res2.lastName).to.equal('Talkington')\n    expect(res2.username).to.equal('tedtalks200')\n    expect(res2.email).to.equal('ted2000@email.com')\n    expect(res2.password).to.be.undefined\n    expect(res2.hash).to.be.a('string')\n\n    done()\n\n  }\n)\n})\n"
  },
  {
    "__docId__": 484,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe87",
    "testId": 87,
    "memberof": "test/unit/models/user.js",
    "testDepth": 0,
    "longname": "test/unit/models/user.js~describe87",
    "access": null,
    "description": "User",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{UserModel}"
      }
    ],
    "testTargets": [
      "UserModel"
    ]
  },
  {
    "__docId__": 485,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it88",
    "testId": 88,
    "memberof": "test/unit/models/user.js~describe87",
    "testDepth": 1,
    "longname": "test/unit/models/user.js~describe87.it88",
    "access": null,
    "description": "should initialize",
    "lineNumber": 7
  },
  {
    "__docId__": 486,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it89",
    "testId": 89,
    "memberof": "test/unit/models/user.js~describe87",
    "testDepth": 1,
    "longname": "test/unit/models/user.js~describe87.it89",
    "access": null,
    "description": "should create a user",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{UserModel#create}"
      }
    ],
    "testTargets": [
      "UserModel#create"
    ]
  },
  {
    "__docId__": 487,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it90",
    "testId": 90,
    "memberof": "test/unit/models/user.js~describe87",
    "testDepth": 1,
    "longname": "test/unit/models/user.js~describe87.it90",
    "access": null,
    "description": "should get by ID",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{UserModel#getById}"
      }
    ],
    "testTargets": [
      "UserModel#getById"
    ]
  },
  {
    "__docId__": 488,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it91",
    "testId": 91,
    "memberof": "test/unit/models/user.js~describe87",
    "testDepth": 1,
    "longname": "test/unit/models/user.js~describe87.it91",
    "access": null,
    "description": "should get all",
    "lineNumber": 61,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{UserModel#getAll}"
      }
    ],
    "testTargets": [
      "UserModel#getAll"
    ]
  },
  {
    "__docId__": 489,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it92",
    "testId": 92,
    "memberof": "test/unit/models/user.js~describe87",
    "testDepth": 1,
    "longname": "test/unit/models/user.js~describe87.it92",
    "access": null,
    "description": "should update a user",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{UserModel#update}"
      }
    ],
    "testTargets": [
      "UserModel#update"
    ]
  },
  {
    "__docId__": 490,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/routes/auth.js",
    "memberof": null,
    "longname": "test/unit/routes/auth.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import MockHTTPServer from '../../helpers/mock-http-server'\nimport {Schema, type} from 'eisley'\n\nimport UserModel      from '../../../src/models/user'\n\ndescribe('Auth', function() {\n\n  it('should not login a user via POST; missing login data', async function(done) {\n\n    var pkg = {\n      username: 'robthebarron',\n      password: 'forgotmywolf'\n    }\n\n    var res = await new MockHTTPServer()\n      .post(`/api/v${process.env.API_VERSION}/auth/login`)\n      .send(pkg)\n\n    expect(res.body.status).to.equal(403)\n\n    done()\n\n  })\n\n  it('should not login a user via POST; no user', async function(done) {\n\n    var pkg = {\n      username: 'robthebarron',\n      password: 'forgotmywolf'\n    }\n\n    var res = await new MockHTTPServer()\n      .post(`/api/v${process.env.API_VERSION}/auth/login`)\n      .send(pkg)\n\n    expect(res.body.status).to.equal(403)\n\n    done()\n\n  })\n\n  it('should not login a user via POST; bad password', async function(done) {\n\n    var userModel = new UserModel()\n\n    var user = await userModel.create({\n      email: 'mail@foo.com',\n      username: 'tom335599',\n      password: 'gonnacatchyou22'\n    })\n\n    var res = await new MockHTTPServer()\n      .post(`/api/v${process.env.API_VERSION}/auth/login`)\n      .send({\n        username: 'tom335599',\n        password: 'gonnacatchyou21'\n      })\n\n    expect(res.body.status).to.equal(403)\n\n    done()\n\n  })\n\n  it('should login a user via POST', async function(done) {\n\n    var userModel = new UserModel()\n\n    var user = await userModel.create({\n      email: 'mail@foo.com',\n      username: 'tom335599',\n      password: 'gonnacatchyou22'\n    })\n\n    var res = await new MockHTTPServer()\n      .post(`/api/v${process.env.API_VERSION}/auth/login`)\n      .send({\n        username: 'tom335599',\n        password: 'gonnacatchyou22'\n      })\n\n    expect(res.body.status).to.equal(200)\n    expect(res.body.pkg.username).to.equal('tom335599')\n\n    done()\n\n  })\n\n})\n"
  },
  {
    "__docId__": 491,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe93",
    "testId": 93,
    "memberof": "test/unit/routes/auth.js",
    "testDepth": 0,
    "longname": "test/unit/routes/auth.js~describe93",
    "access": null,
    "description": "Auth",
    "lineNumber": 6
  },
  {
    "__docId__": 492,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it94",
    "testId": 94,
    "memberof": "test/unit/routes/auth.js~describe93",
    "testDepth": 1,
    "longname": "test/unit/routes/auth.js~describe93.it94",
    "access": null,
    "description": "should not login a user via POST; missing login data",
    "lineNumber": 8
  },
  {
    "__docId__": 493,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it95",
    "testId": 95,
    "memberof": "test/unit/routes/auth.js~describe93",
    "testDepth": 1,
    "longname": "test/unit/routes/auth.js~describe93.it95",
    "access": null,
    "description": "should not login a user via POST; no user",
    "lineNumber": 25
  },
  {
    "__docId__": 494,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it96",
    "testId": 96,
    "memberof": "test/unit/routes/auth.js~describe93",
    "testDepth": 1,
    "longname": "test/unit/routes/auth.js~describe93.it96",
    "access": null,
    "description": "should not login a user via POST; bad password",
    "lineNumber": 42
  },
  {
    "__docId__": 495,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it97",
    "testId": 97,
    "memberof": "test/unit/routes/auth.js~describe93",
    "testDepth": 1,
    "longname": "test/unit/routes/auth.js~describe93.it97",
    "access": null,
    "description": "should login a user via POST",
    "lineNumber": 65
  },
  {
    "__docId__": 496,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/routes/organizations.js",
    "memberof": null,
    "longname": "test/unit/routes/organizations.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import MockHTTPServer from '../../helpers/mock-http-server'\nimport {Schema, type} from 'eisley'\n\nimport OrganizationController from '../../../src/controllers/organizations'\n\ndescribe('Organization', function() {\n\n  it('should create an organization via PUT', async function(done) {\n\n    var organization = new OrganizationController()\n\n    var pkg = {\n      desc: '',\n      title: 'Org 45'\n    }\n\n    var res = await new MockHTTPServer()\n      .put(`/api/v${process.env.API_VERSION}/${organization.name}`)\n      .send(pkg)\n\n    expect(res.body.pkg.title).to.equal('Org 45')\n    expect(res.body.status).to.equal(201)\n\n    done()\n\n  })\n\n  it('should get an organization by ID via GET', async function(done) {\n\n    var organization = new OrganizationController()\n\n    var pkg = {\n      desc: '',\n      title: 'Org 45'\n    }\n\n    var org = await new MockHTTPServer()\n      .put(`/api/v${process.env.API_VERSION}/${organization.name}`)\n      .send(pkg)\n\n    var orgId = org.body.pkg.id\n\n    var res = await new MockHTTPServer()\n      .get(`/api/v${process.env.API_VERSION}/${organization.name}/${orgId}`)\n\n    expect(res.body.pkg.title).to.equal('Org 45')\n    expect(res.body.status).to.equal(200)\n\n    done()\n\n  })\n\n  it('should get all organizations via GET', async function(done) {\n\n    var organization = new OrganizationController()\n\n    var pkg = {\n      desc: '',\n      title: 'Org 45'\n    }\n\n    var org = await new MockHTTPServer()\n      .put(`/api/v${process.env.API_VERSION}/${organization.name}`)\n      .send(pkg)\n\n    var res = await new MockHTTPServer()\n      .get(`/api/v${process.env.API_VERSION}/${organization.name}`)\n\n    expect(res.body.pkg.organizations.length).to.be.above(0)\n    expect(res.body.status).to.equal(200)\n\n    done()\n\n  })\n\n  it('should update an organization by ID via POST', async function(done) {\n\n    var organization = new OrganizationController()\n\n    var pkg = {\n      desc: '',\n      title: 'Org 45'\n    }\n\n    var org = await new MockHTTPServer()\n      .put(`/api/v${process.env.API_VERSION}/${organization.name}`)\n      .send(pkg)\n\n    var orgId = org.body.pkg.id\n\n    var res = await new MockHTTPServer()\n      .post(`/api/v${process.env.API_VERSION}/${organization.name}/${orgId}`)\n      .send({\n        desc: '',\n        title: 'Org 46'\n      })\n\n    var res2 = await new MockHTTPServer()\n      .get(`/api/v${process.env.API_VERSION}/${organization.name}/${orgId}`)\n\n    expect(res2.body.pkg.title).to.equal('Org 46')\n    expect(res.body.status).to.equal(200)\n\n    done()\n\n  })\n\n})\n"
  },
  {
    "__docId__": 497,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe98",
    "testId": 98,
    "memberof": "test/unit/routes/organizations.js",
    "testDepth": 0,
    "longname": "test/unit/routes/organizations.js~describe98",
    "access": null,
    "description": "Organization",
    "lineNumber": 6
  },
  {
    "__docId__": 498,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it99",
    "testId": 99,
    "memberof": "test/unit/routes/organizations.js~describe98",
    "testDepth": 1,
    "longname": "test/unit/routes/organizations.js~describe98.it99",
    "access": null,
    "description": "should create an organization via PUT",
    "lineNumber": 8
  },
  {
    "__docId__": 499,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it100",
    "testId": 100,
    "memberof": "test/unit/routes/organizations.js~describe98",
    "testDepth": 1,
    "longname": "test/unit/routes/organizations.js~describe98.it100",
    "access": null,
    "description": "should get an organization by ID via GET",
    "lineNumber": 28
  },
  {
    "__docId__": 500,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it101",
    "testId": 101,
    "memberof": "test/unit/routes/organizations.js~describe98",
    "testDepth": 1,
    "longname": "test/unit/routes/organizations.js~describe98.it101",
    "access": null,
    "description": "should get all organizations via GET",
    "lineNumber": 53
  },
  {
    "__docId__": 501,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it102",
    "testId": 102,
    "memberof": "test/unit/routes/organizations.js~describe98",
    "testDepth": 1,
    "longname": "test/unit/routes/organizations.js~describe98.it102",
    "access": null,
    "description": "should update an organization by ID via POST",
    "lineNumber": 76
  },
  {
    "__docId__": 502,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/server/dispatcher.js",
    "memberof": null,
    "longname": "test/unit/server/dispatcher.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Dispatcher     from '../../../src/server/dispatcher'\nimport expressObjects from '../../helpers/expressObjects'\n\nclass FooController {\n\n  constructor() {\n\n  }\n\n  // 20x response\n  respond200() {\n    return new Promise( (resolve, reject) => {\n\n      resolve({\n        desc: 'Wow!',\n        title: 'Macha'\n      })\n\n    })\n  }\n\n  // 403 response\n  respond403() {\n    return new Promise( (resolve, reject) => {\n\n      reject({\n        desc: 'Fail',\n        title: 'Macha'\n      })\n\n    })\n  }\n\n}\n\n/** @test {Dispatcher} */\ndescribe('Dispatcher', function() {\n\n  it('should initialize', function(done) {\n\n    var dispatcher = new Dispatcher()\n\n    expect(dispatcher).to.be.an('object')\n    expect(dispatcher.dispatch).to.be.a('function')\n\n    done()\n\n  })\n\n  /** @test {Dispatcher#dispatch} */\n  it('should dispatch a 200', function(done) {\n\n    var dispatcher    = new Dispatcher(),\n        fooController = new FooController()\n\n    var fireDispatch = dispatcher.dispatch(fooController, 'respond200')\n\n    var expObj = new expressObjects(),\n        req    = expObj.req,\n        res    = expObj.res,\n        next   = expObj.next\n\n    var spy1 = sinon.spy(res, 'status')\n    var spy2 = sinon.spy(res, 'json')\n\n    fireDispatch(req, res, next)\n\n    /*\n    NOTE: The fireDispatch returns an async function, which awaits on the\n    controller's action returning it's promise. Since there is no current\n    way of knowning when the dispatcher has successfully received a response..\n    */\n    setTimeout(function() {\n\n      expect(spy1.calledOnce).to.be.true\n      expect(spy2.calledOnce).to.be.true\n      expect(res.statusCode).to.equal(200)\n\n      done()\n\n    }, 50)\n\n  })\n\n  /** @test {Dispatcher#dispatch} */\n  it('should dispatch a 201', function(done) {\n\n    var dispatcher    = new Dispatcher(),\n        fooController = new FooController()\n\n    var fireDispatch = dispatcher.dispatch(fooController, 'respond200')\n\n    var expObj = new expressObjects(),\n        req    = expObj.req,\n        res    = expObj.res,\n        next   = expObj.next\n\n    req.method = 'PUT'\n\n    var spy1 = sinon.spy(res, 'status')\n    var spy2 = sinon.spy(res, 'json')\n\n    fireDispatch(req, res, next)\n\n    setTimeout(function() {\n\n      expect(spy1.calledOnce).to.be.true\n      expect(spy2.calledOnce).to.be.true\n      expect(res.statusCode).to.equal(201)\n\n      done()\n\n    }, 50)\n\n  })\n\n  /** @test {Dispatcher#dispatch} */\n  it('should dispatch a 403', function(done) {\n\n    var dispatcher    = new Dispatcher(),\n        fooController = new FooController()\n\n    var fireDispatch = dispatcher.dispatch(fooController, 'respond403')\n\n    var expObj = new expressObjects(),\n        req    = expObj.req,\n        res    = expObj.res,\n        next   = expObj.next\n\n    var spy1 = sinon.spy(res, 'status')\n    var spy2 = sinon.spy(res, 'json')\n\n    fireDispatch(req, res, next)\n\n    setTimeout(function() {\n\n      expect(spy1.calledOnce).to.be.true\n      expect(spy2.calledOnce).to.be.true\n      expect(res.statusCode).to.equal(403)\n\n      done()\n\n    }, 50)\n\n  })\n\n})\n"
  },
  {
    "__docId__": 503,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe103",
    "testId": 103,
    "memberof": "test/unit/server/dispatcher.js",
    "testDepth": 0,
    "longname": "test/unit/server/dispatcher.js~describe103",
    "access": null,
    "description": "Dispatcher",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Dispatcher}"
      }
    ],
    "testTargets": [
      "Dispatcher"
    ]
  },
  {
    "__docId__": 504,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it104",
    "testId": 104,
    "memberof": "test/unit/server/dispatcher.js~describe103",
    "testDepth": 1,
    "longname": "test/unit/server/dispatcher.js~describe103.it104",
    "access": null,
    "description": "should initialize",
    "lineNumber": 39
  },
  {
    "__docId__": 505,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it105",
    "testId": 105,
    "memberof": "test/unit/server/dispatcher.js~describe103",
    "testDepth": 1,
    "longname": "test/unit/server/dispatcher.js~describe103.it105",
    "access": null,
    "description": "should dispatch a 200",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Dispatcher#dispatch}"
      }
    ],
    "testTargets": [
      "Dispatcher#dispatch"
    ]
  },
  {
    "__docId__": 506,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it106",
    "testId": 106,
    "memberof": "test/unit/server/dispatcher.js~describe103",
    "testDepth": 1,
    "longname": "test/unit/server/dispatcher.js~describe103.it106",
    "access": null,
    "description": "should dispatch a 201",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Dispatcher#dispatch}"
      }
    ],
    "testTargets": [
      "Dispatcher#dispatch"
    ]
  },
  {
    "__docId__": 507,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it107",
    "testId": 107,
    "memberof": "test/unit/server/dispatcher.js~describe103",
    "testDepth": 1,
    "longname": "test/unit/server/dispatcher.js~describe103.it107",
    "access": null,
    "description": "should dispatch a 403",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Dispatcher#dispatch}"
      }
    ],
    "testTargets": [
      "Dispatcher#dispatch"
    ]
  },
  {
    "__docId__": 508,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/server/index.js",
    "memberof": null,
    "longname": "test/unit/server/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Server from '../../../src/server'\n\n/** @test {Server} */\ndescribe('HTTP Server', function() {\n\n  it('should initialize', function(done) {\n\n    var api = new Server()\n\n    expect(api).to.be.an('object')\n    expect(api.debugRoutes).to.be.a('function')\n    expect(api.logRequestInfo).to.be.a('function')\n    expect(api.server).to.be.an('function') // Express server\n    expect(api.router).to.be.an('object')\n    expect(api.start).to.be.a('function')\n    expect(api.stop).to.be.a('function')\n    expect(api.use).to.be.a('function')\n\n    done()\n\n  })\n\n  /** @test {Server#start} */\n  it('should start', function(done) {\n\n    var api = new Server()\n    sinon.stub(api.server, 'listen').returns(api.server)\n\n    api.start()\n\n    expect(api.server.listen.calledOnce).to.be.true\n\n    done()\n\n  })\n\n  /** @test {Server#stop} */\n  it('should stop', function(done) {\n\n    var api = new Server()\n    sinon.stub(api.server, 'listen').returns(api.server)\n    sinon.stub(api, 'stop')\n\n    api.start()\n    api.stop()\n\n    expect(api.stop.calledOnce).to.be.true\n\n    done()\n\n  })\n\n})\n"
  },
  {
    "__docId__": 509,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe108",
    "testId": 108,
    "memberof": "test/unit/server/index.js",
    "testDepth": 0,
    "longname": "test/unit/server/index.js~describe108",
    "access": null,
    "description": "HTTP Server",
    "lineNumber": 4,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Server}"
      }
    ],
    "testTargets": [
      "Server"
    ]
  },
  {
    "__docId__": 510,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it109",
    "testId": 109,
    "memberof": "test/unit/server/index.js~describe108",
    "testDepth": 1,
    "longname": "test/unit/server/index.js~describe108.it109",
    "access": null,
    "description": "should initialize",
    "lineNumber": 6
  },
  {
    "__docId__": 511,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it110",
    "testId": 110,
    "memberof": "test/unit/server/index.js~describe108",
    "testDepth": 1,
    "longname": "test/unit/server/index.js~describe108.it110",
    "access": null,
    "description": "should start",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Server#start}"
      }
    ],
    "testTargets": [
      "Server#start"
    ]
  },
  {
    "__docId__": 512,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it111",
    "testId": 111,
    "memberof": "test/unit/server/index.js~describe108",
    "testDepth": 1,
    "longname": "test/unit/server/index.js~describe108.it111",
    "access": null,
    "description": "should stop",
    "lineNumber": 38,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Server#stop}"
      }
    ],
    "testTargets": [
      "Server#stop"
    ]
  },
  {
    "__docId__": 513,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/server/router.js",
    "memberof": null,
    "longname": "test/unit/server/router.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Dispatcher from '../../../src/server/dispatcher'\nimport Router     from '../../../src/server/router'\n\n/** @test {Router} */\ndescribe('Router', function() {\n\n  it('should initialize', function(done) {\n\n    var router = new Router({\n      dispatcher: new Dispatcher(),\n      // Basic mock Express server object\n      server: {\n        all: function() {},\n        delete: function() {},\n        get: function() {},\n        post: function() {},\n        put: function() {},\n        use: function() {}\n      }\n    })\n\n    expect(router).to.be.an('object')\n    expect(router.dispatcher).to.be.an('object')\n    expect(router.server).to.be.an('object') // HTTP Server instance\n\n    done()\n\n  })\n\n})\n"
  },
  {
    "__docId__": 514,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe112",
    "testId": 112,
    "memberof": "test/unit/server/router.js",
    "testDepth": 0,
    "longname": "test/unit/server/router.js~describe112",
    "access": null,
    "description": "Router",
    "lineNumber": 5,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Router}"
      }
    ],
    "testTargets": [
      "Router"
    ]
  },
  {
    "__docId__": 515,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it113",
    "testId": 113,
    "memberof": "test/unit/server/router.js~describe112",
    "testDepth": 1,
    "longname": "test/unit/server/router.js~describe112.it113",
    "access": null,
    "description": "should initialize",
    "lineNumber": 7
  },
  {
    "__docId__": 516,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/services/package.js",
    "memberof": null,
    "longname": "test/unit/services/package.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import PackageService from '../../../services/package'\n\ndescribe('Integration: Services: Package', function() {\n\n  it('should package an object for response (200), using defaults', function(done) {\n\n    const packageService = new PackageService()\n    let res = packageService.success({foo: 'bar'})\n\n    expect(res.pkg).to.be.an('object')\n    expect(res.pkg.foo).to.equal('bar')\n    expect(res.status).to.equal(200)\n\n    done()\n\n  })\n\n  it('should package an object for response (201), using number argument', function(done) {\n\n    const packageService = new PackageService()\n    let res = packageService.success({foo: 'bar'}, 201)\n\n    expect(res.pkg).to.be.an('object')\n    expect(res.pkg.foo).to.equal('bar')\n    expect(res.status).to.equal(201)\n\n    done()\n\n  })\n\n  it('should package an object for response (400), using object argument', function(done) {\n\n    const packageService = new PackageService()\n    let res = packageService.error({foo: 'bar'}, 400)\n\n    expect(res.err).to.be.an('object')\n    expect(res.status).to.equal(400)\n\n    done()\n\n  })\n\n})\n"
  },
  {
    "__docId__": 517,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe114",
    "testId": 114,
    "memberof": "test/unit/services/package.js",
    "testDepth": 0,
    "longname": "test/unit/services/package.js~describe114",
    "access": null,
    "description": "Integration: Services: Package",
    "lineNumber": 3
  },
  {
    "__docId__": 518,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it115",
    "testId": 115,
    "memberof": "test/unit/services/package.js~describe114",
    "testDepth": 1,
    "longname": "test/unit/services/package.js~describe114.it115",
    "access": null,
    "description": "should package an object for response (200), using defaults",
    "lineNumber": 5
  },
  {
    "__docId__": 519,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it116",
    "testId": 116,
    "memberof": "test/unit/services/package.js~describe114",
    "testDepth": 1,
    "longname": "test/unit/services/package.js~describe114.it116",
    "access": null,
    "description": "should package an object for response (201), using number argument",
    "lineNumber": 18
  },
  {
    "__docId__": 520,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it117",
    "testId": 117,
    "memberof": "test/unit/services/package.js~describe114",
    "testDepth": 1,
    "longname": "test/unit/services/package.js~describe114.it117",
    "access": null,
    "description": "should package an object for response (400), using object argument",
    "lineNumber": 31
  },
  {
    "__docId__": 521,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/services/password.js",
    "memberof": null,
    "longname": "test/unit/services/password.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Schema, type} from 'eisley'\n\nimport PasswordService from '../../../src/services/password'\n\n/** @test {PasswordService} */\ndescribe('Password', function() {\n\n  it('should initialize', function(done) {\n\n    var passwordService = new PasswordService()\n\n    expect(passwordService).to.be.an('object')\n\n    done()\n\n  })\n\n  /** @test {PasswordService#hash} */\n  it('should issue a hash',  async function(done) {\n\n    var passwordService = new PasswordService()\n\n    var hash = await passwordService.issue('foo')\n\n    expect(hash).to.be.a('string')\n\n    done()\n\n  })\n\n  /** @test {PasswordService#verify} */\n  it('should verify a password/hash',  async function(done) {\n\n    var passwordService = new PasswordService()\n\n    var hash = await passwordService.issue('foo')\n\n    var result = await passwordService.verify('foo', hash)\n\n    expect(result).to.be.true\n\n    done()\n\n  })\n\n  /** @test {PasswordService#verify} */\n  it('should not verify a password/hash',  async function(done) {\n\n    var passwordService = new PasswordService()\n\n    var hash = await passwordService.issue('foo')\n\n    try {\n      var result = await passwordService.verify('foo2', hash)\n    }\n    catch(e) {\n      done()\n    }\n\n  })\n\n})\n"
  },
  {
    "__docId__": 522,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe118",
    "testId": 118,
    "memberof": "test/unit/services/password.js",
    "testDepth": 0,
    "longname": "test/unit/services/password.js~describe118",
    "access": null,
    "description": "Password",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{PasswordService}"
      }
    ],
    "testTargets": [
      "PasswordService"
    ]
  },
  {
    "__docId__": 523,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it119",
    "testId": 119,
    "memberof": "test/unit/services/password.js~describe118",
    "testDepth": 1,
    "longname": "test/unit/services/password.js~describe118.it119",
    "access": null,
    "description": "should initialize",
    "lineNumber": 8
  },
  {
    "__docId__": 524,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it120",
    "testId": 120,
    "memberof": "test/unit/services/password.js~describe118",
    "testDepth": 1,
    "longname": "test/unit/services/password.js~describe118.it120",
    "access": null,
    "description": "should issue a hash",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{PasswordService#hash}"
      }
    ],
    "testTargets": [
      "PasswordService#hash"
    ]
  },
  {
    "__docId__": 525,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it121",
    "testId": 121,
    "memberof": "test/unit/services/password.js~describe118",
    "testDepth": 1,
    "longname": "test/unit/services/password.js~describe118.it121",
    "access": null,
    "description": "should verify a password/hash",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{PasswordService#verify}"
      }
    ],
    "testTargets": [
      "PasswordService#verify"
    ]
  },
  {
    "__docId__": 526,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it122",
    "testId": 122,
    "memberof": "test/unit/services/password.js~describe118",
    "testDepth": 1,
    "longname": "test/unit/services/password.js~describe118.it122",
    "access": null,
    "description": "should not verify a password/hash",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{PasswordService#verify}"
      }
    ],
    "testTargets": [
      "PasswordService#verify"
    ]
  },
  {
    "__docId__": 527,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/services/token.js",
    "memberof": null,
    "longname": "test/unit/services/token.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import TokenService from '../../../services/token'\n\ndescribe('Integration: Services: Token', function() {\n\n  it('should issue a token', function(done) {\n\n    var tokenService = new TokenService()\n\n    let token = tokenService.issue(1)\n\n    expect(token).to.be.a('string')\n\n    done()\n\n  })\n\n  it('should verify a token', function(done) {\n\n    var tokenService = new TokenService()\n\n    let token = tokenService.issue(1)\n\n    tokenService.verify(token, function(err, verified) {\n\n      expect(verified).to.be.true\n\n      done()\n\n    })\n\n  })\n\n})\n"
  },
  {
    "__docId__": 528,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe123",
    "testId": 123,
    "memberof": "test/unit/services/token.js",
    "testDepth": 0,
    "longname": "test/unit/services/token.js~describe123",
    "access": null,
    "description": "Integration: Services: Token",
    "lineNumber": 3
  },
  {
    "__docId__": 529,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it124",
    "testId": 124,
    "memberof": "test/unit/services/token.js~describe123",
    "testDepth": 1,
    "longname": "test/unit/services/token.js~describe123.it124",
    "access": null,
    "description": "should issue a token",
    "lineNumber": 5
  },
  {
    "__docId__": 530,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it125",
    "testId": 125,
    "memberof": "test/unit/services/token.js~describe123",
    "testDepth": 1,
    "longname": "test/unit/services/token.js~describe123.it125",
    "access": null,
    "description": "should verify a token",
    "lineNumber": 17
  },
  {
    "__docId__": 531,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/unit/suite.js",
    "memberof": null,
    "longname": "test/unit/suite.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "describe('Unit', function() {\n\n  /*describe('Lib', function() {\n    describe('Database', function() {\n      require('./lib/database/driver')\n    })\n  })*/\n\n  describe('Models', function() {\n    require('./models/root')\n    require('./models/auth')\n    require('./models/document')\n    require('./models/organization')\n    require('./models/taxonomy')\n    require('./models/template')\n    require('./models/user')\n  })\n\n  describe('Controllers', function() {\n    require('./controllers/auth')\n    require('./controllers/documents')\n    require('./controllers/organizations')\n    require('./controllers/taxonomies')\n    require('./controllers/templates')\n    require('./controllers/users')\n  })\n\n  describe('Services', function() {\n    require('./services/password')\n  })\n\n  describe('Server', function() {\n    require('./server/index')\n    require('./server/dispatcher')\n    require('./server/router')\n  })\n\n  describe('Routes', function() {\n    require('./routes/auth')\n    require('./routes/organizations')\n  })\n\n})\n"
  },
  {
    "__docId__": 532,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe126",
    "testId": 126,
    "memberof": "test/unit/suite.js",
    "testDepth": 0,
    "longname": "test/unit/suite.js~describe126",
    "access": null,
    "description": "Unit",
    "lineNumber": 1
  },
  {
    "__docId__": 533,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe127",
    "testId": 127,
    "memberof": "test/unit/suite.js~describe126",
    "testDepth": 1,
    "longname": "test/unit/suite.js~describe126.describe127",
    "access": null,
    "description": "Models",
    "lineNumber": 9
  },
  {
    "__docId__": 534,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe128",
    "testId": 128,
    "memberof": "test/unit/suite.js~describe126",
    "testDepth": 1,
    "longname": "test/unit/suite.js~describe126.describe128",
    "access": null,
    "description": "Controllers",
    "lineNumber": 19
  },
  {
    "__docId__": 535,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe129",
    "testId": 129,
    "memberof": "test/unit/suite.js~describe126",
    "testDepth": 1,
    "longname": "test/unit/suite.js~describe126.describe129",
    "access": null,
    "description": "Services",
    "lineNumber": 28
  },
  {
    "__docId__": 536,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe130",
    "testId": 130,
    "memberof": "test/unit/suite.js~describe126",
    "testDepth": 1,
    "longname": "test/unit/suite.js~describe126.describe130",
    "access": null,
    "description": "Server",
    "lineNumber": 32
  },
  {
    "__docId__": 537,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe131",
    "testId": 131,
    "memberof": "test/unit/suite.js~describe126",
    "testDepth": 1,
    "longname": "test/unit/suite.js~describe126.describe131",
    "access": null,
    "description": "Routes",
    "lineNumber": 38
  }
]